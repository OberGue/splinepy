Search.setIndex({"docnames": ["CONTRIBUTING", "_generated/splinepy", "_generated/splinepy.bezier", "_generated/splinepy.bezier.Bezier", "_generated/splinepy.bezier.Bezier.basis", "_generated/splinepy.bezier.Bezier.basis_and_support", "_generated/splinepy.bezier.Bezier.basis_derivative", "_generated/splinepy.bezier.Bezier.basis_derivative_and_support", "_generated/splinepy.bezier.Bezier.bezier", "_generated/splinepy.bezier.Bezier.bspline", "_generated/splinepy.bezier.Bezier.clear", "_generated/splinepy.bezier.Bezier.compose", "_generated/splinepy.bezier.Bezier.composition_derivative", "_generated/splinepy.bezier.Bezier.copy", "_generated/splinepy.bezier.Bezier.current_core_properties", "_generated/splinepy.bezier.Bezier.derivative", "_generated/splinepy.bezier.Bezier.derivative_spline", "_generated/splinepy.bezier.Bezier.elevate_degrees", "_generated/splinepy.bezier.Bezier.evaluate", "_generated/splinepy.bezier.Bezier.export", "_generated/splinepy.bezier.Bezier.extract_dim", "_generated/splinepy.bezier.Bezier.greville_abscissae", "_generated/splinepy.bezier.Bezier.jacobian", "_generated/splinepy.bezier.Bezier.mapper", "_generated/splinepy.bezier.Bezier.nurbs", "_generated/splinepy.bezier.Bezier.proximities", "_generated/splinepy.bezier.Bezier.rationalbezier", "_generated/splinepy.bezier.Bezier.reduce_degrees", "_generated/splinepy.bezier.Bezier.sample", "_generated/splinepy.bezier.Bezier.show", "_generated/splinepy.bezier.Bezier.showable", "_generated/splinepy.bezier.Bezier.split", "_generated/splinepy.bezier.Bezier.support", "_generated/splinepy.bezier.Bezier.todict", "_generated/splinepy.bezier.BezierBase", "_generated/splinepy.bezier.BezierBase.basis", "_generated/splinepy.bezier.BezierBase.basis_and_support", "_generated/splinepy.bezier.BezierBase.basis_derivative", "_generated/splinepy.bezier.BezierBase.basis_derivative_and_support", "_generated/splinepy.bezier.BezierBase.clear", "_generated/splinepy.bezier.BezierBase.compose", "_generated/splinepy.bezier.BezierBase.composition_derivative", "_generated/splinepy.bezier.BezierBase.copy", "_generated/splinepy.bezier.BezierBase.current_core_properties", "_generated/splinepy.bezier.BezierBase.derivative", "_generated/splinepy.bezier.BezierBase.derivative_spline", "_generated/splinepy.bezier.BezierBase.elevate_degrees", "_generated/splinepy.bezier.BezierBase.evaluate", "_generated/splinepy.bezier.BezierBase.export", "_generated/splinepy.bezier.BezierBase.extract_dim", "_generated/splinepy.bezier.BezierBase.greville_abscissae", "_generated/splinepy.bezier.BezierBase.jacobian", "_generated/splinepy.bezier.BezierBase.mapper", "_generated/splinepy.bezier.BezierBase.proximities", "_generated/splinepy.bezier.BezierBase.reduce_degrees", "_generated/splinepy.bezier.BezierBase.sample", "_generated/splinepy.bezier.BezierBase.show", "_generated/splinepy.bezier.BezierBase.showable", "_generated/splinepy.bezier.BezierBase.split", "_generated/splinepy.bezier.BezierBase.support", "_generated/splinepy.bezier.BezierBase.todict", "_generated/splinepy.bspline", "_generated/splinepy.bspline.BSpline", "_generated/splinepy.bspline.BSpline.approximate_curve", "_generated/splinepy.bspline.BSpline.approximate_surface", "_generated/splinepy.bspline.BSpline.basis", "_generated/splinepy.bspline.BSpline.basis_and_support", "_generated/splinepy.bspline.BSpline.basis_derivative", "_generated/splinepy.bspline.BSpline.basis_derivative_and_support", "_generated/splinepy.bspline.BSpline.bspline", "_generated/splinepy.bspline.BSpline.clear", "_generated/splinepy.bspline.BSpline.copy", "_generated/splinepy.bspline.BSpline.current_core_properties", "_generated/splinepy.bspline.BSpline.derivative", "_generated/splinepy.bspline.BSpline.elevate_degrees", "_generated/splinepy.bspline.BSpline.evaluate", "_generated/splinepy.bspline.BSpline.export", "_generated/splinepy.bspline.BSpline.extract_bezier_patches", "_generated/splinepy.bspline.BSpline.greville_abscissae", "_generated/splinepy.bspline.BSpline.insert_knots", "_generated/splinepy.bspline.BSpline.interpolate_curve", "_generated/splinepy.bspline.BSpline.interpolate_surface", "_generated/splinepy.bspline.BSpline.jacobian", "_generated/splinepy.bspline.BSpline.knot_insertion_matrix", "_generated/splinepy.bspline.BSpline.mapper", "_generated/splinepy.bspline.BSpline.normalize_knot_vectors", "_generated/splinepy.bspline.BSpline.nurbs", "_generated/splinepy.bspline.BSpline.proximities", "_generated/splinepy.bspline.BSpline.reduce_degrees", "_generated/splinepy.bspline.BSpline.remove_knots", "_generated/splinepy.bspline.BSpline.sample", "_generated/splinepy.bspline.BSpline.show", "_generated/splinepy.bspline.BSpline.showable", "_generated/splinepy.bspline.BSpline.support", "_generated/splinepy.bspline.BSpline.todict", "_generated/splinepy.bspline.BSplineBase", "_generated/splinepy.bspline.BSplineBase.basis", "_generated/splinepy.bspline.BSplineBase.basis_and_support", "_generated/splinepy.bspline.BSplineBase.basis_derivative", "_generated/splinepy.bspline.BSplineBase.basis_derivative_and_support", "_generated/splinepy.bspline.BSplineBase.clear", "_generated/splinepy.bspline.BSplineBase.copy", "_generated/splinepy.bspline.BSplineBase.current_core_properties", "_generated/splinepy.bspline.BSplineBase.derivative", "_generated/splinepy.bspline.BSplineBase.elevate_degrees", "_generated/splinepy.bspline.BSplineBase.evaluate", "_generated/splinepy.bspline.BSplineBase.export", "_generated/splinepy.bspline.BSplineBase.extract_bezier_patches", "_generated/splinepy.bspline.BSplineBase.greville_abscissae", "_generated/splinepy.bspline.BSplineBase.insert_knots", "_generated/splinepy.bspline.BSplineBase.jacobian", "_generated/splinepy.bspline.BSplineBase.knot_insertion_matrix", "_generated/splinepy.bspline.BSplineBase.mapper", "_generated/splinepy.bspline.BSplineBase.normalize_knot_vectors", "_generated/splinepy.bspline.BSplineBase.proximities", "_generated/splinepy.bspline.BSplineBase.reduce_degrees", "_generated/splinepy.bspline.BSplineBase.remove_knots", "_generated/splinepy.bspline.BSplineBase.sample", "_generated/splinepy.bspline.BSplineBase.show", "_generated/splinepy.bspline.BSplineBase.showable", "_generated/splinepy.bspline.BSplineBase.support", "_generated/splinepy.bspline.BSplineBase.todict", "_generated/splinepy.helpme", "_generated/splinepy.helpme.check", "_generated/splinepy.helpme.check.Checker", "_generated/splinepy.helpme.check.Checker.valid_queries", "_generated/splinepy.helpme.check.valid_queries", "_generated/splinepy.helpme.create", "_generated/splinepy.helpme.create.Creator", "_generated/splinepy.helpme.create.Creator.determinant_spline", "_generated/splinepy.helpme.create.Creator.extruded", "_generated/splinepy.helpme.create.Creator.parametric_view", "_generated/splinepy.helpme.create.Creator.revolved", "_generated/splinepy.helpme.create.arc", "_generated/splinepy.helpme.create.box", "_generated/splinepy.helpme.create.circle", "_generated/splinepy.helpme.create.cone", "_generated/splinepy.helpme.create.determinant_spline", "_generated/splinepy.helpme.create.disk", "_generated/splinepy.helpme.create.extruded", "_generated/splinepy.helpme.create.from_bounds", "_generated/splinepy.helpme.create.line", "_generated/splinepy.helpme.create.parametric_view", "_generated/splinepy.helpme.create.plate", "_generated/splinepy.helpme.create.pyramid", "_generated/splinepy.helpme.create.revolved", "_generated/splinepy.helpme.create.sphere", "_generated/splinepy.helpme.create.surface_circle", "_generated/splinepy.helpme.create.torus", "_generated/splinepy.helpme.extract", "_generated/splinepy.helpme.extract.Extractor", "_generated/splinepy.helpme.extract.Extractor.beziers", "_generated/splinepy.helpme.extract.Extractor.boundaries", "_generated/splinepy.helpme.extract.Extractor.control_edges", "_generated/splinepy.helpme.extract.Extractor.control_faces", "_generated/splinepy.helpme.extract.Extractor.control_mesh", "_generated/splinepy.helpme.extract.Extractor.control_points", "_generated/splinepy.helpme.extract.Extractor.control_volumes", "_generated/splinepy.helpme.extract.Extractor.edges", "_generated/splinepy.helpme.extract.Extractor.faces", "_generated/splinepy.helpme.extract.Extractor.spline", "_generated/splinepy.helpme.extract.Extractor.volumes", "_generated/splinepy.helpme.extract.boundaries", "_generated/splinepy.helpme.extract.control_edges", "_generated/splinepy.helpme.extract.control_faces", "_generated/splinepy.helpme.extract.control_mesh", "_generated/splinepy.helpme.extract.control_points", "_generated/splinepy.helpme.extract.control_volumes", "_generated/splinepy.helpme.extract.edges", "_generated/splinepy.helpme.extract.faces", "_generated/splinepy.helpme.extract.spline", "_generated/splinepy.helpme.extract.volumes", "_generated/splinepy.helpme.ffd", "_generated/splinepy.helpme.ffd.FFD", "_generated/splinepy.helpme.ffd.FFD.mesh", "_generated/splinepy.helpme.ffd.FFD.padding", "_generated/splinepy.helpme.ffd.FFD.show", "_generated/splinepy.helpme.ffd.FFD.showable", "_generated/splinepy.helpme.ffd.FFD.spline", "_generated/splinepy.helpme.integrate", "_generated/splinepy.helpme.integrate.Integrator", "_generated/splinepy.helpme.integrate.Integrator.volume", "_generated/splinepy.helpme.integrate.parametric_function", "_generated/splinepy.helpme.integrate.physical_function", "_generated/splinepy.helpme.integrate.volume", "_generated/splinepy.helpme.mapper", "_generated/splinepy.helpme.mapper.Mapper", "_generated/splinepy.helpme.mapper.Mapper.basis_function_derivatives", "_generated/splinepy.helpme.mapper.Mapper.basis_gradient_and_support", "_generated/splinepy.helpme.mapper.Mapper.basis_hessian_and_support", "_generated/splinepy.helpme.mapper.Mapper.basis_laplacian_and_support", "_generated/splinepy.helpme.mapper.Mapper.divergence", "_generated/splinepy.helpme.mapper.Mapper.field_derivatives", "_generated/splinepy.helpme.mapper.Mapper.gradient", "_generated/splinepy.helpme.mapper.Mapper.hessian", "_generated/splinepy.helpme.mapper.Mapper.laplacian", "_generated/splinepy.helpme.multi_index", "_generated/splinepy.helpme.multi_index.MultiIndex", "_generated/splinepy.helpme.permute", "_generated/splinepy.helpme.permute.parametric_axes", "_generated/splinepy.helpme.visualize", "_generated/splinepy.helpme.visualize.MultipatchShowOption", "_generated/splinepy.helpme.visualize.MultipatchShowOption.clear", "_generated/splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options", "_generated/splinepy.helpme.visualize.MultipatchShowOption.get", "_generated/splinepy.helpme.visualize.MultipatchShowOption.items", "_generated/splinepy.helpme.visualize.MultipatchShowOption.keys", "_generated/splinepy.helpme.visualize.MultipatchShowOption.pop", "_generated/splinepy.helpme.visualize.MultipatchShowOption.update", "_generated/splinepy.helpme.visualize.MultipatchShowOption.valid_keys", "_generated/splinepy.helpme.visualize.MultipatchShowOption.values", "_generated/splinepy.helpme.visualize.SplineShowOption", "_generated/splinepy.helpme.visualize.SplineShowOption.clear", "_generated/splinepy.helpme.visualize.SplineShowOption.copy_valid_options", "_generated/splinepy.helpme.visualize.SplineShowOption.get", "_generated/splinepy.helpme.visualize.SplineShowOption.items", "_generated/splinepy.helpme.visualize.SplineShowOption.keys", "_generated/splinepy.helpme.visualize.SplineShowOption.pop", "_generated/splinepy.helpme.visualize.SplineShowOption.update", "_generated/splinepy.helpme.visualize.SplineShowOption.valid_keys", "_generated/splinepy.helpme.visualize.SplineShowOption.values", "_generated/splinepy.helpme.visualize.make_showable", "_generated/splinepy.helpme.visualize.show", "_generated/splinepy.io", "_generated/splinepy.io.cats", "_generated/splinepy.io.cats.export", "_generated/splinepy.io.cats.load", "_generated/splinepy.io.gismo", "_generated/splinepy.io.gismo.export", "_generated/splinepy.io.gismo.load", "_generated/splinepy.io.iges", "_generated/splinepy.io.iges.export", "_generated/splinepy.io.iges.load", "_generated/splinepy.io.ioutils", "_generated/splinepy.io.ioutils.abs_fname", "_generated/splinepy.io.ioutils.dict_to_spline", "_generated/splinepy.io.ioutils.expand_tabs", "_generated/splinepy.io.ioutils.form_lines", "_generated/splinepy.io.ioutils.make_meaningful", "_generated/splinepy.io.ioutils.next_line", "_generated/splinepy.io.irit", "_generated/splinepy.io.irit.export", "_generated/splinepy.io.irit.load", "_generated/splinepy.io.json", "_generated/splinepy.io.json.export", "_generated/splinepy.io.json.load", "_generated/splinepy.io.mfem", "_generated/splinepy.io.mfem.dof_mapping", "_generated/splinepy.io.mfem.export", "_generated/splinepy.io.mfem.export_cartesian", "_generated/splinepy.io.mfem.load", "_generated/splinepy.io.mfem.read_solution", "_generated/splinepy.io.npz", "_generated/splinepy.io.npz.export", "_generated/splinepy.io.npz.load", "_generated/splinepy.io.vtk", "_generated/splinepy.io.vtk.export", "_generated/splinepy.load", "_generated/splinepy.load.load_solution", "_generated/splinepy.load.load_splines", "_generated/splinepy.microstructure", "_generated/splinepy.microstructure.microstructure", "_generated/splinepy.microstructure.microstructure.Microstructure", "_generated/splinepy.microstructure.microstructure.Microstructure.create", "_generated/splinepy.microstructure.microstructure.Microstructure.deformation_function", "_generated/splinepy.microstructure.microstructure.Microstructure.microtile", "_generated/splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function", "_generated/splinepy.microstructure.microstructure.Microstructure.parametrization_function", "_generated/splinepy.microstructure.microstructure.Microstructure.show", "_generated/splinepy.microstructure.microstructure.Microstructure.tiling", "_generated/splinepy.microstructure.tiles", "_generated/splinepy.microstructure.tiles.armadillo", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.check_params", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.closing_tile", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.create_tile", "_generated/splinepy.microstructure.tiles.chi", "_generated/splinepy.microstructure.tiles.chi.Chi", "_generated/splinepy.microstructure.tiles.chi.Chi.check_param_derivatives", "_generated/splinepy.microstructure.tiles.chi.Chi.check_params", "_generated/splinepy.microstructure.tiles.chi.Chi.create_tile", "_generated/splinepy.microstructure.tiles.cross_2d", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.check_params", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile", "_generated/splinepy.microstructure.tiles.cross_3d", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.check_params", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile", "_generated/splinepy.microstructure.tiles.cube_void", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.check_params", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile", "_generated/splinepy.microstructure.tiles.double_lattice", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile", "_generated/splinepy.microstructure.tiles.ellips_v_oid", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile", "_generated/splinepy.microstructure.tiles.hollow_cube", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile", "_generated/splinepy.microstructure.tiles.hollow_octagon", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile", "_generated/splinepy.microstructure.tiles.inverse_cross_3d", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile", "_generated/splinepy.microstructure.tiles.snappy", "_generated/splinepy.microstructure.tiles.snappy.Snappy", "_generated/splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives", "_generated/splinepy.microstructure.tiles.snappy.Snappy.check_params", "_generated/splinepy.microstructure.tiles.snappy.Snappy.create_tile", "_generated/splinepy.microstructure.tiles.tile_base", "_generated/splinepy.microstructure.tiles.tile_base.TileBase", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.check_params", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.dim", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.para_dim", "_generated/splinepy.multipatch", "_generated/splinepy.multipatch.Multipatch", "_generated/splinepy.multipatch.Multipatch.add_fields", "_generated/splinepy.multipatch.Multipatch.boundaries", "_generated/splinepy.multipatch.Multipatch.boundaries_from_continuity", "_generated/splinepy.multipatch.Multipatch.boundary_from_function", "_generated/splinepy.multipatch.Multipatch.boundary_multipatch", "_generated/splinepy.multipatch.Multipatch.boundary_patch_ids", "_generated/splinepy.multipatch.Multipatch.clear", "_generated/splinepy.multipatch.Multipatch.combine_boundaries", "_generated/splinepy.multipatch.Multipatch.control_point_offsets", "_generated/splinepy.multipatch.Multipatch.determine_interfaces", "_generated/splinepy.multipatch.Multipatch.dim", "_generated/splinepy.multipatch.Multipatch.evaluate", "_generated/splinepy.multipatch.Multipatch.extract", "_generated/splinepy.multipatch.Multipatch.fields", "_generated/splinepy.multipatch.Multipatch.interfaces", "_generated/splinepy.multipatch.Multipatch.para_dim", "_generated/splinepy.multipatch.Multipatch.patches", "_generated/splinepy.multipatch.Multipatch.sample", "_generated/splinepy.multipatch.Multipatch.set_boundary", "_generated/splinepy.multipatch.Multipatch.show", "_generated/splinepy.multipatch.Multipatch.show_options", "_generated/splinepy.multipatch.Multipatch.showable", "_generated/splinepy.multipatch.Multipatch.spline_data", "_generated/splinepy.multipatch.Multipatch.sub_multipatch", "_generated/splinepy.multipatch.Multipatch.sub_patch_centers", "_generated/splinepy.nurbs", "_generated/splinepy.nurbs.NURBS", "_generated/splinepy.nurbs.NURBS.basis", "_generated/splinepy.nurbs.NURBS.basis_and_support", "_generated/splinepy.nurbs.NURBS.basis_derivative", "_generated/splinepy.nurbs.NURBS.basis_derivative_and_support", "_generated/splinepy.nurbs.NURBS.clear", "_generated/splinepy.nurbs.NURBS.copy", "_generated/splinepy.nurbs.NURBS.current_core_properties", "_generated/splinepy.nurbs.NURBS.derivative", "_generated/splinepy.nurbs.NURBS.elevate_degrees", "_generated/splinepy.nurbs.NURBS.evaluate", "_generated/splinepy.nurbs.NURBS.export", "_generated/splinepy.nurbs.NURBS.extract_bezier_patches", "_generated/splinepy.nurbs.NURBS.greville_abscissae", "_generated/splinepy.nurbs.NURBS.insert_knots", "_generated/splinepy.nurbs.NURBS.jacobian", "_generated/splinepy.nurbs.NURBS.knot_insertion_matrix", "_generated/splinepy.nurbs.NURBS.mapper", "_generated/splinepy.nurbs.NURBS.normalize_knot_vectors", "_generated/splinepy.nurbs.NURBS.nurbs", "_generated/splinepy.nurbs.NURBS.proximities", "_generated/splinepy.nurbs.NURBS.reduce_degrees", "_generated/splinepy.nurbs.NURBS.remove_knots", "_generated/splinepy.nurbs.NURBS.sample", "_generated/splinepy.nurbs.NURBS.show", "_generated/splinepy.nurbs.NURBS.showable", "_generated/splinepy.nurbs.NURBS.support", "_generated/splinepy.nurbs.NURBS.todict", "_generated/splinepy.rational_bezier", "_generated/splinepy.rational_bezier.RationalBezier", "_generated/splinepy.rational_bezier.RationalBezier.basis", "_generated/splinepy.rational_bezier.RationalBezier.basis_and_support", "_generated/splinepy.rational_bezier.RationalBezier.basis_derivative", "_generated/splinepy.rational_bezier.RationalBezier.basis_derivative_and_support", "_generated/splinepy.rational_bezier.RationalBezier.clear", "_generated/splinepy.rational_bezier.RationalBezier.compose", "_generated/splinepy.rational_bezier.RationalBezier.composition_derivative", "_generated/splinepy.rational_bezier.RationalBezier.copy", "_generated/splinepy.rational_bezier.RationalBezier.current_core_properties", "_generated/splinepy.rational_bezier.RationalBezier.derivative", "_generated/splinepy.rational_bezier.RationalBezier.derivative_spline", "_generated/splinepy.rational_bezier.RationalBezier.elevate_degrees", "_generated/splinepy.rational_bezier.RationalBezier.evaluate", "_generated/splinepy.rational_bezier.RationalBezier.export", "_generated/splinepy.rational_bezier.RationalBezier.extract_dim", "_generated/splinepy.rational_bezier.RationalBezier.greville_abscissae", "_generated/splinepy.rational_bezier.RationalBezier.jacobian", "_generated/splinepy.rational_bezier.RationalBezier.mapper", "_generated/splinepy.rational_bezier.RationalBezier.nurbs", "_generated/splinepy.rational_bezier.RationalBezier.proximities", "_generated/splinepy.rational_bezier.RationalBezier.rationalbezier", "_generated/splinepy.rational_bezier.RationalBezier.reduce_degrees", "_generated/splinepy.rational_bezier.RationalBezier.sample", "_generated/splinepy.rational_bezier.RationalBezier.show", "_generated/splinepy.rational_bezier.RationalBezier.showable", "_generated/splinepy.rational_bezier.RationalBezier.split", "_generated/splinepy.rational_bezier.RationalBezier.support", "_generated/splinepy.rational_bezier.RationalBezier.todict", "_generated/splinepy.settings", "_generated/splinepy.settings.CHECK_BOUNDS", "_generated/splinepy.settings.NAME_TO_TYPE", "_generated/splinepy.settings.NTHREADS", "_generated/splinepy.settings.TOLERANCE", "_generated/splinepy.spline", "_generated/splinepy.spline.RequiredProperties", "_generated/splinepy.spline.RequiredProperties.intersection", "_generated/splinepy.spline.RequiredProperties.of", "_generated/splinepy.spline.RequiredProperties.union", "_generated/splinepy.spline.Spline", "_generated/splinepy.spline.Spline.basis", "_generated/splinepy.spline.Spline.basis_and_support", "_generated/splinepy.spline.Spline.basis_derivative", "_generated/splinepy.spline.Spline.basis_derivative_and_support", "_generated/splinepy.spline.Spline.check", "_generated/splinepy.spline.Spline.clear", "_generated/splinepy.spline.Spline.control_mesh_resolutions", "_generated/splinepy.spline.Spline.control_point_bounds", "_generated/splinepy.spline.Spline.control_points", "_generated/splinepy.spline.Spline.copy", "_generated/splinepy.spline.Spline.cps", "_generated/splinepy.spline.Spline.create", "_generated/splinepy.spline.Spline.current_core_properties", "_generated/splinepy.spline.Spline.degrees", "_generated/splinepy.spline.Spline.derivative", "_generated/splinepy.spline.Spline.dim", "_generated/splinepy.spline.Spline.ds", "_generated/splinepy.spline.Spline.elevate_degrees", "_generated/splinepy.spline.Spline.evaluate", "_generated/splinepy.spline.Spline.export", "_generated/splinepy.spline.Spline.extract", "_generated/splinepy.spline.Spline.greville_abscissae", "_generated/splinepy.spline.Spline.has_knot_vectors", "_generated/splinepy.spline.Spline.integrate", "_generated/splinepy.spline.Spline.is_rational", "_generated/splinepy.spline.Spline.jacobian", "_generated/splinepy.spline.Spline.knot_multiplicities", "_generated/splinepy.spline.Spline.knot_vectors", "_generated/splinepy.spline.Spline.kvs", "_generated/splinepy.spline.Spline.mapper", "_generated/splinepy.spline.Spline.multi_index", "_generated/splinepy.spline.Spline.name", "_generated/splinepy.spline.Spline.para_dim", "_generated/splinepy.spline.Spline.parametric_bounds", "_generated/splinepy.spline.Spline.proximities", "_generated/splinepy.spline.Spline.reduce_degrees", "_generated/splinepy.spline.Spline.required_properties", "_generated/splinepy.spline.Spline.sample", "_generated/splinepy.spline.Spline.show", "_generated/splinepy.spline.Spline.show_options", "_generated/splinepy.spline.Spline.showable", "_generated/splinepy.spline.Spline.spline_data", "_generated/splinepy.spline.Spline.support", "_generated/splinepy.spline.Spline.todict", "_generated/splinepy.spline.Spline.unique_knots", "_generated/splinepy.spline.Spline.weights", "_generated/splinepy.spline.Spline.whatami", "_generated/splinepy.spline.Spline.ws", "_generated/splinepy.splinepy_core", "_generated/splinepy.splinepy_core.ControlPointPointers", "_generated/splinepy.splinepy_core.ControlPointPointers.dim", "_generated/splinepy.splinepy_core.ControlPointPointers.len", "_generated/splinepy.splinepy_core.ControlPointPointers.set_row", "_generated/splinepy.splinepy_core.ControlPointPointers.set_rows", "_generated/splinepy.splinepy_core.ControlPointPointers.sync", "_generated/splinepy.splinepy_core.ControlPointPointers.sync_rows", "_generated/splinepy.splinepy_core.KnotVector", "_generated/splinepy.splinepy_core.KnotVector.find_span", "_generated/splinepy.splinepy_core.KnotVector.multiplicities", "_generated/splinepy.splinepy_core.KnotVector.numpy", "_generated/splinepy.splinepy_core.KnotVector.scale", "_generated/splinepy.splinepy_core.KnotVector.unique", "_generated/splinepy.splinepy_core.PyMultipatch", "_generated/splinepy.splinepy_core.PyMultipatch.add_fields", "_generated/splinepy.splinepy_core.PyMultipatch.boundary_multipatch", "_generated/splinepy.splinepy_core.PyMultipatch.boundary_patch_ids", "_generated/splinepy.splinepy_core.PyMultipatch.clear", "_generated/splinepy.splinepy_core.PyMultipatch.control_point_offsets", "_generated/splinepy.splinepy_core.PyMultipatch.control_points", "_generated/splinepy.splinepy_core.PyMultipatch.dim", "_generated/splinepy.splinepy_core.PyMultipatch.evaluate", "_generated/splinepy.splinepy_core.PyMultipatch.fields", "_generated/splinepy.splinepy_core.PyMultipatch.interfaces", "_generated/splinepy.splinepy_core.PyMultipatch.n_default_threads", "_generated/splinepy.splinepy_core.PyMultipatch.name", "_generated/splinepy.splinepy_core.PyMultipatch.para_dim", "_generated/splinepy.splinepy_core.PyMultipatch.patches", "_generated/splinepy.splinepy_core.PyMultipatch.same_parametric_bounds", "_generated/splinepy.splinepy_core.PyMultipatch.sample", "_generated/splinepy.splinepy_core.PyMultipatch.sub_multipatch", "_generated/splinepy.splinepy_core.PyMultipatch.sub_patch_centers", "_generated/splinepy.splinepy_core.PyMultipatch.tolerance", "_generated/splinepy.splinepy_core.PyMultipatch.whatami", "_generated/splinepy.splinepy_core.PySpline", "_generated/splinepy.splinepy_core.PySpline.basis", "_generated/splinepy.splinepy_core.PySpline.basis_and_support", "_generated/splinepy.splinepy_core.PySpline.basis_derivative", "_generated/splinepy.splinepy_core.PySpline.basis_derivative_and_support", "_generated/splinepy.splinepy_core.PySpline.control_mesh_resolutions", "_generated/splinepy.splinepy_core.PySpline.current_core_properties", "_generated/splinepy.splinepy_core.PySpline.derivative", "_generated/splinepy.splinepy_core.PySpline.dim", "_generated/splinepy.splinepy_core.PySpline.elevate_degrees", "_generated/splinepy.splinepy_core.PySpline.evaluate", "_generated/splinepy.splinepy_core.PySpline.has_knot_vectors", "_generated/splinepy.splinepy_core.PySpline.is_rational", "_generated/splinepy.splinepy_core.PySpline.jacobian", "_generated/splinepy.splinepy_core.PySpline.name", "_generated/splinepy.splinepy_core.PySpline.para_dim", "_generated/splinepy.splinepy_core.PySpline.parametric_bounds", "_generated/splinepy.splinepy_core.PySpline.proximities", "_generated/splinepy.splinepy_core.PySpline.reduce_degrees", "_generated/splinepy.splinepy_core.PySpline.sample", "_generated/splinepy.splinepy_core.PySpline.support", "_generated/splinepy.splinepy_core.PySpline.whatami", "_generated/splinepy.splinepy_core.WeightPointers", "_generated/splinepy.splinepy_core.WeightPointers.dim", "_generated/splinepy.splinepy_core.WeightPointers.len", "_generated/splinepy.splinepy_core.WeightPointers.set_row", "_generated/splinepy.splinepy_core.WeightPointers.set_rows", "_generated/splinepy.splinepy_core.WeightPointers.sync", "_generated/splinepy.splinepy_core.WeightPointers.sync_rows", "_generated/splinepy.splinepy_core.add", "_generated/splinepy.splinepy_core.annul_core", "_generated/splinepy.splinepy_core.approximate_curve", "_generated/splinepy.splinepy_core.approximate_surface", "_generated/splinepy.splinepy_core.bezier_extraction_matrix", "_generated/splinepy.splinepy_core.boundaries_from_continuity", "_generated/splinepy.splinepy_core.boundary_centers", "_generated/splinepy.splinepy_core.build_type", "_generated/splinepy.splinepy_core.compose", "_generated/splinepy.splinepy_core.compose_sensitivities", "_generated/splinepy.splinepy_core.composition_derivative", "_generated/splinepy.splinepy_core.core_id", "_generated/splinepy.splinepy_core.core_ref_count", "_generated/splinepy.splinepy_core.derivative_spline", "_generated/splinepy.splinepy_core.export_iges", "_generated/splinepy.splinepy_core.extract_all_boundary_splines", "_generated/splinepy.splinepy_core.extract_bezier_patches", "_generated/splinepy.splinepy_core.extract_boundaries", "_generated/splinepy.splinepy_core.extract_dim", "_generated/splinepy.splinepy_core.global_knot_insertion_matrix", "_generated/splinepy.splinepy_core.has_core", "_generated/splinepy.splinepy_core.insert_knots", "_generated/splinepy.splinepy_core.interfaces_from_boundary_centers", "_generated/splinepy.splinepy_core.interpolate_curve", "_generated/splinepy.splinepy_core.interpolate_surface", "_generated/splinepy.splinepy_core.is_minimal", "_generated/splinepy.splinepy_core.knot_insertion_matrix", "_generated/splinepy.splinepy_core.multiply", "_generated/splinepy.splinepy_core.null_spline", "_generated/splinepy.splinepy_core.orientations", "_generated/splinepy.splinepy_core.read_iges", "_generated/splinepy.splinepy_core.remove_knots", "_generated/splinepy.splinepy_core.same_spline_with_knot_vectors", "_generated/splinepy.splinepy_core.split", "_generated/splinepy.to_derived", "_generated/splinepy.utils", "_generated/splinepy.utils.data", "_generated/splinepy.utils.data.MultipatchData", "_generated/splinepy.utils.data.MultipatchData.as_arrow", "_generated/splinepy.utils.data.MultipatchData.as_scalar", "_generated/splinepy.utils.data.MultipatchData.clear", "_generated/splinepy.utils.data.MultipatchData.get", "_generated/splinepy.utils.data.MultipatchData.items", "_generated/splinepy.utils.data.MultipatchData.keys", "_generated/splinepy.utils.data.MultipatchData.pop", "_generated/splinepy.utils.data.MultipatchData.values", "_generated/splinepy.utils.data.PhysicalSpaceArray", "_generated/splinepy.utils.data.PhysicalSpaceArray.all", "_generated/splinepy.utils.data.PhysicalSpaceArray.any", "_generated/splinepy.utils.data.PhysicalSpaceArray.argmax", "_generated/splinepy.utils.data.PhysicalSpaceArray.argmin", "_generated/splinepy.utils.data.PhysicalSpaceArray.argpartition", "_generated/splinepy.utils.data.PhysicalSpaceArray.argsort", "_generated/splinepy.utils.data.PhysicalSpaceArray.astype", "_generated/splinepy.utils.data.PhysicalSpaceArray.byteswap", "_generated/splinepy.utils.data.PhysicalSpaceArray.choose", "_generated/splinepy.utils.data.PhysicalSpaceArray.clip", "_generated/splinepy.utils.data.PhysicalSpaceArray.compress", "_generated/splinepy.utils.data.PhysicalSpaceArray.conj", "_generated/splinepy.utils.data.PhysicalSpaceArray.conjugate", "_generated/splinepy.utils.data.PhysicalSpaceArray.copy", "_generated/splinepy.utils.data.PhysicalSpaceArray.cumprod", "_generated/splinepy.utils.data.PhysicalSpaceArray.cumsum", "_generated/splinepy.utils.data.PhysicalSpaceArray.diagonal", "_generated/splinepy.utils.data.PhysicalSpaceArray.dot", "_generated/splinepy.utils.data.PhysicalSpaceArray.dump", "_generated/splinepy.utils.data.PhysicalSpaceArray.dumps", "_generated/splinepy.utils.data.PhysicalSpaceArray.fill", "_generated/splinepy.utils.data.PhysicalSpaceArray.flatten", "_generated/splinepy.utils.data.PhysicalSpaceArray.full_row_indices", "_generated/splinepy.utils.data.PhysicalSpaceArray.getfield", "_generated/splinepy.utils.data.PhysicalSpaceArray.item", "_generated/splinepy.utils.data.PhysicalSpaceArray.itemset", "_generated/splinepy.utils.data.PhysicalSpaceArray.max", "_generated/splinepy.utils.data.PhysicalSpaceArray.mean", "_generated/splinepy.utils.data.PhysicalSpaceArray.min", "_generated/splinepy.utils.data.PhysicalSpaceArray.newbyteorder", "_generated/splinepy.utils.data.PhysicalSpaceArray.nonzero", "_generated/splinepy.utils.data.PhysicalSpaceArray.partition", "_generated/splinepy.utils.data.PhysicalSpaceArray.prod", "_generated/splinepy.utils.data.PhysicalSpaceArray.ptp", "_generated/splinepy.utils.data.PhysicalSpaceArray.put", "_generated/splinepy.utils.data.PhysicalSpaceArray.ravel", "_generated/splinepy.utils.data.PhysicalSpaceArray.repeat", "_generated/splinepy.utils.data.PhysicalSpaceArray.reshape", "_generated/splinepy.utils.data.PhysicalSpaceArray.resize", "_generated/splinepy.utils.data.PhysicalSpaceArray.round", "_generated/splinepy.utils.data.PhysicalSpaceArray.row_indices", "_generated/splinepy.utils.data.PhysicalSpaceArray.searchsorted", "_generated/splinepy.utils.data.PhysicalSpaceArray.setfield", "_generated/splinepy.utils.data.PhysicalSpaceArray.setflags", "_generated/splinepy.utils.data.PhysicalSpaceArray.sort", "_generated/splinepy.utils.data.PhysicalSpaceArray.squeeze", "_generated/splinepy.utils.data.PhysicalSpaceArray.std", "_generated/splinepy.utils.data.PhysicalSpaceArray.sum", "_generated/splinepy.utils.data.PhysicalSpaceArray.swapaxes", "_generated/splinepy.utils.data.PhysicalSpaceArray.take", "_generated/splinepy.utils.data.PhysicalSpaceArray.tobytes", "_generated/splinepy.utils.data.PhysicalSpaceArray.tofile", "_generated/splinepy.utils.data.PhysicalSpaceArray.tolist", "_generated/splinepy.utils.data.PhysicalSpaceArray.tostring", "_generated/splinepy.utils.data.PhysicalSpaceArray.trace", "_generated/splinepy.utils.data.PhysicalSpaceArray.transpose", "_generated/splinepy.utils.data.PhysicalSpaceArray.var", "_generated/splinepy.utils.data.PhysicalSpaceArray.view", "_generated/splinepy.utils.data.SplineData", "_generated/splinepy.utils.data.SplineData.as_arrow", "_generated/splinepy.utils.data.SplineData.as_scalar", "_generated/splinepy.utils.data.SplineData.clear", "_generated/splinepy.utils.data.SplineData.get", "_generated/splinepy.utils.data.SplineData.items", "_generated/splinepy.utils.data.SplineData.keys", "_generated/splinepy.utils.data.SplineData.pop", "_generated/splinepy.utils.data.SplineData.values", "_generated/splinepy.utils.data.SplineDataAdaptor", "_generated/splinepy.utils.data.SplineDataAdaptor.arrow_data_only", "_generated/splinepy.utils.data.SplineDataAdaptor.as_vertex_data", "_generated/splinepy.utils.data.SplineDataAdaptor.data", "_generated/splinepy.utils.data.SplineDataAdaptor.function", "_generated/splinepy.utils.data.SplineDataAdaptor.has_evaluate", "_generated/splinepy.utils.data.SplineDataAdaptor.has_function", "_generated/splinepy.utils.data.SplineDataAdaptor.has_locations", "_generated/splinepy.utils.data.SplineDataAdaptor.is_spline", "_generated/splinepy.utils.data.SplineDataAdaptor.locations", "_generated/splinepy.utils.data.SplineDataAdaptor.parametric_bounds", "_generated/splinepy.utils.data.cartesian_product", "_generated/splinepy.utils.data.enforce_contiguous", "_generated/splinepy.utils.data.enforce_contiguous_values", "_generated/splinepy.utils.data.make_matrix", "_generated/splinepy.utils.data.uniform_query", "_generated/splinepy.utils.log", "_generated/splinepy.utils.log.configure", "_generated/splinepy.utils.log.debug", "_generated/splinepy.utils.log.info", "_generated/splinepy.utils.log.prepend_log", "_generated/splinepy.utils.log.warning", "api_reference", "index", "python_api", "spline_intro"], "filenames": ["CONTRIBUTING.rst", "_generated/splinepy.rst", "_generated/splinepy.bezier.rst", "_generated/splinepy.bezier.Bezier.rst", "_generated/splinepy.bezier.Bezier.basis.rst", "_generated/splinepy.bezier.Bezier.basis_and_support.rst", "_generated/splinepy.bezier.Bezier.basis_derivative.rst", "_generated/splinepy.bezier.Bezier.basis_derivative_and_support.rst", "_generated/splinepy.bezier.Bezier.bezier.rst", "_generated/splinepy.bezier.Bezier.bspline.rst", "_generated/splinepy.bezier.Bezier.clear.rst", "_generated/splinepy.bezier.Bezier.compose.rst", "_generated/splinepy.bezier.Bezier.composition_derivative.rst", "_generated/splinepy.bezier.Bezier.copy.rst", "_generated/splinepy.bezier.Bezier.current_core_properties.rst", "_generated/splinepy.bezier.Bezier.derivative.rst", "_generated/splinepy.bezier.Bezier.derivative_spline.rst", "_generated/splinepy.bezier.Bezier.elevate_degrees.rst", "_generated/splinepy.bezier.Bezier.evaluate.rst", "_generated/splinepy.bezier.Bezier.export.rst", "_generated/splinepy.bezier.Bezier.extract_dim.rst", "_generated/splinepy.bezier.Bezier.greville_abscissae.rst", "_generated/splinepy.bezier.Bezier.jacobian.rst", "_generated/splinepy.bezier.Bezier.mapper.rst", "_generated/splinepy.bezier.Bezier.nurbs.rst", "_generated/splinepy.bezier.Bezier.proximities.rst", "_generated/splinepy.bezier.Bezier.rationalbezier.rst", "_generated/splinepy.bezier.Bezier.reduce_degrees.rst", "_generated/splinepy.bezier.Bezier.sample.rst", "_generated/splinepy.bezier.Bezier.show.rst", "_generated/splinepy.bezier.Bezier.showable.rst", "_generated/splinepy.bezier.Bezier.split.rst", "_generated/splinepy.bezier.Bezier.support.rst", "_generated/splinepy.bezier.Bezier.todict.rst", "_generated/splinepy.bezier.BezierBase.rst", "_generated/splinepy.bezier.BezierBase.basis.rst", "_generated/splinepy.bezier.BezierBase.basis_and_support.rst", "_generated/splinepy.bezier.BezierBase.basis_derivative.rst", "_generated/splinepy.bezier.BezierBase.basis_derivative_and_support.rst", "_generated/splinepy.bezier.BezierBase.clear.rst", "_generated/splinepy.bezier.BezierBase.compose.rst", "_generated/splinepy.bezier.BezierBase.composition_derivative.rst", "_generated/splinepy.bezier.BezierBase.copy.rst", "_generated/splinepy.bezier.BezierBase.current_core_properties.rst", "_generated/splinepy.bezier.BezierBase.derivative.rst", "_generated/splinepy.bezier.BezierBase.derivative_spline.rst", "_generated/splinepy.bezier.BezierBase.elevate_degrees.rst", "_generated/splinepy.bezier.BezierBase.evaluate.rst", "_generated/splinepy.bezier.BezierBase.export.rst", "_generated/splinepy.bezier.BezierBase.extract_dim.rst", "_generated/splinepy.bezier.BezierBase.greville_abscissae.rst", "_generated/splinepy.bezier.BezierBase.jacobian.rst", "_generated/splinepy.bezier.BezierBase.mapper.rst", "_generated/splinepy.bezier.BezierBase.proximities.rst", "_generated/splinepy.bezier.BezierBase.reduce_degrees.rst", "_generated/splinepy.bezier.BezierBase.sample.rst", "_generated/splinepy.bezier.BezierBase.show.rst", "_generated/splinepy.bezier.BezierBase.showable.rst", "_generated/splinepy.bezier.BezierBase.split.rst", "_generated/splinepy.bezier.BezierBase.support.rst", "_generated/splinepy.bezier.BezierBase.todict.rst", "_generated/splinepy.bspline.rst", "_generated/splinepy.bspline.BSpline.rst", "_generated/splinepy.bspline.BSpline.approximate_curve.rst", "_generated/splinepy.bspline.BSpline.approximate_surface.rst", "_generated/splinepy.bspline.BSpline.basis.rst", "_generated/splinepy.bspline.BSpline.basis_and_support.rst", "_generated/splinepy.bspline.BSpline.basis_derivative.rst", "_generated/splinepy.bspline.BSpline.basis_derivative_and_support.rst", "_generated/splinepy.bspline.BSpline.bspline.rst", "_generated/splinepy.bspline.BSpline.clear.rst", "_generated/splinepy.bspline.BSpline.copy.rst", "_generated/splinepy.bspline.BSpline.current_core_properties.rst", "_generated/splinepy.bspline.BSpline.derivative.rst", "_generated/splinepy.bspline.BSpline.elevate_degrees.rst", "_generated/splinepy.bspline.BSpline.evaluate.rst", "_generated/splinepy.bspline.BSpline.export.rst", "_generated/splinepy.bspline.BSpline.extract_bezier_patches.rst", "_generated/splinepy.bspline.BSpline.greville_abscissae.rst", "_generated/splinepy.bspline.BSpline.insert_knots.rst", "_generated/splinepy.bspline.BSpline.interpolate_curve.rst", "_generated/splinepy.bspline.BSpline.interpolate_surface.rst", "_generated/splinepy.bspline.BSpline.jacobian.rst", "_generated/splinepy.bspline.BSpline.knot_insertion_matrix.rst", "_generated/splinepy.bspline.BSpline.mapper.rst", "_generated/splinepy.bspline.BSpline.normalize_knot_vectors.rst", "_generated/splinepy.bspline.BSpline.nurbs.rst", "_generated/splinepy.bspline.BSpline.proximities.rst", "_generated/splinepy.bspline.BSpline.reduce_degrees.rst", "_generated/splinepy.bspline.BSpline.remove_knots.rst", "_generated/splinepy.bspline.BSpline.sample.rst", "_generated/splinepy.bspline.BSpline.show.rst", "_generated/splinepy.bspline.BSpline.showable.rst", "_generated/splinepy.bspline.BSpline.support.rst", "_generated/splinepy.bspline.BSpline.todict.rst", "_generated/splinepy.bspline.BSplineBase.rst", "_generated/splinepy.bspline.BSplineBase.basis.rst", "_generated/splinepy.bspline.BSplineBase.basis_and_support.rst", "_generated/splinepy.bspline.BSplineBase.basis_derivative.rst", "_generated/splinepy.bspline.BSplineBase.basis_derivative_and_support.rst", "_generated/splinepy.bspline.BSplineBase.clear.rst", "_generated/splinepy.bspline.BSplineBase.copy.rst", "_generated/splinepy.bspline.BSplineBase.current_core_properties.rst", "_generated/splinepy.bspline.BSplineBase.derivative.rst", "_generated/splinepy.bspline.BSplineBase.elevate_degrees.rst", "_generated/splinepy.bspline.BSplineBase.evaluate.rst", "_generated/splinepy.bspline.BSplineBase.export.rst", "_generated/splinepy.bspline.BSplineBase.extract_bezier_patches.rst", "_generated/splinepy.bspline.BSplineBase.greville_abscissae.rst", "_generated/splinepy.bspline.BSplineBase.insert_knots.rst", "_generated/splinepy.bspline.BSplineBase.jacobian.rst", "_generated/splinepy.bspline.BSplineBase.knot_insertion_matrix.rst", "_generated/splinepy.bspline.BSplineBase.mapper.rst", "_generated/splinepy.bspline.BSplineBase.normalize_knot_vectors.rst", "_generated/splinepy.bspline.BSplineBase.proximities.rst", "_generated/splinepy.bspline.BSplineBase.reduce_degrees.rst", "_generated/splinepy.bspline.BSplineBase.remove_knots.rst", "_generated/splinepy.bspline.BSplineBase.sample.rst", "_generated/splinepy.bspline.BSplineBase.show.rst", "_generated/splinepy.bspline.BSplineBase.showable.rst", "_generated/splinepy.bspline.BSplineBase.support.rst", "_generated/splinepy.bspline.BSplineBase.todict.rst", "_generated/splinepy.helpme.rst", "_generated/splinepy.helpme.check.rst", "_generated/splinepy.helpme.check.Checker.rst", "_generated/splinepy.helpme.check.Checker.valid_queries.rst", "_generated/splinepy.helpme.check.valid_queries.rst", "_generated/splinepy.helpme.create.rst", "_generated/splinepy.helpme.create.Creator.rst", "_generated/splinepy.helpme.create.Creator.determinant_spline.rst", "_generated/splinepy.helpme.create.Creator.extruded.rst", "_generated/splinepy.helpme.create.Creator.parametric_view.rst", "_generated/splinepy.helpme.create.Creator.revolved.rst", "_generated/splinepy.helpme.create.arc.rst", "_generated/splinepy.helpme.create.box.rst", "_generated/splinepy.helpme.create.circle.rst", "_generated/splinepy.helpme.create.cone.rst", "_generated/splinepy.helpme.create.determinant_spline.rst", "_generated/splinepy.helpme.create.disk.rst", "_generated/splinepy.helpme.create.extruded.rst", "_generated/splinepy.helpme.create.from_bounds.rst", "_generated/splinepy.helpme.create.line.rst", "_generated/splinepy.helpme.create.parametric_view.rst", "_generated/splinepy.helpme.create.plate.rst", "_generated/splinepy.helpme.create.pyramid.rst", "_generated/splinepy.helpme.create.revolved.rst", "_generated/splinepy.helpme.create.sphere.rst", "_generated/splinepy.helpme.create.surface_circle.rst", "_generated/splinepy.helpme.create.torus.rst", "_generated/splinepy.helpme.extract.rst", "_generated/splinepy.helpme.extract.Extractor.rst", "_generated/splinepy.helpme.extract.Extractor.beziers.rst", "_generated/splinepy.helpme.extract.Extractor.boundaries.rst", "_generated/splinepy.helpme.extract.Extractor.control_edges.rst", "_generated/splinepy.helpme.extract.Extractor.control_faces.rst", "_generated/splinepy.helpme.extract.Extractor.control_mesh.rst", "_generated/splinepy.helpme.extract.Extractor.control_points.rst", "_generated/splinepy.helpme.extract.Extractor.control_volumes.rst", "_generated/splinepy.helpme.extract.Extractor.edges.rst", "_generated/splinepy.helpme.extract.Extractor.faces.rst", "_generated/splinepy.helpme.extract.Extractor.spline.rst", "_generated/splinepy.helpme.extract.Extractor.volumes.rst", "_generated/splinepy.helpme.extract.boundaries.rst", "_generated/splinepy.helpme.extract.control_edges.rst", "_generated/splinepy.helpme.extract.control_faces.rst", "_generated/splinepy.helpme.extract.control_mesh.rst", "_generated/splinepy.helpme.extract.control_points.rst", "_generated/splinepy.helpme.extract.control_volumes.rst", "_generated/splinepy.helpme.extract.edges.rst", "_generated/splinepy.helpme.extract.faces.rst", "_generated/splinepy.helpme.extract.spline.rst", "_generated/splinepy.helpme.extract.volumes.rst", "_generated/splinepy.helpme.ffd.rst", "_generated/splinepy.helpme.ffd.FFD.rst", "_generated/splinepy.helpme.ffd.FFD.mesh.rst", "_generated/splinepy.helpme.ffd.FFD.padding.rst", "_generated/splinepy.helpme.ffd.FFD.show.rst", "_generated/splinepy.helpme.ffd.FFD.showable.rst", "_generated/splinepy.helpme.ffd.FFD.spline.rst", "_generated/splinepy.helpme.integrate.rst", "_generated/splinepy.helpme.integrate.Integrator.rst", "_generated/splinepy.helpme.integrate.Integrator.volume.rst", "_generated/splinepy.helpme.integrate.parametric_function.rst", "_generated/splinepy.helpme.integrate.physical_function.rst", "_generated/splinepy.helpme.integrate.volume.rst", "_generated/splinepy.helpme.mapper.rst", "_generated/splinepy.helpme.mapper.Mapper.rst", "_generated/splinepy.helpme.mapper.Mapper.basis_function_derivatives.rst", "_generated/splinepy.helpme.mapper.Mapper.basis_gradient_and_support.rst", "_generated/splinepy.helpme.mapper.Mapper.basis_hessian_and_support.rst", "_generated/splinepy.helpme.mapper.Mapper.basis_laplacian_and_support.rst", "_generated/splinepy.helpme.mapper.Mapper.divergence.rst", "_generated/splinepy.helpme.mapper.Mapper.field_derivatives.rst", "_generated/splinepy.helpme.mapper.Mapper.gradient.rst", "_generated/splinepy.helpme.mapper.Mapper.hessian.rst", "_generated/splinepy.helpme.mapper.Mapper.laplacian.rst", "_generated/splinepy.helpme.multi_index.rst", "_generated/splinepy.helpme.multi_index.MultiIndex.rst", "_generated/splinepy.helpme.permute.rst", "_generated/splinepy.helpme.permute.parametric_axes.rst", "_generated/splinepy.helpme.visualize.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.clear.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.get.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.items.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.keys.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.pop.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.update.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.valid_keys.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.values.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.clear.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.copy_valid_options.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.get.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.items.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.keys.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.pop.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.update.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.valid_keys.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.values.rst", "_generated/splinepy.helpme.visualize.make_showable.rst", "_generated/splinepy.helpme.visualize.show.rst", "_generated/splinepy.io.rst", "_generated/splinepy.io.cats.rst", "_generated/splinepy.io.cats.export.rst", "_generated/splinepy.io.cats.load.rst", "_generated/splinepy.io.gismo.rst", "_generated/splinepy.io.gismo.export.rst", "_generated/splinepy.io.gismo.load.rst", "_generated/splinepy.io.iges.rst", "_generated/splinepy.io.iges.export.rst", "_generated/splinepy.io.iges.load.rst", "_generated/splinepy.io.ioutils.rst", "_generated/splinepy.io.ioutils.abs_fname.rst", "_generated/splinepy.io.ioutils.dict_to_spline.rst", "_generated/splinepy.io.ioutils.expand_tabs.rst", "_generated/splinepy.io.ioutils.form_lines.rst", "_generated/splinepy.io.ioutils.make_meaningful.rst", "_generated/splinepy.io.ioutils.next_line.rst", "_generated/splinepy.io.irit.rst", "_generated/splinepy.io.irit.export.rst", "_generated/splinepy.io.irit.load.rst", "_generated/splinepy.io.json.rst", "_generated/splinepy.io.json.export.rst", "_generated/splinepy.io.json.load.rst", "_generated/splinepy.io.mfem.rst", "_generated/splinepy.io.mfem.dof_mapping.rst", "_generated/splinepy.io.mfem.export.rst", "_generated/splinepy.io.mfem.export_cartesian.rst", "_generated/splinepy.io.mfem.load.rst", "_generated/splinepy.io.mfem.read_solution.rst", "_generated/splinepy.io.npz.rst", "_generated/splinepy.io.npz.export.rst", "_generated/splinepy.io.npz.load.rst", "_generated/splinepy.io.vtk.rst", "_generated/splinepy.io.vtk.export.rst", "_generated/splinepy.load.rst", "_generated/splinepy.load.load_solution.rst", "_generated/splinepy.load.load_splines.rst", "_generated/splinepy.microstructure.rst", "_generated/splinepy.microstructure.microstructure.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.create.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.deformation_function.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.microtile.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.parametrization_function.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.show.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.tiling.rst", "_generated/splinepy.microstructure.tiles.rst", "_generated/splinepy.microstructure.tiles.armadillo.rst", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.rst", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.check_params.rst", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.closing_tile.rst", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.create_tile.rst", "_generated/splinepy.microstructure.tiles.chi.rst", "_generated/splinepy.microstructure.tiles.chi.Chi.rst", "_generated/splinepy.microstructure.tiles.chi.Chi.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.chi.Chi.check_params.rst", "_generated/splinepy.microstructure.tiles.chi.Chi.create_tile.rst", "_generated/splinepy.microstructure.tiles.cross_2d.rst", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.rst", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.check_params.rst", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile.rst", "_generated/splinepy.microstructure.tiles.cross_3d.rst", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.rst", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.check_params.rst", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile.rst", "_generated/splinepy.microstructure.tiles.cube_void.rst", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.rst", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.check_params.rst", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile.rst", "_generated/splinepy.microstructure.tiles.double_lattice.rst", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.rst", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params.rst", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile.rst", "_generated/splinepy.microstructure.tiles.snappy.rst", "_generated/splinepy.microstructure.tiles.snappy.Snappy.rst", "_generated/splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.snappy.Snappy.check_params.rst", "_generated/splinepy.microstructure.tiles.snappy.Snappy.create_tile.rst", "_generated/splinepy.microstructure.tiles.tile_base.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.check_params.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.dim.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.para_dim.rst", "_generated/splinepy.multipatch.rst", "_generated/splinepy.multipatch.Multipatch.rst", "_generated/splinepy.multipatch.Multipatch.add_fields.rst", "_generated/splinepy.multipatch.Multipatch.boundaries.rst", "_generated/splinepy.multipatch.Multipatch.boundaries_from_continuity.rst", "_generated/splinepy.multipatch.Multipatch.boundary_from_function.rst", "_generated/splinepy.multipatch.Multipatch.boundary_multipatch.rst", "_generated/splinepy.multipatch.Multipatch.boundary_patch_ids.rst", "_generated/splinepy.multipatch.Multipatch.clear.rst", "_generated/splinepy.multipatch.Multipatch.combine_boundaries.rst", "_generated/splinepy.multipatch.Multipatch.control_point_offsets.rst", "_generated/splinepy.multipatch.Multipatch.determine_interfaces.rst", "_generated/splinepy.multipatch.Multipatch.dim.rst", "_generated/splinepy.multipatch.Multipatch.evaluate.rst", "_generated/splinepy.multipatch.Multipatch.extract.rst", "_generated/splinepy.multipatch.Multipatch.fields.rst", "_generated/splinepy.multipatch.Multipatch.interfaces.rst", "_generated/splinepy.multipatch.Multipatch.para_dim.rst", "_generated/splinepy.multipatch.Multipatch.patches.rst", "_generated/splinepy.multipatch.Multipatch.sample.rst", "_generated/splinepy.multipatch.Multipatch.set_boundary.rst", "_generated/splinepy.multipatch.Multipatch.show.rst", "_generated/splinepy.multipatch.Multipatch.show_options.rst", "_generated/splinepy.multipatch.Multipatch.showable.rst", "_generated/splinepy.multipatch.Multipatch.spline_data.rst", "_generated/splinepy.multipatch.Multipatch.sub_multipatch.rst", "_generated/splinepy.multipatch.Multipatch.sub_patch_centers.rst", "_generated/splinepy.nurbs.rst", "_generated/splinepy.nurbs.NURBS.rst", "_generated/splinepy.nurbs.NURBS.basis.rst", "_generated/splinepy.nurbs.NURBS.basis_and_support.rst", "_generated/splinepy.nurbs.NURBS.basis_derivative.rst", "_generated/splinepy.nurbs.NURBS.basis_derivative_and_support.rst", "_generated/splinepy.nurbs.NURBS.clear.rst", "_generated/splinepy.nurbs.NURBS.copy.rst", "_generated/splinepy.nurbs.NURBS.current_core_properties.rst", "_generated/splinepy.nurbs.NURBS.derivative.rst", "_generated/splinepy.nurbs.NURBS.elevate_degrees.rst", "_generated/splinepy.nurbs.NURBS.evaluate.rst", "_generated/splinepy.nurbs.NURBS.export.rst", "_generated/splinepy.nurbs.NURBS.extract_bezier_patches.rst", "_generated/splinepy.nurbs.NURBS.greville_abscissae.rst", "_generated/splinepy.nurbs.NURBS.insert_knots.rst", "_generated/splinepy.nurbs.NURBS.jacobian.rst", "_generated/splinepy.nurbs.NURBS.knot_insertion_matrix.rst", "_generated/splinepy.nurbs.NURBS.mapper.rst", "_generated/splinepy.nurbs.NURBS.normalize_knot_vectors.rst", "_generated/splinepy.nurbs.NURBS.nurbs.rst", "_generated/splinepy.nurbs.NURBS.proximities.rst", "_generated/splinepy.nurbs.NURBS.reduce_degrees.rst", "_generated/splinepy.nurbs.NURBS.remove_knots.rst", "_generated/splinepy.nurbs.NURBS.sample.rst", "_generated/splinepy.nurbs.NURBS.show.rst", "_generated/splinepy.nurbs.NURBS.showable.rst", "_generated/splinepy.nurbs.NURBS.support.rst", "_generated/splinepy.nurbs.NURBS.todict.rst", "_generated/splinepy.rational_bezier.rst", "_generated/splinepy.rational_bezier.RationalBezier.rst", "_generated/splinepy.rational_bezier.RationalBezier.basis.rst", "_generated/splinepy.rational_bezier.RationalBezier.basis_and_support.rst", "_generated/splinepy.rational_bezier.RationalBezier.basis_derivative.rst", "_generated/splinepy.rational_bezier.RationalBezier.basis_derivative_and_support.rst", "_generated/splinepy.rational_bezier.RationalBezier.clear.rst", "_generated/splinepy.rational_bezier.RationalBezier.compose.rst", "_generated/splinepy.rational_bezier.RationalBezier.composition_derivative.rst", "_generated/splinepy.rational_bezier.RationalBezier.copy.rst", "_generated/splinepy.rational_bezier.RationalBezier.current_core_properties.rst", "_generated/splinepy.rational_bezier.RationalBezier.derivative.rst", "_generated/splinepy.rational_bezier.RationalBezier.derivative_spline.rst", "_generated/splinepy.rational_bezier.RationalBezier.elevate_degrees.rst", "_generated/splinepy.rational_bezier.RationalBezier.evaluate.rst", "_generated/splinepy.rational_bezier.RationalBezier.export.rst", "_generated/splinepy.rational_bezier.RationalBezier.extract_dim.rst", "_generated/splinepy.rational_bezier.RationalBezier.greville_abscissae.rst", "_generated/splinepy.rational_bezier.RationalBezier.jacobian.rst", "_generated/splinepy.rational_bezier.RationalBezier.mapper.rst", "_generated/splinepy.rational_bezier.RationalBezier.nurbs.rst", "_generated/splinepy.rational_bezier.RationalBezier.proximities.rst", "_generated/splinepy.rational_bezier.RationalBezier.rationalbezier.rst", "_generated/splinepy.rational_bezier.RationalBezier.reduce_degrees.rst", "_generated/splinepy.rational_bezier.RationalBezier.sample.rst", "_generated/splinepy.rational_bezier.RationalBezier.show.rst", "_generated/splinepy.rational_bezier.RationalBezier.showable.rst", "_generated/splinepy.rational_bezier.RationalBezier.split.rst", "_generated/splinepy.rational_bezier.RationalBezier.support.rst", "_generated/splinepy.rational_bezier.RationalBezier.todict.rst", "_generated/splinepy.settings.rst", "_generated/splinepy.settings.CHECK_BOUNDS.rst", "_generated/splinepy.settings.NAME_TO_TYPE.rst", "_generated/splinepy.settings.NTHREADS.rst", "_generated/splinepy.settings.TOLERANCE.rst", "_generated/splinepy.spline.rst", "_generated/splinepy.spline.RequiredProperties.rst", "_generated/splinepy.spline.RequiredProperties.intersection.rst", "_generated/splinepy.spline.RequiredProperties.of.rst", "_generated/splinepy.spline.RequiredProperties.union.rst", "_generated/splinepy.spline.Spline.rst", "_generated/splinepy.spline.Spline.basis.rst", "_generated/splinepy.spline.Spline.basis_and_support.rst", "_generated/splinepy.spline.Spline.basis_derivative.rst", "_generated/splinepy.spline.Spline.basis_derivative_and_support.rst", "_generated/splinepy.spline.Spline.check.rst", "_generated/splinepy.spline.Spline.clear.rst", "_generated/splinepy.spline.Spline.control_mesh_resolutions.rst", "_generated/splinepy.spline.Spline.control_point_bounds.rst", "_generated/splinepy.spline.Spline.control_points.rst", "_generated/splinepy.spline.Spline.copy.rst", "_generated/splinepy.spline.Spline.cps.rst", "_generated/splinepy.spline.Spline.create.rst", "_generated/splinepy.spline.Spline.current_core_properties.rst", "_generated/splinepy.spline.Spline.degrees.rst", "_generated/splinepy.spline.Spline.derivative.rst", "_generated/splinepy.spline.Spline.dim.rst", "_generated/splinepy.spline.Spline.ds.rst", "_generated/splinepy.spline.Spline.elevate_degrees.rst", "_generated/splinepy.spline.Spline.evaluate.rst", "_generated/splinepy.spline.Spline.export.rst", "_generated/splinepy.spline.Spline.extract.rst", "_generated/splinepy.spline.Spline.greville_abscissae.rst", "_generated/splinepy.spline.Spline.has_knot_vectors.rst", "_generated/splinepy.spline.Spline.integrate.rst", "_generated/splinepy.spline.Spline.is_rational.rst", "_generated/splinepy.spline.Spline.jacobian.rst", "_generated/splinepy.spline.Spline.knot_multiplicities.rst", "_generated/splinepy.spline.Spline.knot_vectors.rst", "_generated/splinepy.spline.Spline.kvs.rst", "_generated/splinepy.spline.Spline.mapper.rst", "_generated/splinepy.spline.Spline.multi_index.rst", "_generated/splinepy.spline.Spline.name.rst", "_generated/splinepy.spline.Spline.para_dim.rst", "_generated/splinepy.spline.Spline.parametric_bounds.rst", "_generated/splinepy.spline.Spline.proximities.rst", "_generated/splinepy.spline.Spline.reduce_degrees.rst", "_generated/splinepy.spline.Spline.required_properties.rst", "_generated/splinepy.spline.Spline.sample.rst", "_generated/splinepy.spline.Spline.show.rst", "_generated/splinepy.spline.Spline.show_options.rst", "_generated/splinepy.spline.Spline.showable.rst", "_generated/splinepy.spline.Spline.spline_data.rst", "_generated/splinepy.spline.Spline.support.rst", "_generated/splinepy.spline.Spline.todict.rst", "_generated/splinepy.spline.Spline.unique_knots.rst", "_generated/splinepy.spline.Spline.weights.rst", "_generated/splinepy.spline.Spline.whatami.rst", "_generated/splinepy.spline.Spline.ws.rst", "_generated/splinepy.splinepy_core.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.dim.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.len.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.set_row.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.set_rows.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.sync.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.sync_rows.rst", "_generated/splinepy.splinepy_core.KnotVector.rst", "_generated/splinepy.splinepy_core.KnotVector.find_span.rst", "_generated/splinepy.splinepy_core.KnotVector.multiplicities.rst", "_generated/splinepy.splinepy_core.KnotVector.numpy.rst", "_generated/splinepy.splinepy_core.KnotVector.scale.rst", "_generated/splinepy.splinepy_core.KnotVector.unique.rst", "_generated/splinepy.splinepy_core.PyMultipatch.rst", "_generated/splinepy.splinepy_core.PyMultipatch.add_fields.rst", "_generated/splinepy.splinepy_core.PyMultipatch.boundary_multipatch.rst", "_generated/splinepy.splinepy_core.PyMultipatch.boundary_patch_ids.rst", "_generated/splinepy.splinepy_core.PyMultipatch.clear.rst", "_generated/splinepy.splinepy_core.PyMultipatch.control_point_offsets.rst", "_generated/splinepy.splinepy_core.PyMultipatch.control_points.rst", "_generated/splinepy.splinepy_core.PyMultipatch.dim.rst", "_generated/splinepy.splinepy_core.PyMultipatch.evaluate.rst", "_generated/splinepy.splinepy_core.PyMultipatch.fields.rst", "_generated/splinepy.splinepy_core.PyMultipatch.interfaces.rst", "_generated/splinepy.splinepy_core.PyMultipatch.n_default_threads.rst", "_generated/splinepy.splinepy_core.PyMultipatch.name.rst", "_generated/splinepy.splinepy_core.PyMultipatch.para_dim.rst", "_generated/splinepy.splinepy_core.PyMultipatch.patches.rst", "_generated/splinepy.splinepy_core.PyMultipatch.same_parametric_bounds.rst", "_generated/splinepy.splinepy_core.PyMultipatch.sample.rst", "_generated/splinepy.splinepy_core.PyMultipatch.sub_multipatch.rst", "_generated/splinepy.splinepy_core.PyMultipatch.sub_patch_centers.rst", "_generated/splinepy.splinepy_core.PyMultipatch.tolerance.rst", "_generated/splinepy.splinepy_core.PyMultipatch.whatami.rst", "_generated/splinepy.splinepy_core.PySpline.rst", "_generated/splinepy.splinepy_core.PySpline.basis.rst", "_generated/splinepy.splinepy_core.PySpline.basis_and_support.rst", "_generated/splinepy.splinepy_core.PySpline.basis_derivative.rst", "_generated/splinepy.splinepy_core.PySpline.basis_derivative_and_support.rst", "_generated/splinepy.splinepy_core.PySpline.control_mesh_resolutions.rst", "_generated/splinepy.splinepy_core.PySpline.current_core_properties.rst", "_generated/splinepy.splinepy_core.PySpline.derivative.rst", "_generated/splinepy.splinepy_core.PySpline.dim.rst", "_generated/splinepy.splinepy_core.PySpline.elevate_degrees.rst", "_generated/splinepy.splinepy_core.PySpline.evaluate.rst", "_generated/splinepy.splinepy_core.PySpline.has_knot_vectors.rst", "_generated/splinepy.splinepy_core.PySpline.is_rational.rst", "_generated/splinepy.splinepy_core.PySpline.jacobian.rst", "_generated/splinepy.splinepy_core.PySpline.name.rst", "_generated/splinepy.splinepy_core.PySpline.para_dim.rst", "_generated/splinepy.splinepy_core.PySpline.parametric_bounds.rst", "_generated/splinepy.splinepy_core.PySpline.proximities.rst", "_generated/splinepy.splinepy_core.PySpline.reduce_degrees.rst", "_generated/splinepy.splinepy_core.PySpline.sample.rst", "_generated/splinepy.splinepy_core.PySpline.support.rst", "_generated/splinepy.splinepy_core.PySpline.whatami.rst", "_generated/splinepy.splinepy_core.WeightPointers.rst", "_generated/splinepy.splinepy_core.WeightPointers.dim.rst", "_generated/splinepy.splinepy_core.WeightPointers.len.rst", "_generated/splinepy.splinepy_core.WeightPointers.set_row.rst", "_generated/splinepy.splinepy_core.WeightPointers.set_rows.rst", "_generated/splinepy.splinepy_core.WeightPointers.sync.rst", "_generated/splinepy.splinepy_core.WeightPointers.sync_rows.rst", "_generated/splinepy.splinepy_core.add.rst", "_generated/splinepy.splinepy_core.annul_core.rst", "_generated/splinepy.splinepy_core.approximate_curve.rst", "_generated/splinepy.splinepy_core.approximate_surface.rst", "_generated/splinepy.splinepy_core.bezier_extraction_matrix.rst", "_generated/splinepy.splinepy_core.boundaries_from_continuity.rst", "_generated/splinepy.splinepy_core.boundary_centers.rst", "_generated/splinepy.splinepy_core.build_type.rst", "_generated/splinepy.splinepy_core.compose.rst", "_generated/splinepy.splinepy_core.compose_sensitivities.rst", "_generated/splinepy.splinepy_core.composition_derivative.rst", "_generated/splinepy.splinepy_core.core_id.rst", "_generated/splinepy.splinepy_core.core_ref_count.rst", "_generated/splinepy.splinepy_core.derivative_spline.rst", "_generated/splinepy.splinepy_core.export_iges.rst", "_generated/splinepy.splinepy_core.extract_all_boundary_splines.rst", "_generated/splinepy.splinepy_core.extract_bezier_patches.rst", "_generated/splinepy.splinepy_core.extract_boundaries.rst", "_generated/splinepy.splinepy_core.extract_dim.rst", "_generated/splinepy.splinepy_core.global_knot_insertion_matrix.rst", "_generated/splinepy.splinepy_core.has_core.rst", "_generated/splinepy.splinepy_core.insert_knots.rst", "_generated/splinepy.splinepy_core.interfaces_from_boundary_centers.rst", "_generated/splinepy.splinepy_core.interpolate_curve.rst", "_generated/splinepy.splinepy_core.interpolate_surface.rst", "_generated/splinepy.splinepy_core.is_minimal.rst", "_generated/splinepy.splinepy_core.knot_insertion_matrix.rst", "_generated/splinepy.splinepy_core.multiply.rst", "_generated/splinepy.splinepy_core.null_spline.rst", "_generated/splinepy.splinepy_core.orientations.rst", "_generated/splinepy.splinepy_core.read_iges.rst", "_generated/splinepy.splinepy_core.remove_knots.rst", "_generated/splinepy.splinepy_core.same_spline_with_knot_vectors.rst", "_generated/splinepy.splinepy_core.split.rst", "_generated/splinepy.to_derived.rst", "_generated/splinepy.utils.rst", "_generated/splinepy.utils.data.rst", "_generated/splinepy.utils.data.MultipatchData.rst", "_generated/splinepy.utils.data.MultipatchData.as_arrow.rst", "_generated/splinepy.utils.data.MultipatchData.as_scalar.rst", "_generated/splinepy.utils.data.MultipatchData.clear.rst", "_generated/splinepy.utils.data.MultipatchData.get.rst", "_generated/splinepy.utils.data.MultipatchData.items.rst", "_generated/splinepy.utils.data.MultipatchData.keys.rst", "_generated/splinepy.utils.data.MultipatchData.pop.rst", "_generated/splinepy.utils.data.MultipatchData.values.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.all.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.any.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.argmax.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.argmin.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.argpartition.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.argsort.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.astype.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.byteswap.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.choose.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.clip.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.compress.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.conj.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.conjugate.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.copy.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.cumprod.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.cumsum.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.diagonal.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.dot.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.dump.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.dumps.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.fill.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.flatten.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.full_row_indices.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.getfield.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.item.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.itemset.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.max.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.mean.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.min.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.newbyteorder.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.nonzero.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.partition.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.prod.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.ptp.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.put.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.ravel.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.repeat.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.reshape.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.resize.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.round.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.row_indices.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.searchsorted.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.setfield.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.setflags.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.sort.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.squeeze.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.std.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.sum.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.swapaxes.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.take.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.tobytes.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.tofile.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.tolist.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.tostring.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.trace.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.transpose.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.var.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.view.rst", "_generated/splinepy.utils.data.SplineData.rst", "_generated/splinepy.utils.data.SplineData.as_arrow.rst", "_generated/splinepy.utils.data.SplineData.as_scalar.rst", "_generated/splinepy.utils.data.SplineData.clear.rst", "_generated/splinepy.utils.data.SplineData.get.rst", "_generated/splinepy.utils.data.SplineData.items.rst", "_generated/splinepy.utils.data.SplineData.keys.rst", "_generated/splinepy.utils.data.SplineData.pop.rst", "_generated/splinepy.utils.data.SplineData.values.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.arrow_data_only.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.as_vertex_data.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.data.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.function.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.has_evaluate.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.has_function.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.has_locations.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.is_spline.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.locations.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.parametric_bounds.rst", "_generated/splinepy.utils.data.cartesian_product.rst", "_generated/splinepy.utils.data.enforce_contiguous.rst", "_generated/splinepy.utils.data.enforce_contiguous_values.rst", "_generated/splinepy.utils.data.make_matrix.rst", "_generated/splinepy.utils.data.uniform_query.rst", "_generated/splinepy.utils.log.rst", "_generated/splinepy.utils.log.configure.rst", "_generated/splinepy.utils.log.debug.rst", "_generated/splinepy.utils.log.info.rst", "_generated/splinepy.utils.log.prepend_log.rst", "_generated/splinepy.utils.log.warning.rst", "api_reference.rst", "index.rst", "python_api.rst", "spline_intro.rst"], "titles": ["Contributing", "splinepy", "splinepy.bezier", "splinepy.bezier.Bezier", "splinepy.bezier.Bezier.basis", "splinepy.bezier.Bezier.basis_and_support", "splinepy.bezier.Bezier.basis_derivative", "splinepy.bezier.Bezier.basis_derivative_and_support", "splinepy.bezier.Bezier.bezier", "splinepy.bezier.Bezier.bspline", "splinepy.bezier.Bezier.clear", "splinepy.bezier.Bezier.compose", "splinepy.bezier.Bezier.composition_derivative", "splinepy.bezier.Bezier.copy", "splinepy.bezier.Bezier.current_core_properties", "splinepy.bezier.Bezier.derivative", "splinepy.bezier.Bezier.derivative_spline", "splinepy.bezier.Bezier.elevate_degrees", "splinepy.bezier.Bezier.evaluate", "splinepy.bezier.Bezier.export", "splinepy.bezier.Bezier.extract_dim", "splinepy.bezier.Bezier.greville_abscissae", "splinepy.bezier.Bezier.jacobian", "splinepy.bezier.Bezier.mapper", "splinepy.bezier.Bezier.nurbs", "splinepy.bezier.Bezier.proximities", "splinepy.bezier.Bezier.rationalbezier", "splinepy.bezier.Bezier.reduce_degrees", "splinepy.bezier.Bezier.sample", "splinepy.bezier.Bezier.show", "splinepy.bezier.Bezier.showable", "splinepy.bezier.Bezier.split", "splinepy.bezier.Bezier.support", "splinepy.bezier.Bezier.todict", "splinepy.bezier.BezierBase", "splinepy.bezier.BezierBase.basis", "splinepy.bezier.BezierBase.basis_and_support", "splinepy.bezier.BezierBase.basis_derivative", "splinepy.bezier.BezierBase.basis_derivative_and_support", "splinepy.bezier.BezierBase.clear", "splinepy.bezier.BezierBase.compose", "splinepy.bezier.BezierBase.composition_derivative", "splinepy.bezier.BezierBase.copy", "splinepy.bezier.BezierBase.current_core_properties", "splinepy.bezier.BezierBase.derivative", "splinepy.bezier.BezierBase.derivative_spline", "splinepy.bezier.BezierBase.elevate_degrees", "splinepy.bezier.BezierBase.evaluate", "splinepy.bezier.BezierBase.export", "splinepy.bezier.BezierBase.extract_dim", "splinepy.bezier.BezierBase.greville_abscissae", "splinepy.bezier.BezierBase.jacobian", "splinepy.bezier.BezierBase.mapper", "splinepy.bezier.BezierBase.proximities", "splinepy.bezier.BezierBase.reduce_degrees", "splinepy.bezier.BezierBase.sample", "splinepy.bezier.BezierBase.show", "splinepy.bezier.BezierBase.showable", "splinepy.bezier.BezierBase.split", "splinepy.bezier.BezierBase.support", "splinepy.bezier.BezierBase.todict", "splinepy.bspline", "splinepy.bspline.BSpline", "splinepy.bspline.BSpline.approximate_curve", "splinepy.bspline.BSpline.approximate_surface", "splinepy.bspline.BSpline.basis", "splinepy.bspline.BSpline.basis_and_support", "splinepy.bspline.BSpline.basis_derivative", "splinepy.bspline.BSpline.basis_derivative_and_support", "splinepy.bspline.BSpline.bspline", "splinepy.bspline.BSpline.clear", "splinepy.bspline.BSpline.copy", "splinepy.bspline.BSpline.current_core_properties", "splinepy.bspline.BSpline.derivative", "splinepy.bspline.BSpline.elevate_degrees", "splinepy.bspline.BSpline.evaluate", "splinepy.bspline.BSpline.export", "splinepy.bspline.BSpline.extract_bezier_patches", "splinepy.bspline.BSpline.greville_abscissae", "splinepy.bspline.BSpline.insert_knots", "splinepy.bspline.BSpline.interpolate_curve", "splinepy.bspline.BSpline.interpolate_surface", "splinepy.bspline.BSpline.jacobian", "splinepy.bspline.BSpline.knot_insertion_matrix", "splinepy.bspline.BSpline.mapper", "splinepy.bspline.BSpline.normalize_knot_vectors", "splinepy.bspline.BSpline.nurbs", "splinepy.bspline.BSpline.proximities", "splinepy.bspline.BSpline.reduce_degrees", "splinepy.bspline.BSpline.remove_knots", "splinepy.bspline.BSpline.sample", "splinepy.bspline.BSpline.show", "splinepy.bspline.BSpline.showable", "splinepy.bspline.BSpline.support", "splinepy.bspline.BSpline.todict", "splinepy.bspline.BSplineBase", "splinepy.bspline.BSplineBase.basis", "splinepy.bspline.BSplineBase.basis_and_support", "splinepy.bspline.BSplineBase.basis_derivative", "splinepy.bspline.BSplineBase.basis_derivative_and_support", "splinepy.bspline.BSplineBase.clear", "splinepy.bspline.BSplineBase.copy", "splinepy.bspline.BSplineBase.current_core_properties", "splinepy.bspline.BSplineBase.derivative", "splinepy.bspline.BSplineBase.elevate_degrees", "splinepy.bspline.BSplineBase.evaluate", "splinepy.bspline.BSplineBase.export", "splinepy.bspline.BSplineBase.extract_bezier_patches", "splinepy.bspline.BSplineBase.greville_abscissae", "splinepy.bspline.BSplineBase.insert_knots", "splinepy.bspline.BSplineBase.jacobian", "splinepy.bspline.BSplineBase.knot_insertion_matrix", "splinepy.bspline.BSplineBase.mapper", "splinepy.bspline.BSplineBase.normalize_knot_vectors", "splinepy.bspline.BSplineBase.proximities", "splinepy.bspline.BSplineBase.reduce_degrees", "splinepy.bspline.BSplineBase.remove_knots", "splinepy.bspline.BSplineBase.sample", "splinepy.bspline.BSplineBase.show", "splinepy.bspline.BSplineBase.showable", "splinepy.bspline.BSplineBase.support", "splinepy.bspline.BSplineBase.todict", "splinepy.helpme", "splinepy.helpme.check", "splinepy.helpme.check.Checker", "splinepy.helpme.check.Checker.valid_queries", "splinepy.helpme.check.valid_queries", "splinepy.helpme.create", "splinepy.helpme.create.Creator", "splinepy.helpme.create.Creator.determinant_spline", "splinepy.helpme.create.Creator.extruded", "splinepy.helpme.create.Creator.parametric_view", "splinepy.helpme.create.Creator.revolved", "splinepy.helpme.create.arc", "splinepy.helpme.create.box", "splinepy.helpme.create.circle", "splinepy.helpme.create.cone", "splinepy.helpme.create.determinant_spline", "splinepy.helpme.create.disk", "splinepy.helpme.create.extruded", "splinepy.helpme.create.from_bounds", "splinepy.helpme.create.line", "splinepy.helpme.create.parametric_view", "splinepy.helpme.create.plate", "splinepy.helpme.create.pyramid", "splinepy.helpme.create.revolved", "splinepy.helpme.create.sphere", "splinepy.helpme.create.surface_circle", "splinepy.helpme.create.torus", "splinepy.helpme.extract", "splinepy.helpme.extract.Extractor", "splinepy.helpme.extract.Extractor.beziers", "splinepy.helpme.extract.Extractor.boundaries", "splinepy.helpme.extract.Extractor.control_edges", "splinepy.helpme.extract.Extractor.control_faces", "splinepy.helpme.extract.Extractor.control_mesh", "splinepy.helpme.extract.Extractor.control_points", "splinepy.helpme.extract.Extractor.control_volumes", "splinepy.helpme.extract.Extractor.edges", "splinepy.helpme.extract.Extractor.faces", "splinepy.helpme.extract.Extractor.spline", "splinepy.helpme.extract.Extractor.volumes", "splinepy.helpme.extract.boundaries", "splinepy.helpme.extract.control_edges", "splinepy.helpme.extract.control_faces", "splinepy.helpme.extract.control_mesh", "splinepy.helpme.extract.control_points", "splinepy.helpme.extract.control_volumes", "splinepy.helpme.extract.edges", "splinepy.helpme.extract.faces", "splinepy.helpme.extract.spline", "splinepy.helpme.extract.volumes", "splinepy.helpme.ffd", "splinepy.helpme.ffd.FFD", "splinepy.helpme.ffd.FFD.mesh", "splinepy.helpme.ffd.FFD.padding", "splinepy.helpme.ffd.FFD.show", "splinepy.helpme.ffd.FFD.showable", "splinepy.helpme.ffd.FFD.spline", "splinepy.helpme.integrate", "splinepy.helpme.integrate.Integrator", "splinepy.helpme.integrate.Integrator.volume", "splinepy.helpme.integrate.parametric_function", "splinepy.helpme.integrate.physical_function", "splinepy.helpme.integrate.volume", "splinepy.helpme.mapper", "splinepy.helpme.mapper.Mapper", "splinepy.helpme.mapper.Mapper.basis_function_derivatives", "splinepy.helpme.mapper.Mapper.basis_gradient_and_support", "splinepy.helpme.mapper.Mapper.basis_hessian_and_support", "splinepy.helpme.mapper.Mapper.basis_laplacian_and_support", "splinepy.helpme.mapper.Mapper.divergence", "splinepy.helpme.mapper.Mapper.field_derivatives", "splinepy.helpme.mapper.Mapper.gradient", "splinepy.helpme.mapper.Mapper.hessian", "splinepy.helpme.mapper.Mapper.laplacian", "splinepy.helpme.multi_index", "splinepy.helpme.multi_index.MultiIndex", "splinepy.helpme.permute", "splinepy.helpme.permute.parametric_axes", "splinepy.helpme.visualize", "splinepy.helpme.visualize.MultipatchShowOption", "splinepy.helpme.visualize.MultipatchShowOption.clear", "splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options", "splinepy.helpme.visualize.MultipatchShowOption.get", "splinepy.helpme.visualize.MultipatchShowOption.items", "splinepy.helpme.visualize.MultipatchShowOption.keys", "splinepy.helpme.visualize.MultipatchShowOption.pop", "splinepy.helpme.visualize.MultipatchShowOption.update", "splinepy.helpme.visualize.MultipatchShowOption.valid_keys", "splinepy.helpme.visualize.MultipatchShowOption.values", "splinepy.helpme.visualize.SplineShowOption", "splinepy.helpme.visualize.SplineShowOption.clear", "splinepy.helpme.visualize.SplineShowOption.copy_valid_options", "splinepy.helpme.visualize.SplineShowOption.get", "splinepy.helpme.visualize.SplineShowOption.items", "splinepy.helpme.visualize.SplineShowOption.keys", "splinepy.helpme.visualize.SplineShowOption.pop", "splinepy.helpme.visualize.SplineShowOption.update", "splinepy.helpme.visualize.SplineShowOption.valid_keys", "splinepy.helpme.visualize.SplineShowOption.values", "splinepy.helpme.visualize.make_showable", "splinepy.helpme.visualize.show", "splinepy.io", "splinepy.io.cats", "splinepy.io.cats.export", "splinepy.io.cats.load", "splinepy.io.gismo", "splinepy.io.gismo.export", "splinepy.io.gismo.load", "splinepy.io.iges", "splinepy.io.iges.export", "splinepy.io.iges.load", "splinepy.io.ioutils", "splinepy.io.ioutils.abs_fname", "splinepy.io.ioutils.dict_to_spline", "splinepy.io.ioutils.expand_tabs", "splinepy.io.ioutils.form_lines", "splinepy.io.ioutils.make_meaningful", "splinepy.io.ioutils.next_line", "splinepy.io.irit", "splinepy.io.irit.export", "splinepy.io.irit.load", "splinepy.io.json", "splinepy.io.json.export", "splinepy.io.json.load", "splinepy.io.mfem", "splinepy.io.mfem.dof_mapping", "splinepy.io.mfem.export", "splinepy.io.mfem.export_cartesian", "splinepy.io.mfem.load", "splinepy.io.mfem.read_solution", "splinepy.io.npz", "splinepy.io.npz.export", "splinepy.io.npz.load", "splinepy.io.vtk", "splinepy.io.vtk.export", "splinepy.load", "splinepy.load.load_solution", "splinepy.load.load_splines", "splinepy.microstructure", "splinepy.microstructure.microstructure", "splinepy.microstructure.microstructure.Microstructure", "splinepy.microstructure.microstructure.Microstructure.create", "splinepy.microstructure.microstructure.Microstructure.deformation_function", "splinepy.microstructure.microstructure.Microstructure.microtile", "splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function", "splinepy.microstructure.microstructure.Microstructure.parametrization_function", "splinepy.microstructure.microstructure.Microstructure.show", "splinepy.microstructure.microstructure.Microstructure.tiling", "splinepy.microstructure.tiles", "splinepy.microstructure.tiles.armadillo", "splinepy.microstructure.tiles.armadillo.Armadillo", "splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives", "splinepy.microstructure.tiles.armadillo.Armadillo.check_params", "splinepy.microstructure.tiles.armadillo.Armadillo.closing_tile", "splinepy.microstructure.tiles.armadillo.Armadillo.create_tile", "splinepy.microstructure.tiles.chi", "splinepy.microstructure.tiles.chi.Chi", "splinepy.microstructure.tiles.chi.Chi.check_param_derivatives", "splinepy.microstructure.tiles.chi.Chi.check_params", "splinepy.microstructure.tiles.chi.Chi.create_tile", "splinepy.microstructure.tiles.cross_2d", "splinepy.microstructure.tiles.cross_2d.Cross2D", "splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives", "splinepy.microstructure.tiles.cross_2d.Cross2D.check_params", "splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile", "splinepy.microstructure.tiles.cross_3d", "splinepy.microstructure.tiles.cross_3d.Cross3D", "splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives", "splinepy.microstructure.tiles.cross_3d.Cross3D.check_params", "splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile", "splinepy.microstructure.tiles.cube_void", "splinepy.microstructure.tiles.cube_void.CubeVoid", "splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives", "splinepy.microstructure.tiles.cube_void.CubeVoid.check_params", "splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile", "splinepy.microstructure.tiles.double_lattice", "splinepy.microstructure.tiles.double_lattice.DoubleLattice", "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives", "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params", "splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile", "splinepy.microstructure.tiles.ellips_v_oid", "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid", "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives", "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params", "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile", "splinepy.microstructure.tiles.hollow_cube", "splinepy.microstructure.tiles.hollow_cube.HollowCube", "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives", "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params", "splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile", "splinepy.microstructure.tiles.hollow_octagon", "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon", "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives", "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params", "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile", "splinepy.microstructure.tiles.hollow_octagon_extrude", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile", "splinepy.microstructure.tiles.inverse_cross_3d", "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D", "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives", "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params", "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile", "splinepy.microstructure.tiles.snappy", "splinepy.microstructure.tiles.snappy.Snappy", "splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives", "splinepy.microstructure.tiles.snappy.Snappy.check_params", "splinepy.microstructure.tiles.snappy.Snappy.create_tile", "splinepy.microstructure.tiles.tile_base", "splinepy.microstructure.tiles.tile_base.TileBase", "splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives", "splinepy.microstructure.tiles.tile_base.TileBase.check_params", "splinepy.microstructure.tiles.tile_base.TileBase.dim", "splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points", "splinepy.microstructure.tiles.tile_base.TileBase.para_dim", "splinepy.multipatch", "splinepy.multipatch.Multipatch", "splinepy.multipatch.Multipatch.add_fields", "splinepy.multipatch.Multipatch.boundaries", "splinepy.multipatch.Multipatch.boundaries_from_continuity", "splinepy.multipatch.Multipatch.boundary_from_function", "splinepy.multipatch.Multipatch.boundary_multipatch", "splinepy.multipatch.Multipatch.boundary_patch_ids", "splinepy.multipatch.Multipatch.clear", "splinepy.multipatch.Multipatch.combine_boundaries", "splinepy.multipatch.Multipatch.control_point_offsets", "splinepy.multipatch.Multipatch.determine_interfaces", "splinepy.multipatch.Multipatch.dim", "splinepy.multipatch.Multipatch.evaluate", "splinepy.multipatch.Multipatch.extract", "splinepy.multipatch.Multipatch.fields", "splinepy.multipatch.Multipatch.interfaces", "splinepy.multipatch.Multipatch.para_dim", "splinepy.multipatch.Multipatch.patches", "splinepy.multipatch.Multipatch.sample", "splinepy.multipatch.Multipatch.set_boundary", "splinepy.multipatch.Multipatch.show", "splinepy.multipatch.Multipatch.show_options", "splinepy.multipatch.Multipatch.showable", "splinepy.multipatch.Multipatch.spline_data", "splinepy.multipatch.Multipatch.sub_multipatch", "splinepy.multipatch.Multipatch.sub_patch_centers", "splinepy.nurbs", "splinepy.nurbs.NURBS", "splinepy.nurbs.NURBS.basis", "splinepy.nurbs.NURBS.basis_and_support", "splinepy.nurbs.NURBS.basis_derivative", "splinepy.nurbs.NURBS.basis_derivative_and_support", "splinepy.nurbs.NURBS.clear", "splinepy.nurbs.NURBS.copy", "splinepy.nurbs.NURBS.current_core_properties", "splinepy.nurbs.NURBS.derivative", "splinepy.nurbs.NURBS.elevate_degrees", "splinepy.nurbs.NURBS.evaluate", "splinepy.nurbs.NURBS.export", "splinepy.nurbs.NURBS.extract_bezier_patches", "splinepy.nurbs.NURBS.greville_abscissae", "splinepy.nurbs.NURBS.insert_knots", "splinepy.nurbs.NURBS.jacobian", "splinepy.nurbs.NURBS.knot_insertion_matrix", "splinepy.nurbs.NURBS.mapper", "splinepy.nurbs.NURBS.normalize_knot_vectors", "splinepy.nurbs.NURBS.nurbs", "splinepy.nurbs.NURBS.proximities", "splinepy.nurbs.NURBS.reduce_degrees", "splinepy.nurbs.NURBS.remove_knots", "splinepy.nurbs.NURBS.sample", "splinepy.nurbs.NURBS.show", "splinepy.nurbs.NURBS.showable", "splinepy.nurbs.NURBS.support", "splinepy.nurbs.NURBS.todict", "splinepy.rational_bezier", "splinepy.rational_bezier.RationalBezier", "splinepy.rational_bezier.RationalBezier.basis", "splinepy.rational_bezier.RationalBezier.basis_and_support", "splinepy.rational_bezier.RationalBezier.basis_derivative", "splinepy.rational_bezier.RationalBezier.basis_derivative_and_support", "splinepy.rational_bezier.RationalBezier.clear", "splinepy.rational_bezier.RationalBezier.compose", "splinepy.rational_bezier.RationalBezier.composition_derivative", "splinepy.rational_bezier.RationalBezier.copy", "splinepy.rational_bezier.RationalBezier.current_core_properties", "splinepy.rational_bezier.RationalBezier.derivative", "splinepy.rational_bezier.RationalBezier.derivative_spline", "splinepy.rational_bezier.RationalBezier.elevate_degrees", "splinepy.rational_bezier.RationalBezier.evaluate", "splinepy.rational_bezier.RationalBezier.export", "splinepy.rational_bezier.RationalBezier.extract_dim", "splinepy.rational_bezier.RationalBezier.greville_abscissae", "splinepy.rational_bezier.RationalBezier.jacobian", "splinepy.rational_bezier.RationalBezier.mapper", "splinepy.rational_bezier.RationalBezier.nurbs", "splinepy.rational_bezier.RationalBezier.proximities", "splinepy.rational_bezier.RationalBezier.rationalbezier", "splinepy.rational_bezier.RationalBezier.reduce_degrees", "splinepy.rational_bezier.RationalBezier.sample", "splinepy.rational_bezier.RationalBezier.show", "splinepy.rational_bezier.RationalBezier.showable", "splinepy.rational_bezier.RationalBezier.split", "splinepy.rational_bezier.RationalBezier.support", "splinepy.rational_bezier.RationalBezier.todict", "splinepy.settings", "splinepy.settings.CHECK_BOUNDS", "splinepy.settings.NAME_TO_TYPE", "splinepy.settings.NTHREADS", "splinepy.settings.TOLERANCE", "splinepy.spline", "splinepy.spline.RequiredProperties", "splinepy.spline.RequiredProperties.intersection", "splinepy.spline.RequiredProperties.of", "splinepy.spline.RequiredProperties.union", "splinepy.spline.Spline", "splinepy.spline.Spline.basis", "splinepy.spline.Spline.basis_and_support", "splinepy.spline.Spline.basis_derivative", "splinepy.spline.Spline.basis_derivative_and_support", "splinepy.spline.Spline.check", "splinepy.spline.Spline.clear", "splinepy.spline.Spline.control_mesh_resolutions", "splinepy.spline.Spline.control_point_bounds", "splinepy.spline.Spline.control_points", "splinepy.spline.Spline.copy", "splinepy.spline.Spline.cps", "splinepy.spline.Spline.create", "splinepy.spline.Spline.current_core_properties", "splinepy.spline.Spline.degrees", "splinepy.spline.Spline.derivative", "splinepy.spline.Spline.dim", "splinepy.spline.Spline.ds", "splinepy.spline.Spline.elevate_degrees", "splinepy.spline.Spline.evaluate", "splinepy.spline.Spline.export", "splinepy.spline.Spline.extract", "splinepy.spline.Spline.greville_abscissae", "splinepy.spline.Spline.has_knot_vectors", "splinepy.spline.Spline.integrate", "splinepy.spline.Spline.is_rational", "splinepy.spline.Spline.jacobian", "splinepy.spline.Spline.knot_multiplicities", "splinepy.spline.Spline.knot_vectors", "splinepy.spline.Spline.kvs", "splinepy.spline.Spline.mapper", "splinepy.spline.Spline.multi_index", "splinepy.spline.Spline.name", "splinepy.spline.Spline.para_dim", "splinepy.spline.Spline.parametric_bounds", "splinepy.spline.Spline.proximities", "splinepy.spline.Spline.reduce_degrees", "splinepy.spline.Spline.required_properties", "splinepy.spline.Spline.sample", "splinepy.spline.Spline.show", "splinepy.spline.Spline.show_options", "splinepy.spline.Spline.showable", "splinepy.spline.Spline.spline_data", "splinepy.spline.Spline.support", "splinepy.spline.Spline.todict", "splinepy.spline.Spline.unique_knots", "splinepy.spline.Spline.weights", "splinepy.spline.Spline.whatami", "splinepy.spline.Spline.ws", "splinepy.splinepy_core", "splinepy.splinepy_core.ControlPointPointers", "splinepy.splinepy_core.ControlPointPointers.dim", "splinepy.splinepy_core.ControlPointPointers.len", "splinepy.splinepy_core.ControlPointPointers.set_row", "splinepy.splinepy_core.ControlPointPointers.set_rows", "splinepy.splinepy_core.ControlPointPointers.sync", "splinepy.splinepy_core.ControlPointPointers.sync_rows", "splinepy.splinepy_core.KnotVector", "splinepy.splinepy_core.KnotVector.find_span", "splinepy.splinepy_core.KnotVector.multiplicities", "splinepy.splinepy_core.KnotVector.numpy", "splinepy.splinepy_core.KnotVector.scale", "splinepy.splinepy_core.KnotVector.unique", "splinepy.splinepy_core.PyMultipatch", "splinepy.splinepy_core.PyMultipatch.add_fields", "splinepy.splinepy_core.PyMultipatch.boundary_multipatch", "splinepy.splinepy_core.PyMultipatch.boundary_patch_ids", "splinepy.splinepy_core.PyMultipatch.clear", "splinepy.splinepy_core.PyMultipatch.control_point_offsets", "splinepy.splinepy_core.PyMultipatch.control_points", "splinepy.splinepy_core.PyMultipatch.dim", "splinepy.splinepy_core.PyMultipatch.evaluate", "splinepy.splinepy_core.PyMultipatch.fields", "splinepy.splinepy_core.PyMultipatch.interfaces", "splinepy.splinepy_core.PyMultipatch.n_default_threads", "splinepy.splinepy_core.PyMultipatch.name", "splinepy.splinepy_core.PyMultipatch.para_dim", "splinepy.splinepy_core.PyMultipatch.patches", "splinepy.splinepy_core.PyMultipatch.same_parametric_bounds", "splinepy.splinepy_core.PyMultipatch.sample", "splinepy.splinepy_core.PyMultipatch.sub_multipatch", "splinepy.splinepy_core.PyMultipatch.sub_patch_centers", "splinepy.splinepy_core.PyMultipatch.tolerance", "splinepy.splinepy_core.PyMultipatch.whatami", "splinepy.splinepy_core.PySpline", "splinepy.splinepy_core.PySpline.basis", "splinepy.splinepy_core.PySpline.basis_and_support", "splinepy.splinepy_core.PySpline.basis_derivative", "splinepy.splinepy_core.PySpline.basis_derivative_and_support", "splinepy.splinepy_core.PySpline.control_mesh_resolutions", "splinepy.splinepy_core.PySpline.current_core_properties", "splinepy.splinepy_core.PySpline.derivative", "splinepy.splinepy_core.PySpline.dim", "splinepy.splinepy_core.PySpline.elevate_degrees", "splinepy.splinepy_core.PySpline.evaluate", "splinepy.splinepy_core.PySpline.has_knot_vectors", "splinepy.splinepy_core.PySpline.is_rational", "splinepy.splinepy_core.PySpline.jacobian", "splinepy.splinepy_core.PySpline.name", "splinepy.splinepy_core.PySpline.para_dim", "splinepy.splinepy_core.PySpline.parametric_bounds", "splinepy.splinepy_core.PySpline.proximities", "splinepy.splinepy_core.PySpline.reduce_degrees", "splinepy.splinepy_core.PySpline.sample", "splinepy.splinepy_core.PySpline.support", "splinepy.splinepy_core.PySpline.whatami", "splinepy.splinepy_core.WeightPointers", "splinepy.splinepy_core.WeightPointers.dim", "splinepy.splinepy_core.WeightPointers.len", "splinepy.splinepy_core.WeightPointers.set_row", "splinepy.splinepy_core.WeightPointers.set_rows", "splinepy.splinepy_core.WeightPointers.sync", "splinepy.splinepy_core.WeightPointers.sync_rows", "splinepy.splinepy_core.add", "splinepy.splinepy_core.annul_core", "splinepy.splinepy_core.approximate_curve", "splinepy.splinepy_core.approximate_surface", "splinepy.splinepy_core.bezier_extraction_matrix", "splinepy.splinepy_core.boundaries_from_continuity", "splinepy.splinepy_core.boundary_centers", "splinepy.splinepy_core.build_type", "splinepy.splinepy_core.compose", "splinepy.splinepy_core.compose_sensitivities", "splinepy.splinepy_core.composition_derivative", "splinepy.splinepy_core.core_id", "splinepy.splinepy_core.core_ref_count", "splinepy.splinepy_core.derivative_spline", "splinepy.splinepy_core.export_iges", "splinepy.splinepy_core.extract_all_boundary_splines", "splinepy.splinepy_core.extract_bezier_patches", "splinepy.splinepy_core.extract_boundaries", "splinepy.splinepy_core.extract_dim", "splinepy.splinepy_core.global_knot_insertion_matrix", "splinepy.splinepy_core.has_core", "splinepy.splinepy_core.insert_knots", "splinepy.splinepy_core.interfaces_from_boundary_centers", "splinepy.splinepy_core.interpolate_curve", "splinepy.splinepy_core.interpolate_surface", "splinepy.splinepy_core.is_minimal", "splinepy.splinepy_core.knot_insertion_matrix", "splinepy.splinepy_core.multiply", "splinepy.splinepy_core.null_spline", "splinepy.splinepy_core.orientations", "splinepy.splinepy_core.read_iges", "splinepy.splinepy_core.remove_knots", "splinepy.splinepy_core.same_spline_with_knot_vectors", "splinepy.splinepy_core.split", "splinepy.to_derived", "splinepy.utils", "splinepy.utils.data", "splinepy.utils.data.MultipatchData", "splinepy.utils.data.MultipatchData.as_arrow", "splinepy.utils.data.MultipatchData.as_scalar", "splinepy.utils.data.MultipatchData.clear", "splinepy.utils.data.MultipatchData.get", "splinepy.utils.data.MultipatchData.items", "splinepy.utils.data.MultipatchData.keys", "splinepy.utils.data.MultipatchData.pop", "splinepy.utils.data.MultipatchData.values", "splinepy.utils.data.PhysicalSpaceArray", "splinepy.utils.data.PhysicalSpaceArray.all", "splinepy.utils.data.PhysicalSpaceArray.any", "splinepy.utils.data.PhysicalSpaceArray.argmax", "splinepy.utils.data.PhysicalSpaceArray.argmin", "splinepy.utils.data.PhysicalSpaceArray.argpartition", "splinepy.utils.data.PhysicalSpaceArray.argsort", "splinepy.utils.data.PhysicalSpaceArray.astype", "splinepy.utils.data.PhysicalSpaceArray.byteswap", "splinepy.utils.data.PhysicalSpaceArray.choose", "splinepy.utils.data.PhysicalSpaceArray.clip", "splinepy.utils.data.PhysicalSpaceArray.compress", "splinepy.utils.data.PhysicalSpaceArray.conj", "splinepy.utils.data.PhysicalSpaceArray.conjugate", "splinepy.utils.data.PhysicalSpaceArray.copy", "splinepy.utils.data.PhysicalSpaceArray.cumprod", "splinepy.utils.data.PhysicalSpaceArray.cumsum", "splinepy.utils.data.PhysicalSpaceArray.diagonal", "splinepy.utils.data.PhysicalSpaceArray.dot", "splinepy.utils.data.PhysicalSpaceArray.dump", "splinepy.utils.data.PhysicalSpaceArray.dumps", "splinepy.utils.data.PhysicalSpaceArray.fill", "splinepy.utils.data.PhysicalSpaceArray.flatten", "splinepy.utils.data.PhysicalSpaceArray.full_row_indices", "splinepy.utils.data.PhysicalSpaceArray.getfield", "splinepy.utils.data.PhysicalSpaceArray.item", "splinepy.utils.data.PhysicalSpaceArray.itemset", "splinepy.utils.data.PhysicalSpaceArray.max", "splinepy.utils.data.PhysicalSpaceArray.mean", "splinepy.utils.data.PhysicalSpaceArray.min", "splinepy.utils.data.PhysicalSpaceArray.newbyteorder", "splinepy.utils.data.PhysicalSpaceArray.nonzero", "splinepy.utils.data.PhysicalSpaceArray.partition", "splinepy.utils.data.PhysicalSpaceArray.prod", "splinepy.utils.data.PhysicalSpaceArray.ptp", "splinepy.utils.data.PhysicalSpaceArray.put", "splinepy.utils.data.PhysicalSpaceArray.ravel", "splinepy.utils.data.PhysicalSpaceArray.repeat", "splinepy.utils.data.PhysicalSpaceArray.reshape", "splinepy.utils.data.PhysicalSpaceArray.resize", "splinepy.utils.data.PhysicalSpaceArray.round", "splinepy.utils.data.PhysicalSpaceArray.row_indices", "splinepy.utils.data.PhysicalSpaceArray.searchsorted", "splinepy.utils.data.PhysicalSpaceArray.setfield", "splinepy.utils.data.PhysicalSpaceArray.setflags", "splinepy.utils.data.PhysicalSpaceArray.sort", "splinepy.utils.data.PhysicalSpaceArray.squeeze", "splinepy.utils.data.PhysicalSpaceArray.std", "splinepy.utils.data.PhysicalSpaceArray.sum", "splinepy.utils.data.PhysicalSpaceArray.swapaxes", "splinepy.utils.data.PhysicalSpaceArray.take", "splinepy.utils.data.PhysicalSpaceArray.tobytes", "splinepy.utils.data.PhysicalSpaceArray.tofile", "splinepy.utils.data.PhysicalSpaceArray.tolist", "splinepy.utils.data.PhysicalSpaceArray.tostring", "splinepy.utils.data.PhysicalSpaceArray.trace", "splinepy.utils.data.PhysicalSpaceArray.transpose", "splinepy.utils.data.PhysicalSpaceArray.var", "splinepy.utils.data.PhysicalSpaceArray.view", "splinepy.utils.data.SplineData", "splinepy.utils.data.SplineData.as_arrow", "splinepy.utils.data.SplineData.as_scalar", "splinepy.utils.data.SplineData.clear", "splinepy.utils.data.SplineData.get", "splinepy.utils.data.SplineData.items", "splinepy.utils.data.SplineData.keys", "splinepy.utils.data.SplineData.pop", "splinepy.utils.data.SplineData.values", "splinepy.utils.data.SplineDataAdaptor", "splinepy.utils.data.SplineDataAdaptor.arrow_data_only", "splinepy.utils.data.SplineDataAdaptor.as_vertex_data", "splinepy.utils.data.SplineDataAdaptor.data", "splinepy.utils.data.SplineDataAdaptor.function", "splinepy.utils.data.SplineDataAdaptor.has_evaluate", "splinepy.utils.data.SplineDataAdaptor.has_function", "splinepy.utils.data.SplineDataAdaptor.has_locations", "splinepy.utils.data.SplineDataAdaptor.is_spline", "splinepy.utils.data.SplineDataAdaptor.locations", "splinepy.utils.data.SplineDataAdaptor.parametric_bounds", "splinepy.utils.data.cartesian_product", "splinepy.utils.data.enforce_contiguous", "splinepy.utils.data.enforce_contiguous_values", "splinepy.utils.data.make_matrix", "splinepy.utils.data.uniform_query", "splinepy.utils.log", "splinepy.utils.log.configure", "splinepy.utils.log.debug", "splinepy.utils.log.info", "splinepy.utils.log.prepend_log", "splinepy.utils.log.warning", "API References", "splinepy", "&lt;no title&gt;", "Introduction to Splines"], "terms": {"splinepi": [0, 685, 688], "welcom": 0, "appreci": 0, "discuss": [0, 436, 688], "issu": [0, 173], "pull": 0, "request": [0, 16, 45, 126, 321, 408, 427], "onc": [0, 34, 228, 627, 688], "repo": 0, "i": [0, 3, 11, 12, 13, 19, 25, 33, 34, 40, 41, 42, 48, 53, 60, 62, 63, 64, 71, 76, 80, 81, 83, 87, 94, 95, 101, 106, 111, 114, 121, 124, 129, 130, 131, 133, 137, 139, 140, 142, 152, 153, 154, 157, 159, 162, 163, 164, 167, 169, 173, 176, 186, 187, 192, 193, 194, 199, 204, 214, 222, 234, 236, 238, 239, 244, 258, 259, 265, 275, 276, 281, 286, 291, 301, 311, 316, 321, 322, 327, 332, 338, 342, 343, 345, 353, 356, 368, 374, 379, 384, 388, 395, 397, 403, 404, 405, 411, 417, 425, 428, 433, 435, 436, 446, 456, 461, 468, 471, 480, 483, 588, 590, 602, 603, 612, 616, 617, 619, 620, 621, 625, 627, 633, 634, 639, 640, 646, 647, 648, 651, 656, 658, 663, 674, 675, 676, 677, 685, 686, 688], "fork": 0, "one": [0, 3, 62, 130, 135, 139, 143, 152, 159, 162, 169, 187, 192, 255, 275, 276, 286, 291, 316, 321, 322, 327, 368, 397, 602, 617, 620, 621, 641, 676, 680, 683, 688], "possibl": [0, 21, 50, 78, 108, 148, 228, 238, 381, 413, 458, 602, 621, 688], "point": [0, 3, 11, 12, 25, 34, 40, 41, 53, 62, 63, 64, 80, 81, 83, 87, 95, 111, 114, 133, 141, 156, 166, 173, 186, 187, 191, 192, 193, 194, 195, 196, 249, 263, 266, 267, 275, 276, 286, 291, 316, 321, 322, 327, 345, 351, 368, 384, 388, 397, 403, 404, 417, 444, 445, 447, 467, 471, 551, 552, 572, 573, 663, 674, 677, 686, 688], "would": [0, 25, 53, 87, 114, 356, 388, 417, 471, 600, 601, 620, 627, 686], "creat": [0, 83, 111, 235, 236, 270, 275, 276, 281, 286, 291, 296, 301, 306, 311, 316, 321, 322, 327, 332, 384, 609, 663, 677, 678, 685, 686], "new": [0, 11, 40, 79, 83, 109, 111, 128, 130, 139, 199, 236, 345, 349, 351, 360, 382, 384, 403, 448, 589, 600, 602, 604, 625, 627, 633, 634, 646, 651, 657, 676, 688], "environ": 0, "exampl": [0, 34, 95, 124, 128, 150, 176, 180, 222, 356, 434, 436, 441, 448, 457, 460, 461, 602, 603, 616, 617, 619, 620, 621, 627, 633, 634, 638, 639, 640, 646, 648, 651], "us": [0, 11, 21, 23, 34, 40, 50, 52, 78, 83, 84, 95, 108, 111, 112, 124, 132, 133, 136, 145, 150, 159, 160, 169, 173, 178, 186, 191, 193, 194, 195, 197, 199, 228, 244, 250, 258, 266, 267, 275, 276, 281, 286, 291, 293, 301, 303, 311, 316, 321, 322, 327, 332, 342, 344, 345, 346, 353, 366, 368, 381, 384, 385, 403, 413, 415, 428, 436, 448, 458, 466, 467, 468, 585, 602, 604, 620, 621, 627, 634, 639, 640, 647, 663, 674, 677, 685, 686, 688], "conda": 0, "3": [0, 3, 62, 128, 135, 157, 159, 161, 167, 169, 171, 248, 275, 276, 296, 306, 332, 338, 356, 368, 397, 603, 616, 617, 620, 621, 627, 634, 638, 639, 640, 646, 648, 651, 688], "10": [0, 63, 64, 80, 81, 184, 248, 436, 633], "n": [0, 3, 4, 5, 6, 7, 15, 18, 22, 25, 28, 32, 35, 36, 37, 38, 44, 47, 51, 53, 55, 59, 62, 63, 65, 66, 67, 68, 73, 75, 80, 81, 82, 87, 90, 93, 95, 96, 97, 98, 99, 103, 105, 110, 114, 117, 120, 129, 134, 137, 140, 141, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 342, 353, 368, 369, 370, 371, 372, 376, 378, 383, 388, 391, 394, 397, 398, 399, 400, 401, 407, 410, 414, 417, 420, 424, 436, 437, 438, 439, 440, 445, 447, 451, 455, 462, 471, 474, 479, 482, 484, 630, 634, 651, 665, 674, 688], "splinepyenv": 0, "activ": 0, "git": [0, 686], "clone": [0, 686], "github": [0, 686], "com": [0, 674, 686], "path": [0, 242, 614, 647], "your": [0, 428], "cd": [0, 686], "forknam": 0, "submodul": [0, 686], "updat": [0, 639, 685, 686], "init": [0, 250, 686], "recurs": [0, 95, 648, 676, 686], "checkout": 0, "b": [0, 3, 21, 34, 50, 62, 78, 95, 108, 129, 137, 186, 332, 368, 381, 397, 413, 436, 458, 549, 576, 603, 634, 640, 646], "feature0": 0, "pip": [0, 686], "instal": 0, "e": [0, 3, 12, 34, 41, 95, 192, 199, 228, 321, 332, 356, 368, 397, 404, 436, 468, 647, 686, 688], "config": 0, "set": [0, 11, 25, 40, 53, 83, 85, 87, 95, 111, 113, 114, 126, 131, 142, 173, 177, 228, 236, 266, 267, 293, 301, 303, 345, 346, 353, 360, 384, 386, 388, 403, 417, 471, 602, 604, 621, 630, 634, 639, 653, 663, 680, 685, 688], "cmake": [0, 686], "arg": [0, 34, 95, 129, 130, 131, 132, 152, 158, 159, 161, 181, 207, 217, 237, 609, 620, 621, 653], "dsplinepy_mor": 0, "off": 0, "typedebug": [0, 680, 683, 685], "argument": [0, 3, 11, 34, 40, 62, 83, 95, 111, 130, 132, 139, 145, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 187, 192, 368, 384, 397, 403, 620, 621, 627, 633, 634, 640, 651, 688], "spline": [0, 3, 10, 11, 15, 16, 18, 19, 20, 21, 22, 23, 25, 28, 29, 30, 31, 33, 34, 39, 40, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 62, 70, 73, 75, 76, 78, 82, 83, 84, 87, 90, 91, 92, 94, 95, 100, 103, 105, 106, 108, 110, 111, 112, 114, 117, 118, 119, 121, 124, 126, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 180, 184, 186, 199, 211, 221, 222, 224, 225, 226, 228, 229, 231, 232, 235, 241, 242, 243, 244, 245, 246, 247, 249, 250, 253, 254, 256, 258, 259, 263, 264, 265, 276, 281, 286, 291, 296, 301, 306, 311, 316, 321, 322, 327, 332, 340, 341, 342, 344, 346, 353, 354, 355, 358, 359, 360, 363, 364, 368, 373, 376, 378, 379, 381, 383, 384, 385, 388, 391, 392, 393, 395, 397, 402, 403, 407, 408, 410, 411, 412, 413, 414, 415, 417, 420, 421, 422, 423, 425, 550, 553, 555, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 578, 580, 581, 582, 583, 654, 663, 677, 685], "up": [0, 186, 436, 620, 621, 627, 640], "3d": [0, 273, 279, 284, 289, 294, 299, 304, 309, 314, 319, 325, 330, 335], "both": [0, 25, 53, 87, 114, 186, 192, 368, 388, 417, 471, 640, 663, 688], "parametr": [0, 3, 11, 12, 25, 28, 34, 40, 41, 53, 55, 64, 79, 83, 87, 90, 95, 109, 111, 114, 117, 126, 130, 131, 132, 135, 139, 140, 142, 145, 152, 158, 159, 160, 162, 168, 169, 170, 173, 175, 182, 187, 192, 199, 266, 267, 269, 275, 276, 286, 291, 293, 303, 316, 321, 327, 338, 339, 342, 353, 357, 359, 382, 384, 388, 391, 403, 404, 417, 420, 436, 469, 471, 474, 494, 663, 686, 688], "physic": [0, 3, 20, 23, 25, 49, 52, 53, 62, 84, 87, 112, 114, 129, 137, 140, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 337, 352, 368, 385, 388, 397, 412, 415, 417, 436, 452, 466, 471], "dimens": [0, 3, 20, 28, 49, 55, 62, 83, 90, 95, 111, 117, 129, 130, 132, 137, 138, 139, 140, 144, 145, 158, 159, 160, 168, 169, 170, 173, 175, 199, 248, 269, 275, 276, 286, 291, 311, 316, 321, 327, 332, 352, 357, 359, 368, 384, 391, 397, 412, 420, 436, 452, 469, 474, 617, 674, 686, 688], "thei": [0, 21, 50, 78, 95, 108, 222, 275, 276, 286, 311, 316, 321, 322, 332, 344, 345, 381, 413, 458, 627, 640, 675, 688], "ar": [0, 3, 19, 21, 25, 34, 48, 50, 53, 62, 76, 78, 79, 83, 87, 89, 95, 106, 108, 109, 111, 114, 116, 126, 131, 142, 148, 159, 169, 173, 176, 186, 192, 222, 228, 248, 252, 276, 286, 291, 296, 301, 306, 316, 322, 327, 332, 343, 344, 353, 356, 358, 360, 368, 379, 381, 382, 384, 388, 390, 397, 411, 413, 417, 456, 458, 468, 471, 602, 603, 605, 614, 619, 620, 625, 626, 627, 634, 639, 647, 648, 663, 675, 676, 685, 686], "part": [0, 138, 173, 228, 603, 619], "templat": 0, "parametwai": [0, 436, 590, 627, 634, 658, 686, 688], "we": [0, 3, 25, 34, 53, 62, 87, 95, 114, 173, 186, 368, 388, 397, 417, 436, 471, 619, 674, 685, 686, 688], "can": [0, 3, 23, 34, 52, 62, 83, 84, 95, 111, 112, 129, 137, 140, 156, 158, 166, 168, 186, 187, 192, 197, 199, 203, 213, 222, 368, 384, 385, 397, 415, 427, 436, 441, 448, 457, 460, 466, 602, 614, 619, 620, 625, 627, 634, 639, 640, 647, 677, 680, 686, 688], "reduc": [0, 27, 54, 88, 115, 389, 419, 472, 686, 688], "compil": [0, 639, 686], "time": [0, 5, 7, 34, 36, 38, 66, 68, 95, 97, 99, 239, 370, 372, 399, 401, 438, 440, 688], "also": [0, 3, 11, 25, 34, 40, 53, 62, 87, 114, 192, 368, 388, 397, 403, 417, 471, 621, 625, 675, 676, 686, 688], "experi": 0, "dure": [0, 173], "develop": 0, "let": [0, 686], "u": [0, 3, 11, 12, 34, 40, 41, 62, 95, 129, 137, 186, 368, 397, 403, 404, 688], "know": [0, 25, 53, 87, 114, 388, 417, 471], "you": [0, 25, 53, 87, 114, 158, 168, 185, 196, 197, 388, 417, 428, 467, 468, 471, 621, 634, 663, 680, 686, 688], "have": [0, 6, 7, 15, 25, 34, 37, 38, 44, 53, 67, 68, 73, 87, 95, 98, 99, 103, 114, 140, 199, 228, 273, 274, 279, 280, 284, 285, 289, 290, 294, 295, 299, 300, 304, 305, 309, 310, 314, 315, 319, 320, 325, 326, 330, 331, 335, 336, 368, 371, 372, 376, 388, 397, 400, 401, 407, 417, 428, 439, 440, 451, 471, 634, 686, 688], "great": [0, 688], "idea": [0, 688], "pep": 0, "8": [0, 600, 619, 627, 639, 688], "guid": [0, 688], "code": [0, 621, 625, 688], "complex": [0, 25, 53, 87, 114, 388, 417, 471, 602, 603, 607, 608, 619, 686, 688], "comphrehens": 0, "fit": [0, 63, 64, 80, 81, 175, 345, 619, 686, 688], "line": [0, 3, 62, 158, 168, 237, 238, 239, 368, 397, 639, 685], "2": [0, 3, 25, 53, 62, 83, 87, 95, 111, 114, 135, 138, 140, 143, 146, 148, 154, 159, 164, 169, 186, 194, 236, 296, 306, 316, 321, 322, 332, 356, 368, 384, 388, 397, 417, 444, 470, 471, 602, 603, 616, 617, 619, 620, 621, 627, 634, 639, 640, 646, 648, 651, 686, 688], "max": [0, 497, 602, 605, 685], "total": [0, 263], "necessari": [0, 296, 306, 634], "first": [0, 34, 64, 95, 186, 281, 301, 327, 332, 621, 627, 640, 647, 686, 688], "letter": [0, 639], "abbrevi": 0, "element": [0, 95, 132, 145, 248, 356, 596, 597, 602, 603, 607, 608, 610, 611, 616, 617, 619, 620, 621, 623, 626, 627, 628, 632, 633, 634, 635, 637, 640, 642, 643, 645, 648, 652, 676, 688], "loop": [0, 239, 621], "kv": [0, 685], "knot_vector": [0, 62, 63, 80, 252, 368, 434, 436, 465, 551, 572, 685, 686, 688], "j": [0, 3, 62, 129, 137, 152, 162, 184, 186, 193, 368, 397, 619, 651, 688], "k": [0, 3, 11, 12, 40, 41, 62, 193, 368, 397, 403, 404, 602, 617, 686], "l": [0, 3, 62, 95, 368, 397], "pure": [0, 224], "index": [0, 247, 356, 467, 604, 620, 621, 627, 674, 686], "enumer": 0, "modul": [0, 1, 122, 223, 260, 270, 426, 584, 639, 685], "import": [0, 616, 686, 688], "lead": 0, "underscor": 0, "from": [0, 11, 12, 25, 28, 40, 41, 53, 55, 62, 87, 90, 114, 117, 124, 128, 131, 142, 150, 152, 158, 159, 160, 161, 162, 168, 169, 170, 171, 204, 214, 235, 239, 242, 245, 316, 321, 322, 344, 349, 359, 388, 391, 403, 404, 417, 420, 436, 471, 474, 602, 604, 625, 641, 645, 646, 674, 677, 686, 688], "_set": 0, "avoid": [0, 25, 53, 87, 114, 173, 388, 417, 471, 602, 621], "redund": 0, "doc": 0, "string": [0, 228, 236, 237, 249, 263, 332, 428, 602, 603, 614, 615, 625, 627, 639, 640, 647], "copi": [0, 33, 60, 83, 94, 111, 121, 131, 142, 174, 178, 203, 213, 236, 384, 395, 425, 480, 496, 602, 612, 617, 620, 627, 639, 640, 646, 648, 685], "see": [0, 3, 29, 30, 34, 56, 57, 62, 83, 91, 92, 95, 111, 118, 119, 177, 187, 188, 189, 190, 191, 192, 193, 293, 303, 363, 368, 384, 392, 393, 397, 421, 422, 475, 477, 602, 627, 637, 639, 640, 686, 688], "g": [0, 192, 199, 228, 332, 356, 647, 688], "helpm": [0, 29, 30, 56, 57, 91, 92, 118, 119, 363, 392, 393, 421, 422, 441, 457, 460, 475, 477, 685, 688], "For": [0, 3, 25, 34, 53, 62, 87, 95, 114, 368, 388, 397, 417, 436, 471, 633, 637, 648, 686, 688], "ve": 0, "prepar": [0, 221, 663], "clang": 0, "just": [0, 129, 137, 158, 168, 688], "run": 0, "close": [0, 16, 45, 176, 263, 275, 276, 286, 291, 316, 321, 327, 332, 408, 602, 688], "follow": [0, 3, 62, 159, 169, 186, 224, 228, 368, 397, 616, 683, 686, 688], "name": [0, 3, 62, 187, 192, 225, 228, 244, 248, 249, 368, 397, 614, 639, 649, 685, 688], "scheme": 0, "suggest": [0, 688], "googl": 0, "stype": 0, "clear": [0, 685], "except": [0, 620, 639, 648, 688], "file": [0, 225, 228, 229, 236, 239, 242, 244, 245, 249, 252, 257, 258, 259, 614, 639, 647, 686], "here": [0, 3, 12, 19, 41, 48, 62, 76, 95, 106, 186, 379, 404, 411, 456, 685, 688], "": [0, 3, 11, 12, 25, 40, 41, 53, 62, 87, 114, 130, 139, 173, 175, 186, 224, 293, 303, 368, 388, 397, 403, 404, 417, 471, 620, 621, 625, 638, 646, 647, 649, 651, 677, 686, 688], "anoth": [0, 436, 634, 639], "pragma": 0, "To": [0, 173, 353, 602, 663, 688], "command": [0, 688], "pre": 0, "commit": 0, "precommit": 0, "r": [0, 3, 62, 95, 135, 146, 332, 368, 397, 436, 665, 688], "requir": [0, 187, 192, 248, 255, 263, 266, 267, 301, 432, 433, 434, 435, 473, 602, 663, 686, 688], "txt": 0, "python3": [0, 686], "sourc": [0, 3, 34, 40, 41, 45, 49, 58, 62, 63, 64, 80, 81, 95, 107, 109, 111, 113, 116, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 176, 177, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 201, 211, 221, 222, 225, 226, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 241, 242, 244, 245, 247, 248, 249, 250, 251, 253, 254, 256, 258, 259, 262, 263, 268, 272, 275, 276, 278, 281, 283, 286, 288, 291, 293, 296, 298, 301, 303, 306, 308, 311, 313, 316, 318, 321, 322, 324, 327, 329, 332, 334, 335, 336, 341, 342, 344, 345, 346, 349, 351, 353, 359, 360, 361, 363, 368, 397, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 446, 451, 454, 455, 456, 458, 462, 466, 471, 472, 474, 475, 477, 479, 480, 583, 586, 587, 588, 595, 609, 618, 636, 653, 654, 655, 656, 663, 665, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 686], "handle_markdown": 0, "py": [0, 172, 257, 270, 426, 441, 457, 460, 585, 679], "sphinx": 0, "html": 0, "auto": 0, "ignor": [0, 83, 111, 384, 625], "exist": [0, 128, 588, 590, 634, 656, 658], "parallel": [0, 686], "specifi": [0, 203, 213, 228, 229, 311, 316, 321, 322, 332, 468, 602, 612, 614, 620, 621, 627, 634, 638, 640, 663, 688], "number": [0, 64, 95, 132, 133, 135, 138, 140, 145, 146, 148, 160, 175, 187, 192, 263, 266, 267, 269, 296, 306, 342, 344, 346, 356, 429, 603, 619, 620, 635, 638, 677, 688], "process": [0, 427], "now": [0, 62, 368, 614, 647, 688], "open": [0, 34, 95, 135, 176, 222, 239, 647, 688], "browser": 0, "function": [1, 3, 4, 5, 6, 7, 11, 12, 34, 35, 36, 37, 38, 40, 41, 62, 65, 66, 67, 68, 95, 96, 97, 98, 99, 123, 127, 149, 173, 176, 177, 179, 182, 183, 185, 186, 187, 188, 189, 190, 192, 198, 199, 200, 224, 227, 229, 230, 233, 240, 243, 246, 247, 252, 255, 257, 263, 264, 265, 266, 267, 268, 338, 345, 354, 368, 369, 370, 371, 372, 397, 398, 399, 400, 401, 403, 404, 428, 436, 437, 438, 439, 440, 485, 585, 596, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 610, 611, 612, 620, 622, 623, 624, 626, 628, 629, 630, 631, 632, 633, 635, 637, 639, 641, 642, 643, 644, 645, 647, 648, 650, 651, 652, 663, 677, 679, 683, 685, 686], "class": [2, 3, 34, 61, 62, 80, 95, 123, 124, 127, 128, 149, 150, 172, 173, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 200, 201, 211, 261, 262, 265, 271, 272, 277, 278, 282, 283, 287, 288, 292, 293, 297, 298, 302, 303, 307, 308, 312, 313, 317, 318, 323, 324, 328, 329, 333, 334, 340, 341, 367, 368, 396, 397, 428, 431, 432, 436, 485, 486, 493, 499, 520, 542, 585, 586, 595, 602, 648, 654, 663, 685, 688], "degre": [3, 4, 5, 6, 7, 17, 27, 32, 35, 36, 37, 38, 46, 54, 59, 62, 63, 65, 66, 67, 68, 74, 80, 88, 93, 95, 96, 97, 98, 99, 104, 115, 120, 131, 132, 133, 135, 136, 138, 141, 142, 144, 145, 146, 148, 184, 188, 189, 190, 194, 252, 327, 342, 368, 369, 370, 371, 372, 377, 389, 394, 397, 398, 399, 400, 401, 409, 419, 424, 434, 436, 437, 438, 439, 440, 453, 454, 472, 479, 551, 568, 572, 575, 685, 686, 688], "none": [3, 4, 5, 6, 7, 10, 15, 17, 18, 19, 21, 22, 25, 27, 28, 32, 35, 36, 37, 38, 39, 44, 46, 47, 48, 50, 51, 53, 54, 55, 59, 62, 63, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 80, 82, 83, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 120, 136, 138, 139, 145, 146, 148, 151, 152, 160, 162, 173, 175, 178, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 228, 231, 236, 239, 241, 244, 248, 249, 253, 256, 262, 263, 264, 266, 267, 269, 275, 276, 281, 286, 291, 296, 301, 306, 311, 316, 321, 322, 327, 332, 337, 338, 339, 341, 342, 344, 345, 346, 348, 349, 351, 353, 354, 355, 359, 360, 362, 364, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 383, 384, 386, 388, 389, 390, 391, 394, 397, 398, 399, 400, 401, 402, 407, 409, 410, 411, 413, 414, 417, 419, 420, 424, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 481, 482, 483, 484, 489, 490, 491, 492, 497, 500, 503, 529, 545, 546, 547, 548, 550, 563, 587, 588, 590, 593, 596, 597, 598, 599, 600, 601, 604, 605, 606, 610, 611, 615, 616, 620, 622, 623, 624, 627, 628, 629, 632, 634, 635, 637, 638, 639, 640, 641, 642, 643, 645, 648, 650, 651, 652, 655, 656, 658, 661, 663, 665, 675, 676, 680, 681, 682, 684], "control_point": [3, 62, 83, 111, 222, 252, 368, 384, 397, 434, 436, 595, 685, 686, 688], "base": [3, 34, 62, 63, 95, 124, 128, 136, 144, 150, 155, 165, 173, 180, 186, 197, 201, 211, 262, 263, 266, 272, 276, 278, 281, 283, 286, 288, 291, 293, 298, 301, 303, 308, 311, 313, 316, 318, 322, 324, 327, 329, 332, 334, 341, 366, 368, 397, 432, 436, 486, 493, 499, 520, 542, 583, 586, 595, 602, 639, 648, 654, 663, 675, 685, 686], "bezierbas": [3, 11, 12, 16, 397, 403, 404, 408, 436, 685], "pass": [3, 34, 62, 95, 160, 176, 263, 268, 291, 368, 397, 602, 627, 633], "all": [3, 11, 33, 34, 40, 60, 62, 77, 83, 85, 86, 94, 95, 107, 111, 113, 121, 151, 152, 158, 162, 168, 202, 212, 228, 242, 273, 279, 284, 289, 294, 296, 299, 304, 306, 309, 314, 319, 325, 330, 335, 345, 346, 349, 355, 368, 380, 384, 386, 395, 397, 403, 425, 433, 435, 436, 480, 602, 607, 616, 625, 627, 630, 639, 640, 648, 685, 686, 688], "super": [3, 34, 62, 95, 368, 397], "__init__": [3, 34, 62, 95, 270, 368, 397, 428], "distinguish": 3, "between": [3, 21, 50, 78, 83, 108, 111, 247, 275, 276, 286, 291, 301, 316, 321, 322, 342, 344, 351, 381, 384, 413, 458, 602, 603, 619, 647, 686, 688], "differ": [3, 11, 12, 25, 40, 41, 53, 87, 114, 368, 388, 403, 404, 417, 428, 436, 471, 603, 625, 627, 640, 647, 686], "depend": 3, "space": [3, 23, 52, 62, 83, 84, 111, 112, 160, 170, 173, 186, 228, 236, 248, 266, 337, 339, 368, 384, 385, 397, 415, 466, 634, 688], "simplic": [3, 62, 368, 397], "restrict": [3, 62, 368, 397, 612, 688], "ourselv": [3, 62, 368, 397, 688], "three": [3, 62, 368, 397, 688], "most": [3, 62, 368, 397, 634, 639, 648, 685, 686, 688], "common": [3, 62, 221, 368, 397, 685, 686], "curv": [3, 62, 63, 80, 138, 222, 368, 397, 686], "surfac": [3, 62, 64, 81, 136, 138, 147, 159, 169, 263, 275, 321, 368, 397, 686, 688], "volum": [3, 62, 136, 155, 157, 159, 165, 167, 169, 180, 368, 397, 460, 685, 688], "although": [3, 62, 368, 397, 648], "support": [3, 4, 5, 6, 7, 34, 35, 36, 37, 38, 62, 65, 66, 67, 68, 96, 97, 98, 99, 131, 140, 142, 173, 188, 189, 190, 246, 250, 268, 368, 369, 370, 371, 372, 397, 398, 399, 400, 401, 433, 435, 436, 437, 438, 439, 440, 647, 663, 677, 685, 686, 688], "higher": [3, 62, 130, 139, 159, 169, 368, 397, 688], "document": [3, 34, 62, 95, 187, 188, 189, 190, 191, 192, 193, 368, 397, 436, 596, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 610, 611, 612, 622, 623, 624, 626, 628, 629, 630, 631, 632, 633, 635, 637, 640, 641, 642, 643, 644, 645, 650, 651, 652, 685, 686], "more": [3, 62, 83, 111, 177, 186, 187, 188, 189, 190, 191, 192, 193, 293, 303, 368, 384, 397, 436, 688], "inform": [3, 25, 53, 62, 87, 114, 177, 293, 303, 341, 344, 351, 368, 388, 397, 417, 471, 620, 639, 647], "1": [3, 4, 5, 6, 7, 15, 21, 25, 31, 32, 34, 35, 36, 37, 38, 44, 50, 53, 58, 59, 62, 63, 64, 65, 66, 67, 68, 73, 78, 80, 81, 83, 85, 86, 87, 93, 95, 96, 97, 98, 99, 103, 108, 111, 113, 114, 120, 128, 131, 133, 135, 138, 141, 142, 143, 146, 148, 152, 153, 162, 163, 184, 186, 188, 189, 190, 194, 248, 252, 286, 291, 296, 306, 316, 321, 322, 327, 332, 356, 368, 369, 370, 371, 372, 376, 381, 384, 386, 388, 394, 397, 398, 399, 400, 401, 407, 413, 417, 423, 424, 429, 437, 438, 439, 440, 448, 451, 458, 471, 479, 482, 484, 521, 522, 523, 524, 527, 530, 533, 537, 539, 540, 554, 564, 578, 600, 601, 602, 603, 612, 614, 616, 617, 619, 620, 621, 627, 628, 634, 638, 639, 640, 646, 647, 648, 649, 650, 651, 686, 688], "A": [3, 62, 83, 95, 111, 129, 137, 239, 368, 384, 397, 602, 603, 614, 617, 619, 620, 627, 639, 640, 646, 649, 663, 677], "p": [3, 34, 62, 95, 368, 397, 651, 688], "control": [3, 11, 12, 40, 41, 62, 64, 83, 95, 111, 141, 153, 154, 156, 157, 163, 164, 166, 167, 186, 196, 263, 327, 342, 368, 384, 397, 403, 404, 443, 444, 445, 447, 467, 602, 646, 677, 686, 688], "mathbb": [3, 62, 95, 368, 397, 436, 688], "n_": [3, 34, 62, 95, 184, 368, 397, 436, 688], "phy": [3, 62, 368, 397, 436], "dimension": [3, 34, 62, 130, 139, 184, 266, 267, 275, 276, 286, 291, 296, 306, 337, 339, 342, 352, 357, 368, 397, 436, 646, 688], "param": [3, 34, 62, 95, 274, 280, 285, 290, 295, 300, 305, 310, 315, 320, 326, 331, 336, 368, 397, 436], "correspond": [3, 11, 40, 62, 152, 162, 360, 368, 397, 403, 677], "embed": [3, 62, 346, 368, 397, 436, 688], "c": [3, 21, 50, 62, 78, 83, 108, 111, 222, 332, 368, 381, 384, 397, 413, 458, 602, 617, 633, 634, 639, 640, 646, 647, 649, 677, 685, 686, 688], "sum_": [3, 62, 368, 397, 688], "0": [3, 31, 34, 58, 62, 83, 85, 95, 111, 113, 129, 133, 135, 136, 137, 138, 143, 146, 148, 158, 168, 173, 275, 276, 286, 291, 301, 316, 321, 322, 327, 332, 356, 368, 384, 386, 397, 423, 600, 602, 603, 612, 614, 616, 618, 619, 620, 621, 627, 634, 635, 638, 639, 640, 642, 643, 646, 647, 648, 649, 650, 651, 652, 686, 688], "q": [3, 62, 368, 397], "cdot": [3, 12, 41, 184, 404, 677, 688], "two": [3, 21, 50, 62, 78, 108, 186, 249, 275, 276, 286, 291, 344, 351, 368, 381, 397, 413, 458, 621, 627, 686, 688], "v": [3, 62, 263, 303, 368, 397, 637], "m": [3, 6, 7, 11, 15, 37, 38, 40, 44, 62, 67, 68, 73, 98, 99, 103, 368, 371, 372, 376, 397, 400, 401, 403, 407, 436, 439, 440, 451, 665, 688], "due": [3, 62, 688], "tensor": [3, 62, 688], "product": [3, 28, 55, 62, 90, 117, 353, 359, 391, 420, 474, 610, 628, 674, 688], "natur": [3, 62], "basi": [3, 5, 6, 7, 11, 32, 34, 36, 37, 38, 40, 59, 62, 66, 67, 68, 93, 95, 97, 98, 99, 120, 131, 142, 185, 186, 187, 188, 189, 190, 192, 368, 370, 371, 372, 394, 397, 399, 400, 401, 403, 424, 438, 439, 440, 479, 677, 685, 686], "thi": [3, 11, 12, 25, 40, 41, 53, 62, 87, 95, 114, 130, 139, 173, 176, 177, 199, 204, 214, 239, 247, 255, 275, 276, 286, 291, 316, 321, 322, 344, 368, 388, 397, 403, 404, 417, 428, 471, 600, 601, 602, 603, 606, 616, 620, 621, 627, 633, 634, 639, 640, 646, 647, 648, 651, 663, 675, 676, 677, 680, 686, 688], "often": [3, 62], "rewritten": [3, 62], "term": [3, 62, 688], "multi": [3, 34, 62, 83, 111, 384, 467, 686], "variat": [3, 62, 95], "tild": [3, 62, 186, 234, 368, 397], "w": [3, 62, 368, 397, 639, 685, 688], "introduc": [3, 62, 397, 688], "instanc": [3, 62, 368, 397, 675], "construct": [3, 34, 62, 95, 262, 338, 368, 397, 604, 646], "accordingli": [3, 62, 368, 397, 663], "usag": [3, 34, 62, 83, 95, 111, 368, 384, 397, 436], "polynomi": [3, 34, 95, 688], "polynomial_bezi": 3, "para_dim": [3, 4, 5, 6, 7, 15, 16, 18, 21, 22, 25, 31, 32, 35, 36, 37, 38, 44, 45, 47, 50, 51, 53, 58, 59, 62, 65, 66, 67, 68, 73, 75, 78, 82, 87, 93, 96, 97, 98, 99, 103, 105, 108, 110, 114, 120, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 167, 168, 169, 170, 171, 187, 188, 189, 190, 191, 192, 193, 194, 195, 222, 252, 353, 368, 369, 370, 371, 372, 376, 378, 381, 383, 388, 394, 397, 398, 399, 400, 401, 407, 408, 410, 413, 414, 417, 423, 424, 436, 437, 438, 439, 440, 443, 450, 451, 453, 455, 458, 462, 470, 471, 479, 529, 538, 568, 570, 571, 577, 580, 582, 685], "list": [3, 11, 17, 27, 31, 33, 40, 46, 54, 58, 60, 62, 63, 64, 74, 77, 79, 80, 81, 83, 88, 89, 94, 104, 107, 109, 111, 115, 116, 121, 134, 151, 152, 158, 159, 160, 161, 162, 168, 169, 171, 199, 203, 213, 222, 225, 228, 229, 231, 232, 235, 241, 242, 244, 245, 247, 249, 253, 254, 256, 259, 263, 265, 266, 267, 269, 275, 276, 281, 286, 291, 296, 301, 306, 311, 316, 321, 322, 327, 332, 342, 343, 349, 355, 358, 368, 377, 380, 382, 384, 389, 390, 395, 403, 409, 419, 423, 425, 433, 434, 435, 436, 454, 463, 464, 465, 472, 480, 481, 500, 508, 538, 551, 554, 558, 563, 564, 565, 566, 568, 570, 572, 578, 579, 580, 582, 587, 588, 603, 627, 640, 648, 655, 656, 665, 674, 675, 688], "like": [3, 4, 5, 6, 7, 15, 16, 18, 22, 25, 28, 31, 32, 34, 35, 36, 37, 38, 44, 45, 47, 51, 53, 55, 58, 59, 62, 63, 64, 65, 66, 67, 68, 73, 75, 80, 81, 82, 83, 87, 90, 93, 95, 96, 97, 98, 99, 103, 105, 110, 111, 114, 117, 120, 140, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 222, 228, 229, 256, 345, 349, 351, 353, 368, 369, 370, 371, 372, 376, 378, 383, 384, 388, 391, 394, 397, 398, 399, 400, 401, 407, 408, 410, 414, 417, 420, 423, 424, 436, 437, 438, 439, 440, 451, 455, 462, 471, 474, 479, 482, 484, 587, 602, 647, 655, 663, 665, 674, 675, 678, 686, 688], "dim": [3, 15, 18, 20, 22, 25, 28, 44, 47, 49, 51, 53, 55, 62, 73, 75, 82, 87, 90, 103, 105, 110, 114, 117, 135, 184, 193, 248, 252, 353, 359, 368, 376, 378, 383, 388, 391, 397, 407, 410, 412, 414, 417, 420, 436, 444, 445, 447, 451, 455, 462, 471, 474, 577, 685], "return": [3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 241, 242, 244, 245, 247, 248, 249, 250, 251, 253, 254, 256, 258, 259, 263, 264, 266, 267, 268, 269, 273, 274, 276, 279, 280, 281, 284, 285, 286, 289, 290, 291, 294, 295, 296, 299, 300, 301, 304, 305, 306, 309, 310, 311, 314, 315, 316, 319, 320, 321, 322, 325, 326, 327, 330, 331, 332, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 428, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 495, 496, 498, 583, 587, 588, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 608, 610, 611, 612, 615, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 631, 633, 634, 635, 636, 638, 640, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 655, 656, 658, 659, 660, 661, 662, 665, 674, 675, 676, 677, 680, 681, 682, 683, 684], "method": [3, 34, 62, 80, 95, 124, 128, 150, 173, 180, 186, 197, 201, 211, 262, 272, 278, 283, 288, 293, 298, 303, 308, 313, 318, 324, 329, 334, 341, 368, 397, 432, 436, 486, 493, 499, 520, 542, 586, 595, 620, 621, 633, 647, 654, 663, 685, 688], "attribut": [3, 34, 62, 95, 173, 228, 262, 266, 267, 272, 278, 283, 288, 293, 298, 303, 308, 313, 318, 324, 329, 334, 341, 368, 397, 426, 436, 499, 520, 595, 621, 663], "queri": [4, 5, 6, 7, 15, 18, 22, 25, 32, 35, 36, 37, 38, 44, 47, 51, 53, 59, 63, 64, 65, 66, 67, 68, 73, 75, 80, 81, 82, 83, 87, 93, 96, 97, 98, 99, 103, 105, 110, 111, 114, 120, 124, 125, 126, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 353, 369, 370, 371, 372, 376, 378, 383, 384, 388, 394, 398, 399, 400, 401, 407, 410, 414, 417, 424, 427, 437, 438, 439, 440, 441, 451, 455, 462, 471, 479, 507, 521, 522, 523, 524, 527, 530, 533, 537, 540, 663, 677, 678, 686], "nthread": [4, 5, 6, 7, 15, 18, 22, 25, 28, 32, 35, 36, 37, 38, 44, 47, 51, 53, 55, 59, 65, 66, 67, 68, 73, 75, 82, 87, 90, 93, 96, 97, 98, 99, 103, 105, 110, 114, 117, 120, 187, 188, 189, 190, 191, 192, 193, 194, 195, 342, 344, 346, 353, 359, 369, 370, 371, 372, 376, 378, 383, 388, 391, 394, 398, 399, 400, 401, 407, 410, 414, 417, 420, 424, 437, 438, 439, 440, 451, 455, 462, 471, 474, 479, 500, 507, 515, 521, 522, 523, 524, 527, 530, 533, 537, 539, 540, 554, 564, 578, 685, 686], "valu": [4, 5, 11, 21, 25, 33, 35, 36, 40, 50, 53, 60, 65, 66, 78, 87, 94, 95, 96, 97, 108, 114, 121, 160, 170, 180, 186, 187, 191, 192, 204, 207, 214, 217, 275, 276, 286, 291, 296, 306, 316, 321, 322, 343, 344, 345, 360, 369, 370, 381, 388, 395, 398, 399, 403, 413, 417, 425, 437, 438, 441, 458, 471, 480, 489, 490, 491, 492, 545, 546, 547, 548, 588, 590, 591, 593, 598, 599, 602, 603, 605, 616, 619, 621, 622, 624, 625, 627, 629, 630, 638, 639, 656, 658, 659, 661, 663, 676, 677, 685, 688], "given": [4, 5, 6, 7, 11, 12, 25, 31, 32, 34, 35, 36, 37, 38, 40, 41, 53, 58, 59, 63, 65, 66, 67, 68, 80, 83, 87, 93, 96, 97, 98, 99, 111, 114, 120, 129, 130, 131, 133, 137, 139, 140, 142, 143, 151, 158, 168, 170, 173, 180, 184, 251, 275, 276, 286, 291, 316, 346, 356, 369, 370, 371, 372, 384, 388, 394, 398, 399, 400, 401, 403, 404, 417, 423, 424, 433, 435, 437, 438, 439, 440, 471, 479, 494, 497, 587, 588, 590, 598, 599, 602, 605, 606, 610, 611, 619, 622, 623, 624, 625, 628, 629, 635, 642, 643, 645, 652, 655, 656, 658, 677, 678, 688], "arrai": [4, 5, 6, 7, 15, 16, 18, 22, 25, 28, 31, 32, 35, 36, 37, 38, 44, 45, 47, 51, 53, 55, 58, 59, 62, 65, 66, 67, 68, 73, 75, 82, 83, 87, 90, 93, 96, 97, 98, 99, 103, 105, 110, 111, 114, 117, 120, 126, 140, 141, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 222, 247, 256, 273, 275, 276, 279, 281, 284, 286, 289, 291, 294, 296, 299, 301, 304, 306, 309, 314, 316, 319, 322, 325, 327, 330, 332, 335, 343, 345, 349, 351, 353, 356, 360, 369, 370, 371, 372, 376, 378, 383, 384, 388, 391, 394, 397, 398, 399, 400, 401, 407, 408, 410, 414, 417, 420, 423, 424, 436, 437, 438, 439, 440, 451, 455, 462, 463, 471, 474, 479, 482, 484, 496, 587, 595, 600, 601, 602, 603, 604, 605, 606, 609, 612, 614, 615, 616, 617, 619, 620, 621, 623, 625, 627, 628, 631, 632, 633, 634, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 655, 663, 665, 674, 675, 676, 678, 686], "n_thread": [4, 5, 18, 22, 32, 35, 36, 47, 51, 59, 65, 66, 75, 82, 93, 96, 97, 105, 110, 120, 369, 370, 378, 383, 394, 398, 399, 410, 414, 424, 437, 438, 455, 462, 479], "int": [4, 5, 6, 7, 15, 18, 20, 22, 25, 28, 31, 32, 35, 36, 37, 38, 44, 47, 49, 51, 53, 55, 58, 59, 63, 64, 65, 66, 67, 68, 73, 75, 79, 80, 81, 82, 83, 87, 89, 90, 93, 96, 97, 98, 99, 103, 105, 109, 110, 111, 114, 116, 117, 120, 132, 133, 135, 138, 145, 146, 158, 159, 160, 161, 168, 169, 170, 171, 187, 188, 189, 190, 191, 192, 193, 194, 195, 222, 236, 269, 321, 337, 339, 342, 344, 345, 346, 352, 353, 357, 359, 360, 369, 370, 371, 372, 376, 378, 382, 383, 384, 388, 390, 391, 394, 398, 399, 400, 401, 407, 410, 412, 414, 417, 420, 423, 424, 437, 438, 439, 440, 451, 452, 455, 462, 469, 471, 474, 479, 487, 488, 489, 494, 500, 507, 515, 521, 522, 523, 524, 527, 530, 533, 537, 539, 540, 543, 544, 545, 551, 552, 554, 560, 561, 564, 567, 568, 570, 571, 572, 573, 575, 577, 578, 580, 582, 602, 619, 621, 627, 634, 638, 640, 648, 651, 677], "prod": [4, 5, 6, 7, 32, 35, 36, 37, 38, 59, 65, 66, 67, 68, 93, 96, 97, 98, 99, 120, 188, 189, 190, 194, 369, 370, 371, 372, 394, 398, 399, 400, 401, 424, 437, 438, 439, 440, 479, 685], "np": [4, 5, 6, 7, 15, 18, 21, 22, 25, 28, 32, 33, 35, 36, 37, 38, 44, 47, 50, 51, 53, 55, 59, 60, 65, 66, 67, 68, 73, 75, 78, 82, 83, 87, 90, 93, 94, 96, 97, 98, 99, 103, 105, 108, 110, 111, 114, 117, 120, 121, 126, 130, 132, 139, 145, 188, 189, 190, 191, 193, 194, 195, 197, 252, 273, 274, 275, 276, 279, 280, 281, 284, 285, 286, 289, 290, 291, 294, 295, 296, 299, 300, 301, 304, 305, 306, 309, 310, 311, 314, 315, 316, 319, 320, 321, 322, 325, 326, 327, 330, 331, 332, 335, 336, 338, 343, 353, 356, 359, 360, 366, 369, 370, 371, 372, 376, 378, 381, 383, 384, 388, 391, 394, 395, 398, 399, 400, 401, 407, 410, 413, 414, 417, 420, 424, 425, 437, 438, 439, 440, 443, 444, 445, 447, 450, 451, 453, 455, 458, 462, 463, 470, 471, 474, 479, 480, 588, 602, 603, 616, 617, 618, 619, 620, 621, 627, 634, 636, 638, 639, 640, 646, 648, 651, 656, 674, 675, 677, 686], "ndarrai": [4, 5, 6, 7, 15, 18, 21, 22, 25, 28, 32, 33, 35, 36, 37, 38, 44, 47, 50, 51, 53, 55, 59, 60, 65, 66, 67, 68, 73, 75, 78, 82, 87, 90, 93, 94, 96, 97, 98, 99, 103, 105, 108, 110, 114, 117, 120, 121, 130, 132, 139, 141, 145, 188, 189, 190, 191, 193, 194, 195, 252, 273, 274, 275, 276, 279, 280, 281, 284, 285, 286, 289, 290, 294, 295, 299, 300, 301, 304, 305, 309, 310, 311, 314, 315, 316, 319, 320, 321, 322, 325, 326, 330, 331, 332, 335, 336, 338, 343, 347, 350, 353, 356, 359, 360, 366, 369, 370, 371, 372, 376, 378, 381, 383, 388, 391, 394, 395, 398, 399, 400, 401, 407, 410, 413, 414, 417, 420, 424, 425, 437, 438, 439, 440, 443, 444, 445, 447, 450, 451, 453, 455, 458, 462, 470, 471, 474, 479, 480, 489, 490, 491, 492, 495, 496, 498, 502, 504, 507, 509, 515, 517, 521, 522, 523, 524, 527, 529, 530, 533, 537, 538, 539, 540, 546, 547, 548, 551, 552, 554, 555, 562, 564, 566, 568, 570, 571, 572, 573, 575, 578, 580, 582, 588, 595, 602, 603, 617, 621, 631, 633, 648, 651, 656, 674, 675, 677], "id": [5, 7, 32, 36, 38, 59, 66, 68, 93, 97, 99, 120, 196, 228, 248, 343, 345, 349, 356, 360, 370, 372, 394, 399, 401, 424, 438, 440, 467, 479, 489, 490, 492, 545, 546, 548], "same": [5, 7, 16, 36, 38, 45, 63, 66, 68, 97, 99, 131, 142, 156, 166, 187, 192, 197, 228, 234, 368, 370, 372, 399, 401, 408, 438, 440, 468, 602, 603, 616, 618, 625, 633, 636, 648, 649, 651, 675, 678, 688], "call": [5, 7, 13, 34, 36, 38, 42, 66, 68, 71, 95, 97, 99, 101, 130, 131, 132, 139, 142, 145, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 188, 189, 190, 207, 208, 217, 218, 235, 345, 370, 372, 374, 399, 401, 405, 438, 440, 446, 634, 639, 648, 680, 688], "order": [6, 7, 15, 16, 37, 38, 44, 45, 67, 68, 73, 95, 98, 99, 103, 182, 183, 184, 186, 199, 247, 248, 266, 267, 371, 372, 376, 400, 401, 407, 408, 439, 440, 451, 523, 524, 527, 562, 600, 601, 602, 617, 625, 627, 631, 633, 634, 637, 640, 646, 647, 649, 651, 674, 688], "deriv": [6, 7, 11, 12, 16, 23, 34, 37, 38, 40, 41, 45, 52, 67, 68, 84, 98, 99, 112, 174, 185, 186, 187, 192, 263, 273, 279, 284, 289, 294, 296, 299, 304, 306, 309, 314, 316, 319, 321, 322, 325, 330, 332, 335, 371, 372, 385, 400, 401, 403, 404, 408, 415, 428, 439, 440, 466, 583, 677, 685, 686, 688], "evalu": [6, 15, 22, 37, 44, 51, 67, 73, 82, 98, 103, 110, 173, 187, 191, 192, 193, 194, 195, 266, 267, 275, 276, 286, 291, 311, 316, 321, 322, 332, 338, 366, 371, 376, 383, 400, 407, 414, 439, 451, 462, 596, 597, 663, 685, 686], "iff": [6, 7, 15, 37, 38, 44, 67, 68, 73, 98, 99, 103, 153, 154, 157, 159, 161, 163, 164, 167, 169, 171, 199, 222, 371, 372, 376, 400, 401, 407, 439, 440, 451, 459, 461], "shape": [6, 7, 15, 25, 37, 38, 44, 53, 67, 68, 73, 87, 98, 99, 103, 114, 143, 144, 148, 186, 273, 274, 279, 280, 284, 285, 289, 290, 294, 295, 299, 300, 304, 305, 309, 310, 314, 315, 319, 320, 325, 326, 330, 331, 335, 336, 368, 371, 372, 376, 388, 400, 401, 407, 417, 439, 440, 451, 471, 602, 618, 633, 634, 651, 686, 688], "basis_deriv": [7, 38, 68, 99, 372, 401, 440, 685], "properti": [8, 9, 24, 26, 69, 86, 95, 174, 175, 178, 244, 259, 264, 265, 266, 267, 269, 337, 338, 339, 343, 352, 354, 355, 356, 357, 358, 362, 364, 366, 387, 416, 418, 432, 433, 435, 441, 443, 444, 445, 447, 448, 450, 452, 453, 457, 459, 460, 461, 463, 464, 465, 467, 468, 469, 470, 473, 476, 478, 481, 482, 483, 484, 505, 506, 510, 511, 512, 513, 514, 518, 519, 525, 528, 531, 532, 534, 535, 536, 541, 651], "core": [10, 39, 70, 100, 373, 402, 436, 442], "save": [10, 13, 25, 39, 42, 53, 63, 64, 70, 71, 80, 81, 87, 100, 101, 114, 225, 231, 241, 244, 253, 256, 355, 373, 374, 388, 402, 405, 417, 442, 446, 471, 589, 593, 657, 661], "data": [10, 13, 39, 42, 70, 71, 100, 101, 131, 142, 244, 266, 267, 364, 373, 374, 402, 405, 442, 446, 478, 685, 686, 688], "inner_funct": [11, 40, 403], "compute_sensit": [11, 40, 403], "fals": [11, 25, 33, 40, 53, 60, 79, 83, 87, 89, 94, 109, 111, 114, 116, 121, 131, 142, 159, 169, 171, 176, 187, 192, 228, 238, 242, 244, 259, 268, 353, 382, 384, 388, 390, 395, 403, 417, 425, 427, 471, 480, 537, 596, 597, 598, 599, 602, 603, 622, 623, 624, 628, 629, 634, 639, 642, 643, 652, 653, 674, 675, 677, 680], "calcul": [11, 16, 23, 40, 45, 52, 84, 112, 186, 191, 193, 194, 195, 263, 266, 385, 403, 408, 415, 466], "form": [11, 12, 16, 40, 41, 45, 64, 173, 186, 193, 194, 226, 232, 242, 254, 275, 276, 286, 293, 296, 303, 306, 316, 355, 356, 403, 404, 408, 616, 645, 651, 686, 688], "composit": [11, 12, 40, 41, 77, 107, 338, 380, 403, 404, 686], "inner": [11, 12, 40, 41, 138, 146, 148, 276, 286, 291, 301, 316, 321, 322, 327, 332, 403, 404, 557, 558, 559, 686], "caller": [11, 40, 403], "outer": [11, 12, 40, 41, 138, 146, 263, 264, 403, 404, 557, 558, 559, 686], "deform": [11, 12, 40, 41, 172, 173, 174, 176, 264, 266, 403, 404], "an": [11, 12, 40, 41, 63, 80, 129, 130, 132, 135, 137, 139, 145, 173, 275, 293, 303, 306, 327, 349, 356, 368, 397, 403, 404, 436, 603, 604, 605, 615, 619, 620, 621, 627, 632, 633, 634, 640, 645, 647, 648, 651, 675, 676, 686], "mathcal": [11, 12, 40, 41, 403, 404, 677], "t": [11, 12, 25, 40, 41, 53, 87, 114, 159, 169, 255, 296, 306, 388, 403, 404, 417, 459, 471, 588, 602, 634, 651, 656, 686], "repres": [11, 21, 23, 40, 50, 52, 78, 83, 84, 108, 111, 112, 129, 137, 151, 186, 263, 296, 306, 342, 343, 346, 368, 381, 384, 385, 403, 413, 415, 458, 466, 688], "mathbf": [11, 40, 186, 403, 677, 688], "big": [11, 40, 403, 603, 625], "quad": [11, 40, 403, 688], "foral": [11, 40, 403], "If": [11, 21, 25, 40, 50, 53, 63, 78, 80, 87, 95, 108, 114, 130, 131, 139, 142, 159, 169, 176, 199, 228, 234, 239, 244, 258, 259, 263, 345, 356, 360, 381, 388, 403, 413, 417, 428, 433, 435, 458, 471, 590, 602, 603, 619, 621, 627, 634, 647, 648, 658, 663, 674, 675, 676, 677, 686, 688], "flag": [11, 40, 83, 111, 384, 403, 639, 653], "respect": [11, 12, 25, 40, 41, 53, 87, 114, 186, 228, 263, 275, 276, 286, 296, 306, 311, 316, 321, 322, 332, 388, 403, 404, 417, 471, 639, 663, 688], "posit": [11, 12, 25, 40, 41, 53, 87, 114, 152, 162, 175, 266, 321, 338, 344, 353, 356, 366, 388, 403, 404, 417, 471, 627, 686], "represent": [11, 16, 40, 45, 160, 170, 186, 355, 403, 408, 587, 603, 655, 663, 686, 688], "which": [11, 12, 40, 41, 83, 111, 129, 137, 152, 162, 186, 327, 356, 384, 403, 404, 602, 620, 627, 638, 639, 640, 663, 685, 686], "scalar": [11, 40, 191, 368, 397, 403, 588, 616, 620, 621, 648, 656, 663], "composition_deriv": [11, 40, 403, 685], "comput": [11, 12, 40, 41, 184, 186, 187, 192, 403, 404, 663, 686, 688], "concern": [11, 12, 40, 41, 403, 404], "geometr": [11, 40, 186, 403, 448, 688], "c_i": [11, 40, 403], "frac": [11, 12, 40, 41, 95, 186, 193, 194, 368, 397, 403, 404, 688], "partial": [11, 12, 40, 41, 186, 193, 194, 403, 404, 640, 686], "b_i": [11, 40, 186, 403], "where": [11, 34, 40, 79, 109, 191, 275, 276, 281, 286, 291, 316, 321, 322, 382, 403, 596, 597, 616, 622, 623, 624, 628, 637, 642, 643, 652, 674, 676, 685, 686, 688], "associ": [11, 40, 95, 186, 403, 677], "bool": [11, 13, 25, 33, 40, 42, 53, 60, 63, 64, 71, 79, 80, 81, 83, 87, 89, 94, 101, 109, 111, 114, 116, 121, 131, 132, 133, 136, 142, 145, 158, 159, 161, 168, 169, 171, 176, 187, 192, 199, 222, 225, 228, 229, 236, 242, 244, 259, 263, 268, 342, 345, 374, 382, 384, 388, 390, 395, 403, 405, 417, 425, 427, 446, 459, 461, 471, 480, 500, 515, 537, 551, 552, 569, 572, 573, 574, 602, 603, 634, 639, 674, 675, 677, 680], "true": [11, 13, 19, 30, 40, 42, 48, 57, 63, 64, 71, 76, 79, 80, 81, 89, 92, 101, 106, 109, 116, 119, 126, 131, 133, 136, 138, 142, 145, 146, 148, 159, 168, 169, 176, 177, 199, 222, 225, 228, 229, 236, 242, 244, 259, 273, 274, 279, 280, 284, 285, 289, 290, 294, 295, 299, 300, 304, 305, 309, 310, 314, 315, 319, 320, 325, 326, 330, 331, 335, 336, 342, 363, 374, 379, 382, 390, 393, 403, 405, 411, 422, 427, 446, 456, 459, 461, 477, 596, 597, 602, 603, 622, 623, 624, 628, 634, 639, 642, 643, 646, 652, 674, 677], "sensit": [11, 40, 266, 275, 276, 286, 296, 306, 311, 316, 321, 322, 332, 403], "default": [11, 13, 25, 33, 40, 42, 53, 60, 63, 64, 71, 80, 81, 87, 94, 101, 114, 121, 131, 133, 135, 136, 138, 142, 143, 146, 148, 152, 159, 162, 169, 173, 176, 199, 204, 214, 222, 238, 239, 242, 244, 259, 327, 346, 374, 388, 395, 403, 405, 417, 425, 429, 430, 446, 471, 480, 587, 588, 590, 593, 602, 603, 617, 625, 627, 634, 640, 646, 647, 655, 656, 658, 661, 674, 675], "option": [11, 40, 63, 64, 80, 81, 83, 111, 133, 135, 136, 138, 143, 146, 148, 184, 201, 202, 203, 205, 206, 207, 210, 211, 212, 213, 215, 216, 217, 220, 222, 225, 228, 229, 362, 384, 403, 476, 602, 603, 617, 625, 627, 634, 638, 639, 640, 646, 663, 674, 686], "intern": [11, 25, 34, 40, 53, 87, 114, 124, 150, 159, 169, 188, 189, 190, 301, 327, 388, 403, 417, 471], "inner_deriv": [12, 41, 404, 559], "when": [12, 41, 338, 404, 602, 620, 621, 627, 639, 640, 647, 688], "differenti": [12, 41, 404, 688], "constant": [12, 41, 404, 688], "compose_sensit": [12, 41, 404, 685], "its": [12, 41, 132, 145, 173, 293, 303, 356, 404, 627, 634, 639, 649, 651, 686], "some": [12, 41, 180, 192, 275, 276, 286, 296, 306, 311, 316, 321, 322, 332, 404, 585, 621, 639, 647, 686], "design": [12, 41, 266, 267, 275, 276, 286, 296, 306, 311, 316, 321, 322, 332, 404, 688], "variabl": [12, 41, 263, 266, 267, 275, 276, 286, 296, 306, 311, 316, 321, 322, 332, 404, 426, 620, 621], "alpha": [12, 41, 222, 404], "compos": [12, 41, 356, 404, 685, 686], "geometri": [12, 23, 41, 52, 84, 112, 128, 180, 186, 228, 229, 248, 255, 264, 385, 404, 415, 466, 686], "refer": [12, 23, 34, 41, 52, 84, 95, 112, 129, 137, 186, 356, 385, 404, 415, 436, 466, 596, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 610, 611, 612, 622, 623, 624, 626, 628, 629, 630, 631, 632, 633, 634, 635, 640, 641, 642, 643, 644, 645, 650, 651, 652, 686, 688], "coordin": [12, 25, 41, 53, 87, 95, 114, 186, 228, 263, 321, 366, 388, 404, 417, 471, 494, 686, 688], "composition_d": [12, 41, 404], "saved_data": [13, 42, 71, 101, 374, 405, 446], "deepcopi": [13, 42, 71, 101, 374, 405, 446], "store": [13, 42, 71, 101, 187, 192, 247, 296, 306, 341, 343, 351, 356, 358, 374, 405, 446, 463, 481, 590, 602, 634, 658, 686], "newli": [13, 42, 71, 101, 374, 405, 446, 602], "initi": [13, 25, 42, 53, 71, 87, 101, 114, 374, 388, 405, 417, 436, 446, 471, 590, 622, 624, 628, 643, 658, 685, 686], "self": [13, 14, 20, 31, 42, 43, 49, 58, 71, 72, 101, 102, 130, 132, 139, 145, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 178, 188, 189, 190, 347, 348, 350, 365, 374, 375, 405, 406, 412, 423, 446, 449, 482, 484, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 507, 508, 509, 515, 516, 517, 521, 522, 523, 524, 526, 527, 529, 530, 533, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 603], "exclud": [13, 19, 42, 48, 71, 76, 101, 106, 228, 374, 379, 405, 411, 446, 456, 688], "coordinate_refer": [13, 42, 71, 101, 374, 405, 446], "new_splin": [13, 42, 71, 101, 374, 405, 446], "splinepy_cor": [14, 43, 72, 102, 347, 348, 350, 365, 375, 406, 449, 685], "pysplin": [14, 43, 72, 102, 375, 406, 436, 449, 549, 550, 553, 555, 557, 558, 559, 560, 561, 562, 565, 566, 567, 569, 570, 576, 577, 580, 581, 582, 685], "dict": [14, 29, 30, 33, 43, 56, 57, 60, 72, 91, 92, 94, 102, 118, 119, 121, 176, 187, 192, 204, 214, 221, 222, 244, 250, 251, 259, 363, 375, 392, 393, 395, 406, 421, 422, 425, 428, 449, 473, 475, 477, 480, 526, 551, 552, 572, 573, 589, 591, 592, 594, 657, 659, 660, 662, 676], "result": [15, 18, 22, 28, 44, 47, 51, 55, 63, 73, 75, 82, 90, 103, 105, 110, 117, 129, 132, 137, 145, 187, 192, 275, 281, 353, 359, 376, 378, 383, 391, 407, 410, 414, 420, 451, 455, 462, 463, 474, 481, 602, 618, 625, 636, 647, 688], "describ": [16, 45, 83, 111, 136, 138, 146, 148, 177, 266, 267, 275, 276, 281, 286, 291, 301, 311, 316, 321, 322, 327, 332, 384, 408, 639, 688], "parametric_dimens": [17, 27, 46, 54, 74, 79, 83, 88, 89, 104, 109, 111, 115, 116, 377, 382, 384, 389, 390, 409, 419, 454, 472], "elev": [17, 46, 74, 104, 377, 409, 454, 686], "fname": [19, 48, 76, 106, 225, 226, 228, 229, 231, 232, 234, 236, 241, 242, 244, 245, 248, 249, 250, 251, 253, 254, 256, 258, 259, 379, 411, 456, 563, 579], "pleas": [19, 48, 76, 106, 176, 178, 379, 411, 456, 686, 688], "awar": [19, 48, 76, 106, 176, 379, 411, 456], "limit": [19, 48, 76, 106, 158, 168, 176, 379, 411, 456, 605], "ig": [19, 48, 76, 106, 259, 379, 411, 456, 685, 686], "vtk": [19, 48, 76, 106, 379, 411, 456, 685], "becaus": [19, 48, 76, 106, 379, 411, 456, 620], "str": [19, 48, 76, 106, 176, 222, 225, 226, 229, 231, 232, 234, 237, 238, 239, 241, 242, 244, 245, 248, 250, 251, 252, 253, 254, 256, 258, 259, 275, 276, 286, 291, 316, 327, 332, 379, 411, 433, 434, 435, 456, 468, 483, 556, 563, 579, 587, 588, 590, 593, 602, 614, 619, 627, 640, 647, 649, 655, 656, 658, 661, 680, 681, 682, 683, 684], "extract": [20, 49, 77, 83, 107, 111, 124, 130, 132, 139, 145, 346, 380, 384, 412, 685, 686], "singl": [20, 49, 147, 246, 250, 257, 259, 349, 412, 616, 620, 621, 627, 639, 640, 674, 686, 688], "duplicate_toler": [21, 50, 78, 108, 381, 413, 458], "grevil": [21, 50, 78, 108, 381, 413, 458], "abscissa": [21, 50, 78, 108, 381, 413, 458], "float": [21, 25, 27, 50, 53, 54, 63, 78, 79, 80, 87, 88, 89, 108, 109, 114, 115, 116, 132, 133, 134, 135, 136, 138, 143, 144, 145, 146, 147, 148, 160, 170, 173, 175, 184, 222, 244, 249, 275, 276, 286, 291, 316, 321, 322, 327, 332, 381, 382, 388, 389, 390, 413, 417, 419, 430, 458, 471, 472, 494, 497, 537, 538, 545, 553, 554, 568, 571, 575, 578, 580, 602, 675], "neg": [21, 25, 50, 53, 78, 87, 108, 114, 343, 356, 381, 388, 413, 417, 458, 471, 688], "duplic": [21, 50, 78, 108, 381, 413, 458], "famili": [21, 34, 50, 78, 95, 108, 381, 413, 436, 458, 685], "otherwis": [21, 50, 78, 79, 89, 108, 109, 116, 129, 137, 236, 381, 382, 390, 413, 458, 602, 617, 646, 663, 688], "filter": [21, 50, 78, 108, 381, 413, 458], "out": [21, 50, 78, 108, 381, 413, 458, 596, 597, 598, 599, 603, 604, 605, 606, 610, 611, 622, 623, 624, 628, 629, 635, 642, 643, 645, 650, 652, 686], "adjac": [21, 50, 78, 108, 381, 413, 458], "toler": [21, 25, 27, 50, 53, 54, 78, 87, 88, 89, 108, 114, 115, 116, 173, 249, 344, 351, 381, 388, 389, 390, 413, 417, 419, 458, 471, 472, 537, 538, 553, 554, 568, 571, 575, 578, 580, 685], "consid": [21, 50, 78, 95, 108, 152, 162, 344, 351, 381, 413, 458, 688], "equal": [21, 50, 78, 108, 129, 137, 140, 342, 351, 381, 413, 458, 627, 688], "retriev": [23, 52, 84, 112, 173, 187, 192, 229, 351, 385, 415, 466, 688], "get": [23, 52, 84, 112, 176, 385, 415, 466, 467, 685], "gradient": [23, 52, 84, 112, 186, 187, 188, 191, 192, 194, 385, 415, 466, 685], "hessian": [23, 52, 84, 112, 186, 187, 189, 192, 385, 415, 466, 685], "field": [23, 52, 84, 112, 185, 186, 191, 192, 193, 194, 195, 228, 296, 306, 342, 385, 415, 466, 500, 602, 619, 620, 625, 627, 638, 640, 685], "initial_guess_sample_resolut": [25, 53, 87, 114, 388, 417, 471, 537], "max_iter": [25, 53, 87, 114, 388, 417, 471, 537], "aggressive_search_bound": [25, 53, 87, 114, 388, 417, 471, 537], "return_verbos": [25, 53, 87, 114, 388, 417, 471], "find": [25, 53, 87, 114, 196, 388, 417, 467, 471, 494, 637, 640], "map": [25, 53, 87, 114, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 247, 388, 417, 436, 471, 603, 677, 686], "nearest": [25, 53, 87, 114, 388, 417, 471, 648, 686], "known": [25, 53, 87, 95, 114, 388, 417, 471], "invers": [25, 53, 87, 114, 186, 327, 388, 417, 471, 646, 686], "make": [25, 34, 53, 87, 114, 178, 388, 417, 471, 634, 675], "guess": [25, 53, 87, 114, 388, 417, 471, 686], "search": [25, 53, 87, 114, 388, 417, 471, 686], "kd": [25, 53, 87, 114, 388, 417, 471], "tree": [25, 53, 87, 114, 388, 417, 471, 686], "With": [25, 53, 62, 87, 114, 186, 388, 417, 471, 677], "sampl": [25, 53, 64, 87, 114, 158, 159, 161, 168, 169, 171, 221, 255, 388, 417, 471, 663, 685], "plant": [25, 53, 87, 114, 388, 417, 471], "The": [25, 34, 53, 64, 87, 114, 133, 135, 138, 152, 162, 173, 186, 228, 275, 276, 286, 291, 296, 303, 306, 356, 388, 417, 436, 471, 603, 614, 616, 617, 619, 621, 625, 627, 634, 638, 639, 640, 646, 647, 648, 686, 688], "cpp": [25, 53, 87, 114, 388, 417, 468, 471], "object": [25, 53, 87, 114, 124, 128, 129, 137, 150, 158, 168, 173, 176, 180, 184, 197, 204, 207, 214, 217, 221, 222, 226, 229, 249, 263, 334, 354, 365, 388, 417, 471, 501, 516, 588, 590, 593, 595, 614, 616, 620, 625, 634, 638, 646, 647, 648, 656, 658, 661, 675, 686], "re": [25, 53, 87, 114, 388, 417, 471], "behavior": [25, 53, 87, 114, 388, 417, 471, 646, 649], "each": [25, 28, 53, 55, 87, 90, 95, 114, 117, 146, 191, 236, 237, 353, 359, 388, 391, 417, 420, 432, 471, 474, 621, 635, 647, 688], "doesn": [25, 53, 87, 114, 255, 388, 417, 471, 588, 634, 656], "ani": [25, 53, 87, 114, 176, 342, 388, 417, 428, 430, 471, 602, 625, 646, 663, 685, 686], "inplac": [25, 53, 87, 114, 199, 236, 388, 417, 471, 595, 603], "chang": [25, 53, 87, 114, 178, 388, 417, 471, 595, 602, 614, 625, 634, 639, 640, 647, 648, 651, 674], "rais": [25, 53, 87, 114, 388, 417, 471, 602, 604, 630, 634, 645, 688], "runtim": [25, 53, 87, 114, 388, 417, 471], "error": [25, 53, 87, 114, 388, 417, 471], "control_mesh_resolut": [25, 53, 87, 114, 388, 417, 471, 685], "recommend": [25, 53, 87, 114, 388, 417, 471, 685], "larg": [25, 53, 87, 114, 388, 417, 471, 688], "converg": [25, 53, 87, 114, 388, 417, 471], "criteria": [25, 53, 87, 114, 388, 417, 471], "current": [25, 33, 53, 60, 86, 87, 94, 114, 121, 155, 165, 173, 174, 176, 177, 207, 217, 246, 248, 321, 332, 388, 395, 417, 425, 471, 473, 480, 619, 625, 688], "distanc": [25, 53, 87, 114, 316, 321, 322, 327, 351, 388, 417, 471], "residu": [25, 53, 87, 114, 388, 417, 471], "20": [25, 53, 87, 114, 388, 417, 471], "bound": [25, 53, 87, 114, 126, 140, 353, 388, 417, 427, 444, 470, 471, 663, 678], "aabb": [25, 53, 87, 114, 388, 417, 471], "direct": [25, 53, 64, 87, 114, 124, 144, 150, 293, 303, 388, 417, 471, 686, 688], "neighbor": [25, 53, 87, 114, 249, 332, 351, 388, 417, 471], "grid": [25, 53, 64, 87, 114, 388, 417, 471, 686, 688], "onli": [25, 34, 53, 87, 95, 114, 124, 129, 136, 137, 150, 152, 158, 159, 162, 168, 169, 222, 229, 250, 259, 268, 281, 301, 327, 345, 368, 388, 417, 436, 471, 602, 612, 620, 621, 634, 639, 680, 685, 688], "coord": [25, 53, 87, 114, 388, 417, 471], "para_coord": [25, 53, 87, 114, 388, 417, 471], "phys_coord": [25, 53, 87, 114, 388, 417, 471], "phys_diff": [25, 53, 87, 114, 388, 417, 471], "cartesian": [25, 53, 64, 87, 114, 388, 417, 471, 674], "norm": [25, 53, 87, 114, 351, 388, 417, 471], "convergence_norm": [25, 53, 87, 114, 388, 417, 471], "ndarrrai": [25, 53, 87, 114, 388, 417, 471], "newton": [25, 53, 87, 114, 388, 417, 471], "first_deriv": [25, 53, 87, 114, 388, 417, 471], "second_deriv": [25, 53, 87, 114, 388, 417, 471], "tri": [27, 54, 63, 80, 88, 89, 115, 116, 203, 213, 238, 239, 242, 389, 390, 419, 472], "resolut": [28, 55, 90, 117, 158, 159, 161, 168, 169, 171, 222, 255, 342, 353, 359, 391, 420, 443, 474, 515, 539, 587, 588, 655, 656, 663, 665, 678], "uniformli": [28, 55, 90, 117, 359, 391, 420, 474], "along": [28, 31, 55, 58, 64, 83, 90, 95, 111, 117, 130, 138, 139, 148, 296, 306, 359, 384, 391, 420, 423, 474, 598, 599, 606, 610, 611, 622, 623, 624, 627, 629, 640, 642, 650, 652], "math": [28, 55, 90, 117, 353, 359, 391, 420, 474, 620], "kwarg": [29, 30, 34, 56, 57, 91, 92, 95, 118, 119, 129, 130, 131, 132, 152, 158, 159, 161, 176, 177, 181, 207, 208, 217, 218, 222, 263, 268, 275, 276, 281, 286, 291, 296, 301, 306, 311, 316, 322, 327, 332, 361, 363, 392, 393, 421, 422, 436, 475, 477, 605, 609, 653], "equival": [29, 30, 56, 57, 91, 92, 118, 119, 180, 363, 392, 393, 421, 422, 475, 477, 596, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 610, 611, 612, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 635, 637, 641, 642, 643, 644, 645, 647, 650, 651, 652], "visual": [29, 30, 56, 57, 91, 92, 118, 119, 176, 363, 392, 393, 421, 422, 475, 477, 685, 686], "showable_or_plott": [29, 56, 91, 118, 392, 421, 475], "vedo": [29, 56, 91, 118, 176, 222, 268, 392, 421, 475, 688], "plotter": [29, 56, 91, 118, 176, 268, 392, 421, 475], "show": [30, 57, 92, 119, 177, 201, 211, 362, 363, 393, 422, 476, 477, 646, 685, 688], "return_show": [30, 57, 92, 119, 176, 177, 222, 363, 393, 422, 477], "spline_show": [30, 57, 92, 119, 363, 393, 422, 477], "locat": [31, 58, 423, 582, 621, 663, 685], "should": [31, 58, 63, 131, 142, 173, 175, 423, 428, 468, 602, 621, 637], "rang": [31, 58, 85, 113, 160, 386, 423, 686], "stai": [31, 58, 423], "intact": [31, 58, 423], "tolist": [33, 60, 94, 121, 395, 425, 480, 685], "doe": [33, 60, 94, 121, 364, 395, 425, 463, 480, 481, 620, 634, 688], "check": [33, 60, 94, 121, 129, 137, 176, 208, 218, 234, 273, 274, 279, 280, 284, 285, 289, 290, 294, 295, 299, 300, 304, 305, 309, 310, 314, 315, 319, 320, 325, 326, 330, 331, 335, 336, 342, 345, 353, 395, 425, 427, 433, 435, 480, 634, 675, 685, 686], "statu": [33, 60, 94, 121, 395, 425, 480], "convert": [33, 60, 94, 121, 395, 425, 480, 602, 615, 647, 648], "dict_splin": [33, 60, 94, 121, 395, 425, 480], "contain": [34, 95, 257, 633, 646, 647, 685, 688], "extra": [34, 95], "oper": [34, 77, 83, 95, 107, 111, 380, 384, 430, 646], "avail": [34, 83, 95, 111, 187, 192, 228, 384, 457, 460, 620, 677, 685, 686, 688], "special": [34, 95, 247], "global": [34, 356, 426, 688], "so": [34, 95, 126, 222, 634, 639, 647, 675, 688], "berstein": 34, "binom": 34, "domain": [34, 79, 83, 109, 111, 160, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 382, 384, 436], "alwai": [34, 131, 142, 204, 214, 590, 602, 616, 634, 647, 658, 686, 688], "hypercub": [34, 173], "omega_": [34, 436, 688], "rationalbezi": [34, 133, 143, 428, 436, 685], "explan": [34, 95], "how": [34, 95, 236, 397, 436, 639], "moreov": 34, "seen": [34, 436], "knot": [34, 63, 77, 79, 80, 83, 85, 89, 95, 107, 109, 111, 113, 116, 131, 132, 133, 135, 138, 142, 145, 146, 148, 151, 158, 168, 222, 228, 380, 382, 384, 386, 390, 459, 463, 464, 465, 481, 494, 495, 496, 497, 498, 570, 580, 686, 688], "vector": [34, 63, 80, 85, 95, 113, 128, 130, 135, 139, 186, 192, 228, 344, 386, 459, 464, 465, 496, 497, 663, 686, 688], "last": [34, 95, 311, 621, 627, 634, 639, 640, 648, 688], "entri": [34, 95, 281, 296, 301, 306, 327, 342, 343, 634, 647, 674, 688], "repeat": [34, 95, 685, 688], "do": [34, 156, 166, 364, 620, 621, 634, 647, 688], "featur": [34, 95, 685, 688], "addit": [34, 229, 368, 686], "again": [34, 250, 688], "bsplinebas": [62, 368, 436, 685], "help": [62, 185, 196, 585, 595, 663, 680], "mono": [62, 95], "introduct": [62, 368, 686], "_": [62, 186, 368, 397, 688], "bspline_volum": 62, "classmethod": [63, 64, 80, 81, 433, 434, 435], "query_point": [63, 64, 80, 81], "num_control_point": 63, "centripet": [63, 64, 80, 81, 551, 552, 572, 573], "save_queri": [63, 64, 80, 81], "approxim": [63, 64, 129, 137, 677, 686], "smaller": [63, 627], "than": [63, 130, 139, 159, 169, 187, 192, 619, 621, 627, 688], "interpol": [63, 80, 81, 95, 686, 688], "empti": [63, 80, 616, 647, 686], "defin": [63, 80, 86, 95, 182, 183, 226, 232, 238, 239, 242, 244, 256, 264, 266, 267, 281, 296, 301, 306, 327, 368, 397, 436, 620, 621, 627, 638, 640, 686, 688], "plot": [63, 64, 80, 81, 663, 686], "whatev": [63, 64, 80, 81], "num_points_u": [64, 552], "num_points_v": [64, 552], "size_u": [64, 81, 552, 573], "size_v": [64, 81, 552, 573], "degree_u": [64, 81, 552, 573], "degree_v": [64, 81, 552, 573], "least": [64, 621], "squar": [64, 248], "sens": 64, "through": [64, 80, 81, 221, 332, 602, 688], "must": [64, 228, 263, 275, 276, 286, 291, 316, 321, 322, 327, 332, 605, 621, 634], "rectangular": 64, "x": [64, 133, 135, 141, 144, 146, 148, 186, 263, 293, 296, 303, 306, 351, 356, 602, 619, 620, 621, 638, 639, 640, 646, 674, 686, 688], "y": [64, 133, 135, 144, 263, 293, 296, 303, 306, 617, 639, 640, 648, 674, 688], "axi": [64, 79, 109, 132, 133, 144, 145, 146, 148, 152, 162, 296, 306, 382, 448, 596, 597, 598, 599, 600, 601, 606, 610, 611, 622, 623, 624, 627, 628, 629, 632, 640, 641, 642, 643, 645, 651, 652, 688], "By": [64, 397, 602, 619], "second": [64, 186, 627, 640, 686, 688], "span": [77, 95, 107, 133, 135, 138, 146, 148, 151, 380, 494, 688], "bezier": [77, 83, 107, 111, 133, 134, 228, 249, 253, 254, 332, 380, 384, 397, 403, 428, 436, 459, 685, 686], "patch": [77, 107, 147, 151, 228, 246, 250, 259, 341, 342, 343, 346, 355, 356, 366, 380, 685, 686], "perform": [77, 107, 176, 197, 380, 441, 457, 460], "further": [77, 107, 186, 380], "multipl": [77, 107, 131, 142, 354, 380, 463, 498, 602, 640, 685, 686, 688], "insert": [79, 83, 109, 111, 263, 382, 384, 621, 637, 677, 686], "matrix": [83, 111, 384, 677], "specif": [83, 111, 126, 228, 353, 360, 384, 625, 663, 688], "multipli": [83, 111, 384, 685, 686], "old": [83, 111, 384], "scenario": [83, 111, 384, 686], "It": [83, 111, 175, 239, 384, 621, 685, 688], "relat": [83, 95, 111, 159, 169, 228, 384, 448, 467, 688], "c_": [83, 111, 384], "spline_copi": [83, 111, 384], "insert_knot": [83, 111, 384, 685], "allclos": [83, 111, 384, 686], "other": [83, 95, 111, 203, 213, 275, 276, 316, 321, 322, 384, 602, 616, 621, 634, 639, 688], "scipi": [83, 111, 384, 677, 686], "spars": [83, 111, 384, 677, 686], "els": [83, 95, 111, 152, 162, 199, 222, 229, 384, 590, 658, 675], "full": [83, 111, 296, 306, 384, 596, 597, 598, 600, 601, 604, 605, 606, 607, 608, 610, 611, 612, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 635, 637, 639, 640, 641, 642, 643, 644, 645, 650, 651, 652], "numpi": [83, 111, 141, 347, 350, 384, 489, 490, 491, 492, 495, 498, 502, 504, 507, 509, 515, 517, 521, 522, 523, 524, 527, 529, 530, 533, 537, 538, 539, 540, 546, 547, 548, 551, 552, 554, 555, 562, 564, 566, 568, 570, 571, 572, 573, 575, 578, 580, 582, 595, 596, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 639, 640, 641, 642, 643, 644, 645, 648, 650, 651, 652, 677, 685, 686], "format": [83, 111, 224, 226, 228, 235, 243, 244, 248, 273, 274, 279, 280, 284, 285, 289, 290, 294, 295, 299, 300, 304, 305, 309, 310, 314, 315, 319, 320, 325, 326, 330, 331, 335, 336, 358, 384, 647, 686], "detail": [83, 111, 187, 188, 189, 190, 191, 192, 193, 384, 599, 686], "applic": [85, 113, 132, 145, 176, 191, 199, 386, 663, 677, 685, 686], "version": [86, 600, 602, 612, 614, 627, 640, 646, 647, 649], "weight": [86, 129, 137, 228, 248, 368, 397, 434, 436, 467, 484, 685, 688], "same_nurb": 86, "remov": [89, 116, 390, 612, 641, 676, 686], "nurb": [95, 124, 131, 133, 135, 136, 138, 142, 146, 148, 150, 246, 248, 250, 251, 253, 254, 259, 397, 428, 434, 436, 461, 685, 686], "non": [95, 129, 132, 137, 145, 151, 228, 316, 368, 626], "decreas": [95, 688], "denot": [95, 688], "theta_u": 95, "u_1": 95, "u_2": 95, "u_": [95, 688], "leq": 95, "u_i": [95, 186], "th": [95, 651, 688], "interv": [95, 160, 170, 688], "As": [95, 647, 688], "equat": [95, 186, 688], "In": [95, 159, 169, 173, 266, 267, 275, 276, 286, 311, 316, 321, 322, 332, 428, 612, 674, 686], "case": [95, 138, 148, 159, 169, 173, 275, 276, 286, 293, 303, 311, 316, 321, 322, 332, 368, 397, 620, 621, 639, 648, 688], "u_l": 95, "exactli": [95, 649, 688], "via": [95, 130, 132, 139, 145, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 648, 688], "cox": [95, 688], "de": [95, 688], "boor": [95, 688], "formula": [95, 688], "begin": [95, 619, 638, 688], "mathrm": 95, "end": [95, 228, 239, 685, 688], "spl": [124, 128, 150, 180], "helper": [124, 128, 150, 180, 262, 364, 432, 478, 686], "allow": [124, 150, 158, 168, 397, 602, 633], "obj": [124, 150], "bspline": [124, 129, 131, 137, 140, 141, 142, 144, 150, 253, 254, 259, 428, 436, 685, 686], "valid_queri": [124, 441, 685], "parent": [124, 180], "valid": [126, 153, 154, 157, 159, 161, 163, 164, 167, 169, 171, 203, 208, 209, 213, 218, 219], "exce": 126, "build": [128, 686, 688], "spline_fac": [128, 150, 457, 460], "my_splin": [128, 150], "extrud": [128, 448, 685, 688], "project": [129, 137, 368, 688], "jacobian": [129, 137, 186, 685, 686], "determin": [129, 137, 236, 266, 327, 344, 356, 366, 619, 634, 639, 686, 688], "dmin": [129, 137], "tangl": [129, 137], "could": [129, 137, 688], "BE": [129, 137], "work": [129, 137, 620], "definit": [129, 137, 186, 199, 296, 306, 688], "statement": [129, 137], "about": [129, 137, 639], "entangl": [129, 137], "made": [129, 137, 625, 639, 688], "ration": [129, 133, 137, 151, 253, 254, 368, 397, 461, 686], "therefor": [129, 137], "mantzaflari": [129, 137, 184], "j\u00fcttler": [129, 137], "khoromskij": [129, 137], "langer": [129, 137], "2017": [129, 137, 184], "limkild": [129, 137], "evgrafov": [129, 137], "gravesen": [129, 137], "2021": [129, 137], "determinant_project": [129, 137], "linear": [130, 138, 139, 144], "extrus": [130, 139], "extend": [130, 132, 139, 145, 436, 685], "member": [130, 132, 139, 145, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], "extrusion_vector": [130, 139, 688], "extruded_splin": [130, 139], "view": [131, 142, 603, 612, 619, 625, 634, 644, 651, 685], "previous": [131, 142, 688], "naive_splin": [131, 142], "preserv": [131, 142, 602], "look": [131, 142, 621, 686, 688], "Will": [131, 142, 268, 291, 436], "take": [131, 142, 237, 345, 619, 663, 685, 686, 688], "shallow": [131, 142], "underli": [131, 142, 186], "spline_data": [131, 142, 685], "show_opt": [131, 142, 203, 213, 685], "origin": [131, 135, 142, 173], "howev": [131, 142, 197, 621, 634, 688], "conform": [131, 142, 301, 342], "desir": [131, 142, 159, 169, 688], "confrom": [131, 142], "ax": [131, 142, 641, 651], "configur": [131, 142, 340, 685], "para_splin": [131, 142], "around": [132, 133, 135, 145, 146, 148, 281, 296, 306, 635], "revolut": [132, 138, 145, 146, 148], "center": [132, 145, 281, 286, 291, 296, 301, 306, 311, 316, 321, 322, 327, 345, 366], "angl": [132, 133, 136, 138, 145, 146, 148, 281, 344, 688], "n_knot_span": [132, 133, 135, 138, 145, 146, 688], "zero": [132, 145, 151, 281, 626, 634, 688], "instead": [132, 145, 176, 222, 602, 612, 620], "radiant": [132, 145], "radiu": [133, 135, 136, 138, 143, 146, 147, 148, 276, 286, 291, 301, 306, 316, 322, 327, 332], "90": 133, "start_angl": 133, "d": [133, 134, 141, 143, 303, 617, 648, 665, 685, 686, 688], "li": [133, 186], "plane": [133, 135, 160], "rotat": [133, 136, 138, 146, 148, 296, 306], "z": [133, 144, 263, 293, 296, 303, 306, 321, 620], "section": [133, 148, 238, 239, 248, 688], "minimum": [133, 321, 327, 599, 624, 629], "start": [133, 344, 688], "length": [134, 144, 275, 276, 301, 316, 321, 322, 332, 602, 641, 688], "hyper": 134, "rectangl": 134, "nd_box": 134, "ha": [135, 152, 162, 184, 186, 296, 306, 459, 619, 688], "n_knots_span": 135, "outer_radiu": [136, 138, 146, 147, 688], "height": [136, 144, 332], "inner_radiu": [136, 138, 146, 688], "volumetr": [136, 144, 146, 148], "360": [136, 138, 146], "circular": [136, 368], "whether": [136, 639], "solid": 136, "model": [136, 228], "4": [138, 148, 286, 296, 306, 327, 356, 448, 617, 619, 621, 627, 640, 648, 651, 686, 688], "potenti": [138, 146], "hollow": [138, 146, 148, 688], "quadrat": 138, "thick": [138, 275, 276, 286, 291, 301, 311, 316, 322, 327, 332], "complet": [138, 146, 148, 173], "parametric_bound": [140, 663, 685], "physical_bound": 140, "minim": [140, 685], "less": [140, 152, 162], "greater": [140, 627, 688], "provid": [141, 173, 263, 265, 266, 267, 354, 468, 621, 627, 639, 686, 688], "npoint": 141, "ndim": [141, 648], "biquadrat": [143, 327], "width": 144, "everi": [144, 345], "circl": [147, 368, 685, 688], "consist": [147, 268, 332, 686], "outer_rariu": 147, "torus_radiu": 148, "section_outer_radiu": 148, "section_inner_radiu": 148, "torus_angl": 148, "section_angl": 148, "section_n_knot_span": 148, "torus_n_knot_span": 148, "revolv": [148, 685, 688], "cross": [148, 281], "plate": [148, 685], "disk": [148, 685, 688], "yield": [148, 688], "tube": 148, "give": [148, 247, 651, 688], "face": [150, 154, 155, 164, 165, 176, 222, 276, 286, 291, 301, 316, 322, 327, 332, 343, 345, 356, 360, 457, 685, 686, 688], "within": [151, 182, 183, 266, 343, 353, 602, 678, 688], "individu": [151, 342, 353, 355, 366, 603, 686], "deduct": [152, 162], "normal": [152, 162, 344, 688], "x_": [152, 162], "j_": [152, 162, 186], "min": [152, 162, 497, 605, 685], "2j": [152, 162], "x_j": [152, 162, 186, 194], "multipatch": [152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 201, 222, 225, 226, 228, 229, 428, 586, 685], "boundary_id": [152, 162, 345, 360, 566], "boundary_splin": [152, 162, 554], "edg": [153, 155, 159, 163, 165, 169, 176, 222, 248, 316, 321, 322, 685], "mesh": [153, 154, 157, 161, 163, 164, 167, 171, 173, 175, 176, 259, 342, 443, 467, 685, 686, 688], "control_edg": [155, 165, 685], "control_fac": [155, 165, 685], "control_volum": [155, 165, 685], "vertic": [156, 159, 166, 169, 173, 174, 176, 222, 247, 248, 678], "achiev": [156, 166, 368], "gustaf": [156, 166, 173, 174, 176, 221, 222, 686], "cps_as_vertic": [156, 166], "entiti": [158, 168, 688], "without": [158, 168, 639, 651], "per": [158, 159, 168, 169, 263, 269], "all_knot": [158, 168], "switch": [158, 168], "contour": [158, 168, 264], "note": [159, 169, 368, 602, 620, 621, 627, 633, 634, 639, 640, 647, 648], "showabl": [159, 169, 176, 221, 222, 685], "watertight": [159, 161, 169, 171], "overlap": [159, 169], "boundari": [159, 169, 199, 228, 229, 248, 301, 341, 344, 345, 346, 349, 356, 360, 366, 467, 685, 686], "won": [159, 169], "merg": [159, 169, 228], "splitting_plan": 160, "split": [160, 685, 686], "subsect": 160, "dictionari": [160, 177, 187, 192, 228, 235], "integ": [160, 602, 619], "tupl": [160, 170, 203, 213, 522, 524, 537, 553, 568, 578, 587, 588, 620, 621, 634, 651, 655, 656, 665, 674, 675], "100": 168, "split_plan": 170, "sub": [170, 602, 625], "ted": 170, "freeform": 172, "pad": [173, 685], "splinepybas": [173, 186, 262, 334, 341, 432, 436, 663], "free": [173, 633, 686, 688], "our": [173, 619], "subclass": [173, 675], "scale": [173, 685, 688], "unit": [173, 266, 267, 293, 303, 688], "well": [173, 186, 293, 303, 436, 639, 688], "modifi": [173, 199, 368, 397], "overwrit": [173, 236], "whole": 173, "obtain": [173, 688], "latest": 173, "factor": [173, 286, 291, 327], "ideal": 173, "appli": [173, 174, 275, 276, 286, 296, 306, 311, 316, 321, 322, 332, 593, 648, 661, 688], "befor": [174, 239, 244, 619, 627, 683], "current_mesh": 174, "accord": [174, 639], "ratio": [175, 688], "insid": [175, 621], "titl": 176, "window": [176, 222, 686], "item": [176, 177, 590, 621, 647, 648, 658, 685], "return_gustaf": [176, 222], "discret": [176, 222], "arbitrari": [176, 244, 686], "keyword": [176, 177, 224, 228, 229, 436, 634, 640], "These": [176, 639, 688], "onto": 176, "state": 177, "redirect": 177, "directli": [177, 275, 276, 286, 311, 316, 321, 322, 332, 441, 457, 460, 647, 686, 688], "setter": 178, "explicitli": [178, 688], "_spline": 178, "determinant": 184, "p_i": 184, "det": 184, "cf": 184, "et": 184, "al": 184, "doi": 184, "http": [184, 674], "dx": 184, "org": 184, "1016": 184, "cma": 184, "2016": 184, "11": [184, 430, 633], "013": 184, "gauss": 184, "quadratur": 184, "imag": 185, "express": [186, 688], "access": [186, 467, 620, 639], "solut": [186, 251, 258], "assum": [186, 688], "henc": 186, "x_i": [186, 193, 194], "sum_b": 186, "f_i": 186, "sum_a": 186, "f": [186, 193, 239, 602, 617, 634, 646, 688], "a_i": 186, "being": [186, 368, 616], "coeffici": 186, "write": [186, 228, 639, 647], "bar": 186, "ij": [186, 194], "u_j": 186, "ji": 186, "diverg": [186, 192, 685], "similar": [186, 204, 214, 368, 397, 620, 688], "fashion": [186, 688], "sum": [186, 611, 650, 685], "compon": 186, "written": [186, 244, 639, 647], "h": [186, 194], "a_": 186, "left": [186, 637], "kl": 186, "u_n": 186, "nm": 186, "b_m": 186, "b_": 186, "lk": 186, "right": [186, 199, 688], "kj": 186, "b_mh": 186, "mlk": 186, "sometim": [186, 648], "effici": [186, 187, 192], "implement": [186, 187, 192, 640, 685, 686], "splinelib": [186, 686], "bezman": [186, 686], "ident": 186, "u_k": 186, "lm": 186, "mn": 186, "ni": 186, "laplacian": [187, 190, 192, 685], "mani": [187, 236, 688], "precalcul": 187, "thread": [187, 191, 192, 193, 194, 195, 344, 346, 429], "basis_function_deriv": [188, 189, 190, 685], "basis_function_valu": 192, "assembli": 192, "divergenec": 192, "k_i": 193, "k_": 194, "f_k": 194, "paradim": [194, 263], "grid_resolut": 197, "task": 197, "ravel_multi_index": 197, "__getitem__": [197, 434], "permutation_list": 199, "interchang": [199, 644, 688], "xi": [199, 677], "eta": [199, 688], "them": [199, 242, 627, 688], "orient": [199, 293, 303, 685], "condit": [199, 228, 229, 356, 602, 606, 688], "mfem": [199, 685, 686], "export": [199, 243, 246, 249, 255, 685, 686], "modified_splin": 199, "reorder": 199, "helpe": [201, 211, 585, 586, 654], "showopt": [201, 203, 211, 213], "copy_to": [203, 213], "kei": [203, 204, 209, 210, 213, 214, 219, 220, 228, 252, 587, 588, 590, 593, 640, 655, 656, 658, 661, 685, 688], "simpli": [203, 213, 651, 688], "iter": [203, 208, 213, 218, 617, 621, 631, 648, 674, 686], "safe": [204, 214, 234, 602, 634], "stir": [204, 214], "regist": [205, 206, 210, 215, 216, 220], "dict_item": [205, 215], "dict_kei": [206, 209, 216, 219, 592, 660], "__setitem__": [208, 218], "dict_valu": [210, 220, 591, 594, 659, 662], "goe": 221, "procedur": 221, "gus_dict": 221, "variou": 222, "excess": 222, "adjust": 222, "fitting_queri": 222, "parametric_spac": [222, 470], "relev": 222, "backend": 222, "black": 222, "green": 222, "light": 222, "control_point_id": 222, "color_splin": 222, "cmap": 222, "things_to_show": 222, "return_discret": 222, "xml": [224, 225, 226, 228, 229, 259, 686], "rwth": [224, 226, 686], "possibli": [224, 648], "turn": [224, 238, 675], "python": [224, 620, 634, 646, 647, 648, 686], "spline_list": [225, 228, 244, 245, 249, 275, 321], "indent": [225, 228], "pretti": 225, "print": 225, "read": [226, 229, 232, 242, 250, 254, 258, 397, 612, 614, 686], "name_to_typ": [226, 229, 232, 235, 242, 583, 685], "labeled_boundari": 228, "export_field": 228, "as_base64": 228, "readabl": [228, 239], "uniform": [228, 368, 678], "counterpart": [228, 688], "output": [228, 258, 647], "prefer": [228, 686], "append": 228, "white": 228, "etre": 228, "elementtre": 228, "label": 228, "assembl": 228, "etc": [228, 275, 276, 286, 316, 627, 640, 688], "tag": 228, "text": [228, 236, 647, 688], "children": [228, 436], "separ": [228, 327, 633, 647], "filenam": [228, 229, 236, 244, 647], "field1": 228, "b64": 228, "encod": [228, 244, 686], "634": 228, "load_opt": 229, "spline_dic_list": 229, "util": [233, 685], "absolut": [234, 343], "abspath": 234, "mayb": 234, "spline_dictionari": 235, "spline_lit": 235, "tab_expand": 236, "replac": [236, 242, 428], "tab": [236, 242], "modif": 236, "prefix": 236, "formul": 237, "line_separated_str": 237, "comment": [238, 239, 242], "input": [238, 602, 617, 675, 686], "meaning": [238, 239], "strip": [239, 242], "next": [239, 688], "513": 239, "sai": 239, "prevent": [239, 634], "never": [239, 639, 688], "while": [239, 688], "_io": 239, "textiowrapp": 239, "symbol": 239, "next_meaningful_str": 239, "itd": [241, 242, 259], "expand_tab": [242, 685], "strip_com": 242, "beta": 242, "identifi": [242, 345, 366], "custom": [243, 686], "list_nam": 244, "base64encod": 244, "splinegroup": 244, "assign": [244, 345, 360, 616, 621, 686], "output_dict": 244, "dictornai": 244, "hardcod": 246, "2d": [246, 250, 259, 343, 648, 663, 674, 678, 686, 688], "dof": 247, "to_mfem": 247, "from_mfem": 247, "precis": [248, 647, 648], "segment": [248, 688], "cub": 248, "5": [248, 301, 316, 368, 397, 602, 639, 686, 688], "knotvector": [248, 685], "finiteelementspac": 248, "finiteelementcollect": 248, "vdim": 248, "bezier_list": 249, "collaps": [249, 617], "readi": 250, "reference_nurb": 251, "solution_nurb": 251, "raw": [252, 646], "ncpt": 252, "float64": [252, 489, 490, 491, 492, 496, 498, 507, 515, 517, 521, 522, 523, 524, 527, 530, 533, 537, 539, 540, 546, 547, 548, 551, 552, 555, 568, 570, 571, 572, 573, 575, 580, 582, 602, 619, 638], "int32": [252, 347, 350, 490, 492, 495, 502, 504, 509, 523, 524, 527, 529, 537, 538, 539, 540, 546, 548, 554, 562, 564, 566, 568, 571, 578, 638], "whatami": [252, 685], "list_of_splin": 253, "list_splin": 254, "compat": [255, 602, 640, 648, 649, 686], "load": [255, 614, 615, 685, 686], "resolutions_per_splin": 256, "load_splin": [257, 258, 685], "reference_splin": 258, "solution_splin": 258, "as_dict": 259, "extens": [259, 368, 397], "json": [259, 685, 686], "npz": [259, 685, 686], "deformation_funct": [262, 268, 685], "tile": [262, 266, 267, 685], "microtil": [262, 263, 266, 267, 268, 269, 276, 281, 286, 291, 301, 311, 316, 322, 327, 332, 337, 339, 685], "parametrization_funct": [262, 266, 685], "facilitata": 262, "closing_fac": 263, "knot_span_wis": 263, "macro_sensit": 263, "closing_til": [263, 685], "knotspan": 263, "structur": [263, 585, 602, 640, 686, 688], "create_til": [263, 265, 293, 303, 685], "finish": 263, "either": [265, 321, 621, 686], "said": [266, 267], "need": [266, 267, 275, 276, 286, 291, 316, 321, 327, 619, 627, 640, 688], "coupl": [266, 267], "evaluation_point": [266, 267, 685], "cube": [266, 267], "parameter_space_dimens": [266, 267], "local": [266, 267, 356, 621, 688], "callabl": [266, 267, 345, 663], "use_sav": 268, "plt": 268, "interfac": [270, 311, 341, 343, 344, 345, 351, 564, 639, 685, 686], "tool": [270, 685], "gener": [270, 436, 621, 640], "simpl": [270, 602, 648], "tilebas": [272, 278, 283, 288, 293, 298, 303, 308, 313, 318, 324, 329, 685], "correct": [273, 274, 279, 280, 284, 285, 289, 290, 294, 295, 299, 300, 304, 305, 309, 310, 314, 315, 319, 320, 325, 326, 330, 331, 335, 336], "boolean": [273, 274, 279, 280, 284, 285, 289, 290, 294, 295, 299, 300, 304, 305, 309, 310, 314, 315, 319, 320, 325, 326, 330, 331, 335, 336, 627, 639], "parameter_sensit": [275, 276, 281, 286, 291, 296, 301, 306, 311, 316, 321, 322, 327, 332], "contact_length": [275, 276, 301, 316, 321, 322, 332], "closur": [275, 276, 286, 291, 316, 321, 327, 332], "match": [275, 321, 345, 349, 677, 688], "wall": [275, 276, 301, 316, 321, 322, 332], "01": [275, 276, 286, 291, 321, 322, 688], "49": [275, 276, 286, 291, 321, 322], "itself": [275, 276, 286, 311, 316, 321, 322, 332, 619, 686], "delta_ij": [275, 276, 286, 311, 316, 321, 322, 332], "contact": [275, 276, 316, 321, 322, 332], "x_min": [275, 276, 286, 316, 332], "x_max": [275, 276, 286, 316], "derivative_list": [275, 276, 286, 291], "outward": [276, 286, 291, 301, 316, 322, 327, 332], "branch": [276, 281, 286, 291, 301, 316, 322, 327, 332], "One": [276, 316, 321, 322, 605, 688], "microtile_list": [276, 281, 286, 291, 296, 301, 306, 311, 316, 322, 327, 332], "drill": 281, "radian": 281, "correl": [281, 301], "center_expans": [286, 291, 327], "four": [286, 639, 688], "cylind": [286, 291, 688], "expand": [286, 291, 327], "6": [291, 338, 620, 621, 686, 688], "six": 291, "z_min": [291, 327], "z_max": [291, 327], "_closing_til": 291, "void": [293, 296, 303, 306, 620], "cuboid": [293, 296, 306], "cell": [293, 303], "act": [293, 303], "expans": [293, 296, 303, 306], "radii": [293, 301, 303, 327], "adamm": [293, 303], "test": [293, 303, 332, 686], "hutchinson": [293, 303], "roti": [296, 306], "rotx": [296, 306], "tz": [296, 306], "p_0": [296, 306], "p_1": [296, 306], "p_2": [296, 306], "p_3": [296, 306], "extern": [296, 306], "entour": 301, "doubl": [301, 344, 351], "block": 301, "ellipsoid": [303, 306], "ellip": 303, "oid": 303, "elipsoid": 303, "strut": 311, "hole": 311, "inclus": 316, "mean": [321, 343, 602, 617, 627, 640, 646, 651, 685, 688], "That": [321, 688], "maximum": [321, 327, 598, 622, 629], "seperator_dist": 327, "layer": 327, "15": [332, 640], "unus": 332, "thinner": 332, "upper": [332, 639], "beam": 332, "lower": [332, 686, 688], "thicker": 332, "offset": [332, 612, 619, 638, 650], "snap": 332, "fulfil": [332, 688], "cubic": 332, "prior": 338, "pymultipatch": [341, 347, 348, 350, 365, 685], "system": [341, 346, 352, 356, 357, 358, 686, 688], "field_dim": [342, 500], "check_compli": 342, "check_conform": 342, "add": [342, 360, 685, 686], "admiss": 342, "compar": [342, 621, 627, 640], "size": [342, 356, 619, 620, 621, 634, 647], "hold": [343, 432, 591, 592, 594, 659, 660, 662, 686], "seed": [344, 620, 621], "propag": 344, "until": [344, 688], "reach": [344, 688], "kink": 344, "g1": 344, "continu": [344, 686, 688], "aux": 344, "co": [344, 688], "mask": [345, 349], "were": [345, 688], "chosen": [345, 360, 688], "lowest": [345, 360, 674], "combin": [349, 436], "reassign": [349, 589, 657], "info": [351, 680, 683, 685], "n_patch": [351, 356], "n_boundari": 351, "splineset": [352, 357], "rtype": 352, "caution": 353, "check_bound": [353, 685], "extractor": [354, 441, 457, 685], "n_sides_per_patch": 356, "indic": [356, 467, 598, 599, 600, 601, 618, 626, 630, 637, 645, 688], "global_fac": 356, "local_fac": 356, "number_of_faces_per_el": 356, "element_id": 356, "o": 356, "inter": 356, "connectivitii": 356, "spline_id": 360, "boundary_fac": 360, "manag": [362, 476, 585, 586, 654], "splineshowopt": [362, 476, 685], "todo": 364, "anyth": 364, "moment": [364, 688], "multipatchdata": [364, 685], "connect": [366, 688], "spline_cent": 366, "overcom": [368, 647], "drawback": 368, "unabl": 368, "consequ": [368, 397, 688], "descript": [368, 397, 602, 686, 688], "includ": [368, 685, 686, 688], "nurbs_curv": 368, "25": 368, "75": 368, "classic": 397, "proce": 397, "quarter": 397, "arc": [397, 685], "conveni": [426, 647, 651], "acceler": 427, "rational_bezi": [428, 685], "convers": [428, 583, 602, 686], "mai": [428, 602, 634, 648], "own": [428, 634, 639], "1e": 430, "involv": 430, "abstract": 431, "noth": [433, 435], "rp_intersect": 433, "wrapper": [434, 679], "__call__": 434, "required_spline_properti": 434, "mysplin": 434, "requiredsplineproperti": 434, "rp_union": 435, "subset": 436, "overview": 436, "mathemat": 436, "theori": 436, "depth": [436, 648], "share": [436, 634, 688], "checker": [441, 685], "control_points_": [445, 447], "creator": [448, 685, 688], "prism": 448, "don": [459, 686], "easi": [467, 686, 688], "unravel": 467, "want": [467, 663], "slice": [467, 606], "certain": [467, 587, 619, 655, 688], "multi_index_help": 467, "multiindex": [467, 685], "side": [468, 637, 685, 686], "__qualname__": 468, "requied_properti": 473, "splinedata": [478, 586, 685], "uniqu": [481, 495, 685, 688], "_weight": [482, 484], "answer": [483, 674], "deep": [483, 648], "philosoph": 483, "question": [483, 674], "what": [483, 602, 688], "am": 483, "pybind11_object": [486, 493, 499, 520, 542], "arg0": [494, 509], "check_nam": 500, "check_dim": 500, "check_degre": 500, "check_control_mesh_resolut": 500, "same_parametric_bound": [515, 685], "n_control_point": 551, "boundary_interfac": 554, "global_interfac": 554, "phys_dim": 567, "old_knot_vector": [568, 575], "new_knot": 568, "face_center_vertic": 571, "new_knot_vector": 575, "base_id": 578, "base_face_id": 578, "neighbor_id": 578, "neighbor_face_id": 578, "coresplin": 583, "derived_splin": 583, "derivedsplin": 583, "arrow": [587, 655, 663], "place": [587, 603, 621, 634, 638, 640, 651, 655], "predefin": [587, 655], "default_valu": [590, 658], "sinc": [590, 627, 634, 648, 649, 658], "keep": [595, 680, 688], "mirror": 595, "meant": 595, "keepdim": [596, 597, 598, 599, 622, 623, 624, 628, 629, 642, 643, 652], "kth": [600, 627], "kind": [600, 601, 602, 627, 640], "introselect": [600, 627], "partit": [600, 640, 685, 688], "sort": [601, 627, 685], "dtype": [602, 603, 610, 611, 616, 619, 621, 623, 625, 627, 628, 638, 640, 642, 643, 646, 650, 652, 675], "cast": [602, 621], "unsaf": 602, "subok": 602, "typecod": 602, "memori": [602, 603, 617, 634, 639, 646], "layout": [602, 646], "fortran": [602, 617, 646], "contigu": [602, 617, 634, 646, 675, 676], "appear": [602, 621, 688], "equiv": [602, 688], "same_kind": 602, "occur": [602, 617], "backward": [602, 640], "byte": [602, 603, 619, 625, 638, 646, 649], "float32": 602, "done": [602, 639], "forc": [602, 625], "alloc": 602, "satisfi": [602, 688], "arr_t": 602, "unless": [602, 620, 634], "17": [602, 614, 647], "9": [602, 612, 620, 621, 639, 646], "numer": [602, 688], "mode": [602, 604, 630, 645], "long": 602, "enough": 602, "complexwarn": 602, "real": [602, 603, 688], "swap": [603, 625], "toggl": 603, "low": 603, "endian": [603, 625, 647], "imaginari": 603, "256": 603, "8755": 603, "int16": 603, "hex": 603, "0x1": 603, "0x100": 603, "0x2233": 603, "13090": 603, "0x3322": 603, "ceg": 603, "fac": 603, "s3": 603, "newbyteord": [603, 685], "produc": [603, 646, 647], "uint8": 603, "choic": [604, 647], "whose": 605, "select": [606, 619, 621, 627, 688], "conjug": [607, 685], "wise": 608, "regular": 609, "cumul": [610, 611], "axis1": [612, 644, 650], "axis2": [612, 644, 650], "previou": 612, "futur": 612, "pickl": [614, 615], "back": [614, 615], "pathlib": [614, 647], "accept": [614, 647], "expect": 616, "behav": 616, "rare": 616, "distinct": 616, "unpack": 616, "row": 617, "major": 617, "style": 617, "column": [617, 677], "ravel": [617, 685], "flat": [617, 620, 630, 631], "over": [617, 628, 643, 648, 688], "arr": [618, 625, 636], "complex128": 619, "16": [619, 686], "32": 619, "bit": [619, 688], "12": 619, "larger": 619, "skip": 619, "diag": 619, "choos": [619, 685], "standard": [620, 642, 686], "int_typ": 620, "interpret": [620, 639], "nd": 620, "suitabl": [620, 651], "longdoubl": 620, "clongdoubl": 620, "lose": [620, 648], "buffer": [620, 634, 639], "veri": [620, 688], "speed": [620, 621, 647], "arithmet": 620, "optim": [620, 688], "random": [620, 621], "123": [620, 621], "randint": [620, 621], "7": [620, 639], "There": [621, 639, 688], "Then": [621, 688], "faster": 621, "syntax": 621, "increas": [621, 634], "particular": [621, 688], "discourag": 621, "among": 621, "problem": [621, 647], "complic": 621, "sure": [621, 634], "amax": 622, "averag": 623, "amin": 624, "new_ord": 625, "newbytord": 625, "below": [625, 639], "opposit": 625, "littl": 625, "nativ": 625, "sy": 625, "byteord": 625, "new_arr": 625, "reflect": 625, "rearrang": 627, "move": [627, 688], "behind": 627, "undefin": 627, "sequenc": [627, 688], "final": 627, "deprec": [627, 649], "22": 627, "algorithm": [627, 640], "unspecifi": [627, 640], "still": [627, 640, 688], "come": [627, 640, 688], "break": [627, 640, 688], "ti": [627, 640], "argpartit": [627, 685], "indirect": [627, 640], "peak": 629, "flatten": [631, 634, 685], "unlik": 633, "new_shap": 634, "refcheck": 634, "count": 634, "valueerror": [634, 639], "pypi": 634, "reliabl": 634, "systemerror": 634, "behaviour": 634, "bug": 634, "realloc": 634, "area": [634, 639], "consecut": 634, "purpos": 634, "shrink": 634, "reshap": [634, 651, 685], "enlarg": 634, "abov": [634, 686, 688], "miss": 634, "fill": [634, 685], "referenc": [634, 639], "traceback": [634, 639, 648], "recent": [634, 639, 648], "cannot": [634, 639, 647, 688], "decim": 635, "arang": 636, "len": [636, 674, 685], "sorter": 637, "maintain": 637, "val": 638, "put": [638, 685], "getfield": [638, 685], "ey": 638, "0e": 638, "000": 638, "5e": 638, "323": 638, "align": 639, "uic": 639, "writeabl": [639, 653], "writebackifcopi": 639, "affect": 639, "actual": [639, 640, 688], "ultim": 639, "owner": 639, "expos": 639, "unpickl": 639, "properli": 639, "user": 639, "stride": 639, "appropri": [639, 663, 685], "hardwar": 639, "api": [639, 686], "pyarray_resolvewritebackifcopi": 639, "content": [639, 646, 647], "c_contigu": 639, "f_contigu": 639, "owndata": 639, "stdin": 639, "quicksort": 640, "mergesort": 640, "heapsort": 640, "stabl": 640, "timsort": 640, "under": 640, "cover": 640, "vari": 640, "datatyp": 640, "retain": 640, "wa": [640, 688], "ad": 640, "argsort": [640, 685], "lexsort": 640, "searchsort": [640, 685], "s1": 640, "i8": 640, "ddof": [642, 652], "deviat": 642, "short": 646, "exhibit": 646, "frombuff": 646, "u2": 646, "x00": 646, "x01": 646, "x02": 646, "x03": 646, "fid": 647, "sep": 647, "binari": [647, 686], "independ": [647, 686], "recov": 647, "fromfil": 647, "tobyt": [647, 649, 685], "closest": 647, "quick": 647, "storag": [647, 686], "lost": 647, "good": [647, 688], "intend": [647, 651], "archiv": 647, "transport": 647, "machin": 647, "expens": 647, "bypass": 647, "compress": [647, 685], "gzipfil": 647, "fileno": 647, "bytesio": 647, "level": [648, 676], "nest": 648, "builtin": 648, "recreat": 648, "1d": [648, 678, 688], "almost": 648, "uint32": 648, "a_list": 648, "a_tolist": 648, "addition": 648, "0d": 648, "typeerror": 648, "alia": 649, "despit": 649, "19": 649, "diagon": [650, 685], "revers": [651, 674], "becom": [651, 685, 688], "altern": 651, "permut": [651, 685], "varianc": 652, "datahold": 654, "present": 663, "color": [663, 688], "stand": 663, "alon": 663, "vertex_data": 665, "fast": [674, 686], "adapt": 674, "stackoverflow": 674, "11144513": 674, "49445693": 674, "paul": 674, "panzer": 674, "fastest": 674, "thu": [674, 688], "highest": 674, "asarrai": 675, "configu": 675, "transform": [675, 688], "contiguous_arrai": 675, "dict_": 676, "enforc": [676, 677], "dict_with_contigu": 676, "n_col": 677, "as_arrai": 677, "everyth": 677, "dens": 677, "iga": [677, 688], "pmb": [677, 688], "n_ctp": 677, "csr_arrai": 677, "gu": [678, 688], "raster": 678, "lower_1": 678, "lower_2": 678, "upper_1": 678, "upper_2": 678, "resolution_1": 678, "resolution_2": 678, "thin": 679, "logfil": 680, "streamhandl": 680, "logger": [681, 682, 684], "messag": 683, "log_func": 683, "prepend": 683, "warn": [683, 685], "bind": [685, 686], "importantli": 685, "serv": 685, "librari": [685, 688], "integr": 685, "throughout": [685, 688], "proper": 685, "front": 685, "famlili": 685, "driven": 685, "to_deriv": 685, "basis_and_support": 685, "basis_derivative_and_support": 685, "current_core_properti": 685, "derivative_splin": 685, "elevate_degre": 685, "extract_dim": 685, "greville_abscissa": 685, "mapper": 685, "proxim": [685, 686], "reduce_degre": 685, "todict": 685, "approximate_curv": 685, "approximate_surfac": 685, "extract_bezier_patch": 685, "interpolate_curv": 685, "interpolate_surfac": 685, "knot_insertion_matrix": 685, "normalize_knot_vector": 685, "remove_knot": 685, "box": 685, "cone": [685, 688], "determinant_splin": 685, "from_bound": 685, "parametric_view": 685, "pyramid": 685, "sphere": [685, 688], "surface_circl": 685, "toru": 685, "control_mesh": 685, "ffd": 685, "parametric_funct": 685, "physical_funct": 685, "basis_gradient_and_support": 685, "basis_hessian_and_support": 685, "basis_laplacian_and_support": 685, "field_deriv": 685, "multi_index": [685, 686], "parametric_ax": 685, "make_show": 685, "multipatchshowopt": 685, "copy_valid_opt": 685, "pop": 685, "valid_kei": 685, "io": 685, "cat": [685, 686], "gismo": [685, 686], "ioutil": 685, "abs_fnam": 685, "dict_to_splin": 685, "form_lin": 685, "make_meaning": 685, "next_lin": 685, "irit": [685, 686], "dof_map": 685, "export_cartesian": 685, "read_solut": 685, "load_solut": 685, "microstructur": 685, "parameter_sensitivity_funct": 685, "armadillo": 685, "check_param_deriv": 685, "check_param": 685, "chi": 685, "cross_2d": 685, "cross2d": 685, "cross_3d": 685, "cross3d": 685, "cube_void": 685, "cubevoid": 685, "double_lattic": 685, "doublelattic": 685, "ellips_v_oid": 685, "ellipsvoid": 685, "hollow_cub": 685, "hollowcub": 685, "hollow_octagon": 685, "hollowoctagon": 685, "hollow_octagon_extrud": 685, "hollowoctagonextrud": 685, "inverse_cross_3d": 685, "inversecross3d": 685, "snappi": 685, "tile_bas": 685, "add_field": 685, "boundaries_from_continu": 685, "boundary_from_funct": 685, "boundary_multipatch": 685, "boundary_patch_id": 685, "combine_boundari": 685, "control_point_offset": 685, "determine_interfac": 685, "set_boundari": 685, "sub_multipatch": 685, "sub_patch_cent": 685, "requiredproperti": 685, "intersect": 685, "union": 685, "control_point_bound": 685, "cp": [685, 688], "has_knot_vector": 685, "is_rat": 685, "knot_multipl": 685, "required_properti": 685, "unique_knot": 685, "annul_cor": 685, "bezier_extraction_matrix": 685, "boundary_cent": 685, "build_typ": 685, "core_id": 685, "core_ref_count": 685, "export_ig": 685, "extract_all_boundary_splin": 685, "extract_boundari": 685, "global_knot_insertion_matrix": 685, "has_cor": 685, "interfaces_from_boundary_cent": 685, "is_minim": 685, "null_splin": 685, "read_ig": 685, "same_spline_with_knot_vector": 685, "controlpointpoint": 685, "set_row": 685, "sync": 685, "sync_row": 685, "find_span": 685, "n_default_thread": 685, "weightpoint": 685, "cartesian_product": 685, "enforce_contigu": 685, "enforce_contiguous_valu": 685, "make_matrix": 685, "uniform_queri": 685, "as_arrow": 685, "as_scalar": 685, "physicalspacearrai": 685, "argmax": 685, "argmin": 685, "astyp": 685, "byteswap": 685, "clip": 685, "conj": 685, "cumprod": 685, "cumsum": 685, "dot": [685, 688], "dump": 685, "full_row_indic": 685, "itemset": 685, "nonzero": [685, 688], "ptp": 685, "resiz": 685, "round": 685, "row_indic": 685, "setfield": 685, "setflag": 685, "squeez": 685, "std": 685, "swapax": 685, "tofil": 685, "tostr": 685, "trace": 685, "transpos": 685, "var": 685, "splinedataadaptor": 685, "as_vertex_data": 685, "is_splin": 685, "has_funct": 685, "has_loc": 685, "has_evalu": 685, "arrow_data_onli": 685, "log": 685, "prepend_log": 685, "wheel": 686, "maco": 686, "linux": 686, "quotat": 686, "mark": 686, "shell": 686, "Of": 686, "cours": 686, "aforement": 686, "cmake3": 686, "easiest": 686, "tataratat": 686, "total_number_of_control_point": 686, "physical_dimens": 686, "But": 686, "try": [686, 688], "grid_cp": 686, "assert": 686, "1156": 686, "9091": 686, "third": 686, "physical_coord": 686, "execut": 686, "multithread": 686, "heavi": 686, "physical_coords_parallel": 686, "onlin": 686, "click": 686, "binder": 686, "badg": 686, "capabl": [686, 688], "routin": 686, "book": [686, 688], "offer": 686, "concept": 686, "isogeometr": [686, 688], "analysi": [686, 688], "automat": 686, "identif": 686, "techniqu": 686, "reli": 686, "base64": 686, "controlpoints_cartesian": 686, "savez": 686, "feel": [686, 688], "repositori": 686, "link": 686, "packag": 686, "pybind11": 686, "main": 686, "napf": 686, "wrap": 686, "nanoflann": 686, "manipul": 686, "matric": 686, "platform": 686, "setuptool": 686, "cibuildwheel": 686, "ci": 686, "server": 686, "contribut": 686, "flexibl": 688, "smooth": 688, "enjoi": 688, "success": 688, "engin": 688, "architectur": 688, "inspir": 688, "roger": 688, "piegl": 688, "tiller": 688, "exact": 688, "facet": 688, "few": 688, "ones": 688, "deal": 688, "sin": 688, "usual": 688, "notic": 688, "parameter": 688, "immers": 688, "reason": 688, "necessarili": 688, "n_i": 688, "go": 688, "arrang": 688, "univari": 688, "m_j": 688, "mention": 688, "constitut": 688, "aid": 688, "stori": 688, "propos": 688, "hugh": 688, "cottrel": 688, "bazilev": 688, "2005": 688, "princip": 688, "ask": 688, "reader": 688, "mind": 688, "after": 688, "pierr": 688, "1910": 688, "1999": 688, "french": 688, "renault": 688, "founder": 688, "cad": 688, "cam": 688, "earliest": 688, "bernstein": 688, "fix": 688, "freeli": 688, "been": 688, "terminologi": 688, "conflict": 688, "appar": 688, "geomet": 688, "analyst": 688, "commun": 688, "tend": 688, "those": 688, "noindent": 688, "2u": 688, "convex": 688, "hull": 688, "polygon": 688, "largest": 688, "entir": 688, "underbrac": 688, "qquad": 688, "neq": 688, "p_": 688, "_n": 688, "uniti": 688, "modern": 688, "longer": 688, "plai": 688, "role": 688, "conic": 688, "suffici": 688, "high": 688, "constraint": 688, "r_": 688, "hat": 688, "omega_i": 688, "measur": 688, "influenc": 688, "technic": 688, "cancel": 688, "denomin": 688, "portion": 688, "word": 688, "contrast": 688, "seri": 688, "collect": 688, "le": 688, "nonumb": 688, "leftrightarrow": 688, "period": 688, "rule": 688, "middl": 688, "recurr": 688, "subsequ": 688, "across": 688, "fact": 688, "david": 688, "histor": 688, "perspect": 688, "morgan": 688, "kaufmann": 688, "2001": 688, "wayn": 688, "springer": 688, "scienc": 688, "busi": 688, "media": 688, "1996": 688, "thoma": 688, "jr": 688, "john": 688, "yuri": 688, "finit": 688, "refin": 688, "mechan": 688, "194": 688, "39": 688, "41": 688, "4135": 688, "4195": 688, "abil": 688, "brief": 688, "120": 688, "00000000e": 688, "00000000e00": 688, "88675135e": 688, "77350269e": 688, "50000000e": 688, "33012702e": 688, "66025404e": 688, "15470054e00": 688, "8660254": 688, "might": 688, "think": 688, "lot": 688, "why": 688, "power": 688, "fly": 688, "easy_disk": 688, "handmad": 688, "much": 688, "easier": 688, "perus": 688, "helmp": 688, "70": 688, "folder": 688}, "objects": {"": [[1, 0, 0, "-", "splinepy"]], "splinepy": [[2, 0, 0, "-", "bezier"], [61, 0, 0, "-", "bspline"], [122, 0, 0, "-", "helpme"], [223, 0, 0, "-", "io"], [257, 0, 0, "-", "load"], [260, 0, 0, "-", "microstructure"], [340, 0, 0, "-", "multipatch"], [367, 0, 0, "-", "nurbs"], [396, 0, 0, "-", "rational_bezier"], [426, 0, 0, "-", "settings"], [431, 0, 0, "-", "spline"], [485, 0, 0, "-", "splinepy_core"], [583, 4, 1, "", "to_derived"], [584, 0, 0, "-", "utils"]], "splinepy.bezier": [[3, 1, 1, "", "Bezier"], [34, 1, 1, "", "BezierBase"]], "splinepy.bezier.Bezier": [[4, 2, 1, "", "basis"], [5, 2, 1, "", "basis_and_support"], [6, 2, 1, "", "basis_derivative"], [7, 2, 1, "", "basis_derivative_and_support"], [8, 3, 1, "", "bezier"], [9, 3, 1, "", "bspline"], [10, 2, 1, "", "clear"], [11, 2, 1, "", "compose"], [12, 2, 1, "", "composition_derivative"], [13, 2, 1, "", "copy"], [14, 2, 1, "", "current_core_properties"], [15, 2, 1, "", "derivative"], [16, 2, 1, "", "derivative_spline"], [17, 2, 1, "", "elevate_degrees"], [18, 2, 1, "", "evaluate"], [19, 2, 1, "", "export"], [20, 2, 1, "", "extract_dim"], [21, 2, 1, "", "greville_abscissae"], [22, 2, 1, "", "jacobian"], [23, 2, 1, "", "mapper"], [24, 3, 1, "", "nurbs"], [25, 2, 1, "", "proximities"], [26, 3, 1, "", "rationalbezier"], [27, 2, 1, "", "reduce_degrees"], [28, 2, 1, "", "sample"], [29, 2, 1, "", "show"], [30, 2, 1, "", "showable"], [31, 2, 1, "", "split"], [32, 2, 1, "", "support"], [33, 2, 1, "", "todict"]], "splinepy.bezier.BezierBase": [[35, 2, 1, "", "basis"], [36, 2, 1, "", "basis_and_support"], [37, 2, 1, "", "basis_derivative"], [38, 2, 1, "", "basis_derivative_and_support"], [39, 2, 1, "", "clear"], [40, 2, 1, "", "compose"], [41, 2, 1, "", "composition_derivative"], [42, 2, 1, "", "copy"], [43, 2, 1, "", "current_core_properties"], [44, 2, 1, "", "derivative"], [45, 2, 1, "", "derivative_spline"], [46, 2, 1, "", "elevate_degrees"], [47, 2, 1, "", "evaluate"], [48, 2, 1, "", "export"], [49, 2, 1, "", "extract_dim"], [50, 2, 1, "", "greville_abscissae"], [51, 2, 1, "", "jacobian"], [52, 2, 1, "", "mapper"], [53, 2, 1, "", "proximities"], [54, 2, 1, "", "reduce_degrees"], [55, 2, 1, "", "sample"], [56, 2, 1, "", "show"], [57, 2, 1, "", "showable"], [58, 2, 1, "", "split"], [59, 2, 1, "", "support"], [60, 2, 1, "", "todict"]], "splinepy.bspline": [[62, 1, 1, "", "BSpline"], [95, 1, 1, "", "BSplineBase"]], "splinepy.bspline.BSpline": [[63, 2, 1, "", "approximate_curve"], [64, 2, 1, "", "approximate_surface"], [65, 2, 1, "", "basis"], [66, 2, 1, "", "basis_and_support"], [67, 2, 1, "", "basis_derivative"], [68, 2, 1, "", "basis_derivative_and_support"], [69, 3, 1, "", "bspline"], [70, 2, 1, "", "clear"], [71, 2, 1, "", "copy"], [72, 2, 1, "", "current_core_properties"], [73, 2, 1, "", "derivative"], [74, 2, 1, "", "elevate_degrees"], [75, 2, 1, "", "evaluate"], [76, 2, 1, "", "export"], [77, 2, 1, "", "extract_bezier_patches"], [78, 2, 1, "", "greville_abscissae"], [79, 2, 1, "", "insert_knots"], [80, 2, 1, "", "interpolate_curve"], [81, 2, 1, "", "interpolate_surface"], [82, 2, 1, "", "jacobian"], [83, 2, 1, "", "knot_insertion_matrix"], [84, 2, 1, "", "mapper"], [85, 2, 1, "", "normalize_knot_vectors"], [86, 3, 1, "", "nurbs"], [87, 2, 1, "", "proximities"], [88, 2, 1, "", "reduce_degrees"], [89, 2, 1, "", "remove_knots"], [90, 2, 1, "", "sample"], [91, 2, 1, "", "show"], [92, 2, 1, "", "showable"], [93, 2, 1, "", "support"], [94, 2, 1, "", "todict"]], "splinepy.bspline.BSplineBase": [[96, 2, 1, "", "basis"], [97, 2, 1, "", "basis_and_support"], [98, 2, 1, "", "basis_derivative"], [99, 2, 1, "", "basis_derivative_and_support"], [100, 2, 1, "", "clear"], [101, 2, 1, "", "copy"], [102, 2, 1, "", "current_core_properties"], [103, 2, 1, "", "derivative"], [104, 2, 1, "", "elevate_degrees"], [105, 2, 1, "", "evaluate"], [106, 2, 1, "", "export"], [107, 2, 1, "", "extract_bezier_patches"], [108, 2, 1, "", "greville_abscissae"], [109, 2, 1, "", "insert_knots"], [110, 2, 1, "", "jacobian"], [111, 2, 1, "", "knot_insertion_matrix"], [112, 2, 1, "", "mapper"], [113, 2, 1, "", "normalize_knot_vectors"], [114, 2, 1, "", "proximities"], [115, 2, 1, "", "reduce_degrees"], [116, 2, 1, "", "remove_knots"], [117, 2, 1, "", "sample"], [118, 2, 1, "", "show"], [119, 2, 1, "", "showable"], [120, 2, 1, "", "support"], [121, 2, 1, "", "todict"]], "splinepy.helpme": [[123, 0, 0, "-", "check"], [127, 0, 0, "-", "create"], [149, 0, 0, "-", "extract"], [172, 0, 0, "-", "ffd"], [179, 0, 0, "-", "integrate"], [185, 0, 0, "-", "mapper"], [196, 0, 0, "-", "multi_index"], [198, 0, 0, "-", "permute"], [200, 0, 0, "-", "visualize"]], "splinepy.helpme.check": [[124, 1, 1, "", "Checker"], [126, 4, 1, "", "valid_queries"]], "splinepy.helpme.check.Checker": [[125, 2, 1, "", "valid_queries"]], "splinepy.helpme.create": [[128, 1, 1, "", "Creator"], [133, 4, 1, "", "arc"], [134, 4, 1, "", "box"], [135, 4, 1, "", "circle"], [136, 4, 1, "", "cone"], [137, 4, 1, "", "determinant_spline"], [138, 4, 1, "", "disk"], [139, 4, 1, "", "extruded"], [140, 4, 1, "", "from_bounds"], [141, 4, 1, "", "line"], [142, 4, 1, "", "parametric_view"], [143, 4, 1, "", "plate"], [144, 4, 1, "", "pyramid"], [145, 4, 1, "", "revolved"], [146, 4, 1, "", "sphere"], [147, 4, 1, "", "surface_circle"], [148, 4, 1, "", "torus"]], "splinepy.helpme.create.Creator": [[129, 2, 1, "", "determinant_spline"], [130, 2, 1, "", "extruded"], [131, 2, 1, "", "parametric_view"], [132, 2, 1, "", "revolved"]], "splinepy.helpme.extract": [[150, 1, 1, "", "Extractor"], [162, 4, 1, "", "boundaries"], [163, 4, 1, "", "control_edges"], [164, 4, 1, "", "control_faces"], [165, 4, 1, "", "control_mesh"], [166, 4, 1, "", "control_points"], [167, 4, 1, "", "control_volumes"], [168, 4, 1, "", "edges"], [169, 4, 1, "", "faces"], [170, 4, 1, "", "spline"], [171, 4, 1, "", "volumes"]], "splinepy.helpme.extract.Extractor": [[151, 2, 1, "", "beziers"], [152, 2, 1, "", "boundaries"], [153, 2, 1, "", "control_edges"], [154, 2, 1, "", "control_faces"], [155, 2, 1, "", "control_mesh"], [156, 2, 1, "", "control_points"], [157, 2, 1, "", "control_volumes"], [158, 2, 1, "", "edges"], [159, 2, 1, "", "faces"], [160, 2, 1, "", "spline"], [161, 2, 1, "", "volumes"]], "splinepy.helpme.ffd": [[173, 1, 1, "", "FFD"]], "splinepy.helpme.ffd.FFD": [[174, 3, 1, "", "mesh"], [175, 3, 1, "", "padding"], [176, 2, 1, "", "show"], [177, 2, 1, "", "showable"], [178, 3, 1, "", "spline"]], "splinepy.helpme.integrate": [[180, 1, 1, "", "Integrator"], [182, 4, 1, "", "parametric_function"], [183, 4, 1, "", "physical_function"], [184, 4, 1, "", "volume"]], "splinepy.helpme.integrate.Integrator": [[181, 2, 1, "", "volume"]], "splinepy.helpme.mapper": [[186, 1, 1, "", "Mapper"]], "splinepy.helpme.mapper.Mapper": [[187, 2, 1, "", "basis_function_derivatives"], [188, 2, 1, "", "basis_gradient_and_support"], [189, 2, 1, "", "basis_hessian_and_support"], [190, 2, 1, "", "basis_laplacian_and_support"], [191, 2, 1, "", "divergence"], [192, 2, 1, "", "field_derivatives"], [193, 2, 1, "", "gradient"], [194, 2, 1, "", "hessian"], [195, 2, 1, "", "laplacian"]], "splinepy.helpme.multi_index": [[197, 1, 1, "", "MultiIndex"]], "splinepy.helpme.permute": [[199, 4, 1, "", "parametric_axes"]], "splinepy.helpme.visualize": [[201, 1, 1, "", "MultipatchShowOption"], [211, 1, 1, "", "SplineShowOption"], [221, 4, 1, "", "make_showable"], [222, 4, 1, "", "show"]], "splinepy.helpme.visualize.MultipatchShowOption": [[202, 2, 1, "", "clear"], [203, 2, 1, "", "copy_valid_options"], [204, 2, 1, "", "get"], [205, 2, 1, "", "items"], [206, 2, 1, "", "keys"], [207, 2, 1, "", "pop"], [208, 2, 1, "", "update"], [209, 2, 1, "", "valid_keys"], [210, 2, 1, "", "values"]], "splinepy.helpme.visualize.SplineShowOption": [[212, 2, 1, "", "clear"], [213, 2, 1, "", "copy_valid_options"], [214, 2, 1, "", "get"], [215, 2, 1, "", "items"], [216, 2, 1, "", "keys"], [217, 2, 1, "", "pop"], [218, 2, 1, "", "update"], [219, 2, 1, "", "valid_keys"], [220, 2, 1, "", "values"]], "splinepy.io": [[224, 0, 0, "-", "cats"], [227, 0, 0, "-", "gismo"], [230, 0, 0, "-", "iges"], [233, 0, 0, "-", "ioutils"], [240, 0, 0, "-", "irit"], [243, 0, 0, "-", "json"], [246, 0, 0, "-", "mfem"], [252, 0, 0, "-", "npz"], [255, 0, 0, "-", "vtk"]], "splinepy.io.cats": [[225, 4, 1, "", "export"], [226, 4, 1, "", "load"]], "splinepy.io.gismo": [[228, 4, 1, "", "export"], [229, 4, 1, "", "load"]], "splinepy.io.iges": [[231, 4, 1, "", "export"], [232, 4, 1, "", "load"]], "splinepy.io.ioutils": [[234, 4, 1, "", "abs_fname"], [235, 4, 1, "", "dict_to_spline"], [236, 4, 1, "", "expand_tabs"], [237, 4, 1, "", "form_lines"], [238, 4, 1, "", "make_meaningful"], [239, 4, 1, "", "next_line"]], "splinepy.io.irit": [[241, 4, 1, "", "export"], [242, 4, 1, "", "load"]], "splinepy.io.json": [[244, 4, 1, "", "export"], [245, 4, 1, "", "load"]], "splinepy.io.mfem": [[247, 4, 1, "", "dof_mapping"], [248, 4, 1, "", "export"], [249, 4, 1, "", "export_cartesian"], [250, 4, 1, "", "load"], [251, 4, 1, "", "read_solution"]], "splinepy.io.npz": [[253, 4, 1, "", "export"], [254, 4, 1, "", "load"]], "splinepy.io.vtk": [[256, 4, 1, "", "export"]], "splinepy.load": [[258, 4, 1, "", "load_solution"], [259, 4, 1, "", "load_splines"]], "splinepy.microstructure": [[261, 0, 0, "-", "microstructure"], [270, 0, 0, "-", "tiles"]], "splinepy.microstructure.microstructure": [[262, 1, 1, "", "Microstructure"]], "splinepy.microstructure.microstructure.Microstructure": [[263, 2, 1, "", "create"], [264, 3, 1, "", "deformation_function"], [265, 3, 1, "", "microtile"], [266, 3, 1, "", "parameter_sensitivity_function"], [267, 3, 1, "", "parametrization_function"], [268, 2, 1, "", "show"], [269, 3, 1, "", "tiling"]], "splinepy.microstructure.tiles": [[271, 0, 0, "-", "armadillo"], [277, 0, 0, "-", "chi"], [282, 0, 0, "-", "cross_2d"], [287, 0, 0, "-", "cross_3d"], [292, 0, 0, "-", "cube_void"], [297, 0, 0, "-", "double_lattice"], [302, 0, 0, "-", "ellips_v_oid"], [307, 0, 0, "-", "hollow_cube"], [312, 0, 0, "-", "hollow_octagon"], [317, 0, 0, "-", "hollow_octagon_extrude"], [323, 0, 0, "-", "inverse_cross_3d"], [328, 0, 0, "-", "snappy"], [333, 0, 0, "-", "tile_base"]], "splinepy.microstructure.tiles.armadillo": [[272, 1, 1, "", "Armadillo"]], "splinepy.microstructure.tiles.armadillo.Armadillo": [[273, 2, 1, "", "check_param_derivatives"], [274, 2, 1, "", "check_params"], [275, 2, 1, "", "closing_tile"], [276, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.chi": [[278, 1, 1, "", "Chi"]], "splinepy.microstructure.tiles.chi.Chi": [[279, 2, 1, "", "check_param_derivatives"], [280, 2, 1, "", "check_params"], [281, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.cross_2d": [[283, 1, 1, "", "Cross2D"]], "splinepy.microstructure.tiles.cross_2d.Cross2D": [[284, 2, 1, "", "check_param_derivatives"], [285, 2, 1, "", "check_params"], [286, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.cross_3d": [[288, 1, 1, "", "Cross3D"]], "splinepy.microstructure.tiles.cross_3d.Cross3D": [[289, 2, 1, "", "check_param_derivatives"], [290, 2, 1, "", "check_params"], [291, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.cube_void": [[293, 1, 1, "", "CubeVoid"]], "splinepy.microstructure.tiles.cube_void.CubeVoid": [[294, 2, 1, "", "check_param_derivatives"], [295, 2, 1, "", "check_params"], [296, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.double_lattice": [[298, 1, 1, "", "DoubleLattice"]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice": [[299, 2, 1, "", "check_param_derivatives"], [300, 2, 1, "", "check_params"], [301, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.ellips_v_oid": [[303, 1, 1, "", "EllipsVoid"]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid": [[304, 2, 1, "", "check_param_derivatives"], [305, 2, 1, "", "check_params"], [306, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.hollow_cube": [[308, 1, 1, "", "HollowCube"]], "splinepy.microstructure.tiles.hollow_cube.HollowCube": [[309, 2, 1, "", "check_param_derivatives"], [310, 2, 1, "", "check_params"], [311, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.hollow_octagon": [[313, 1, 1, "", "HollowOctagon"]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon": [[314, 2, 1, "", "check_param_derivatives"], [315, 2, 1, "", "check_params"], [316, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.hollow_octagon_extrude": [[318, 1, 1, "", "HollowOctagonExtrude"]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude": [[319, 2, 1, "", "check_param_derivatives"], [320, 2, 1, "", "check_params"], [321, 2, 1, "", "closing_tile"], [322, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.inverse_cross_3d": [[324, 1, 1, "", "InverseCross3D"]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D": [[325, 2, 1, "", "check_param_derivatives"], [326, 2, 1, "", "check_params"], [327, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.snappy": [[329, 1, 1, "", "Snappy"]], "splinepy.microstructure.tiles.snappy.Snappy": [[330, 2, 1, "", "check_param_derivatives"], [331, 2, 1, "", "check_params"], [332, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.tile_base": [[334, 1, 1, "", "TileBase"]], "splinepy.microstructure.tiles.tile_base.TileBase": [[335, 2, 1, "", "check_param_derivatives"], [336, 2, 1, "", "check_params"], [337, 3, 1, "", "dim"], [338, 3, 1, "", "evaluation_points"], [339, 3, 1, "", "para_dim"]], "splinepy.multipatch": [[341, 1, 1, "", "Multipatch"]], "splinepy.multipatch.Multipatch": [[342, 2, 1, "", "add_fields"], [343, 3, 1, "", "boundaries"], [344, 2, 1, "", "boundaries_from_continuity"], [345, 2, 1, "", "boundary_from_function"], [346, 2, 1, "", "boundary_multipatch"], [347, 2, 1, "", "boundary_patch_ids"], [348, 2, 1, "", "clear"], [349, 2, 1, "", "combine_boundaries"], [350, 2, 1, "", "control_point_offsets"], [351, 2, 1, "", "determine_interfaces"], [352, 3, 1, "", "dim"], [353, 2, 1, "", "evaluate"], [354, 3, 1, "", "extract"], [355, 3, 1, "", "fields"], [356, 3, 1, "", "interfaces"], [357, 3, 1, "", "para_dim"], [358, 3, 1, "", "patches"], [359, 2, 1, "", "sample"], [360, 2, 1, "", "set_boundary"], [361, 2, 1, "", "show"], [362, 3, 1, "", "show_options"], [363, 2, 1, "", "showable"], [364, 3, 1, "", "spline_data"], [365, 2, 1, "", "sub_multipatch"], [366, 3, 1, "", "sub_patch_centers"]], "splinepy.nurbs": [[368, 1, 1, "", "NURBS"]], "splinepy.nurbs.NURBS": [[369, 2, 1, "", "basis"], [370, 2, 1, "", "basis_and_support"], [371, 2, 1, "", "basis_derivative"], [372, 2, 1, "", "basis_derivative_and_support"], [373, 2, 1, "", "clear"], [374, 2, 1, "", "copy"], [375, 2, 1, "", "current_core_properties"], [376, 2, 1, "", "derivative"], [377, 2, 1, "", "elevate_degrees"], [378, 2, 1, "", "evaluate"], [379, 2, 1, "", "export"], [380, 2, 1, "", "extract_bezier_patches"], [381, 2, 1, "", "greville_abscissae"], [382, 2, 1, "", "insert_knots"], [383, 2, 1, "", "jacobian"], [384, 2, 1, "", "knot_insertion_matrix"], [385, 2, 1, "", "mapper"], [386, 2, 1, "", "normalize_knot_vectors"], [387, 3, 1, "", "nurbs"], [388, 2, 1, "", "proximities"], [389, 2, 1, "", "reduce_degrees"], [390, 2, 1, "", "remove_knots"], [391, 2, 1, "", "sample"], [392, 2, 1, "", "show"], [393, 2, 1, "", "showable"], [394, 2, 1, "", "support"], [395, 2, 1, "", "todict"]], "splinepy.rational_bezier": [[397, 1, 1, "", "RationalBezier"]], "splinepy.rational_bezier.RationalBezier": [[398, 2, 1, "", "basis"], [399, 2, 1, "", "basis_and_support"], [400, 2, 1, "", "basis_derivative"], [401, 2, 1, "", "basis_derivative_and_support"], [402, 2, 1, "", "clear"], [403, 2, 1, "", "compose"], [404, 2, 1, "", "composition_derivative"], [405, 2, 1, "", "copy"], [406, 2, 1, "", "current_core_properties"], [407, 2, 1, "", "derivative"], [408, 2, 1, "", "derivative_spline"], [409, 2, 1, "", "elevate_degrees"], [410, 2, 1, "", "evaluate"], [411, 2, 1, "", "export"], [412, 2, 1, "", "extract_dim"], [413, 2, 1, "", "greville_abscissae"], [414, 2, 1, "", "jacobian"], [415, 2, 1, "", "mapper"], [416, 3, 1, "", "nurbs"], [417, 2, 1, "", "proximities"], [418, 3, 1, "", "rationalbezier"], [419, 2, 1, "", "reduce_degrees"], [420, 2, 1, "", "sample"], [421, 2, 1, "", "show"], [422, 2, 1, "", "showable"], [423, 2, 1, "", "split"], [424, 2, 1, "", "support"], [425, 2, 1, "", "todict"]], "splinepy.settings": [[427, 5, 1, "", "CHECK_BOUNDS"], [428, 5, 1, "", "NAME_TO_TYPE"], [429, 5, 1, "", "NTHREADS"], [430, 5, 1, "", "TOLERANCE"]], "splinepy.spline": [[432, 1, 1, "", "RequiredProperties"], [436, 1, 1, "", "Spline"]], "splinepy.spline.RequiredProperties": [[433, 2, 1, "", "intersection"], [434, 2, 1, "", "of"], [435, 2, 1, "", "union"]], "splinepy.spline.Spline": [[437, 2, 1, "", "basis"], [438, 2, 1, "", "basis_and_support"], [439, 2, 1, "", "basis_derivative"], [440, 2, 1, "", "basis_derivative_and_support"], [441, 3, 1, "", "check"], [442, 2, 1, "", "clear"], [443, 3, 1, "", "control_mesh_resolutions"], [444, 3, 1, "", "control_point_bounds"], [445, 3, 1, "", "control_points"], [446, 2, 1, "", "copy"], [447, 3, 1, "", "cps"], [448, 3, 1, "", "create"], [449, 2, 1, "", "current_core_properties"], [450, 3, 1, "", "degrees"], [451, 2, 1, "", "derivative"], [452, 3, 1, "", "dim"], [453, 3, 1, "", "ds"], [454, 2, 1, "", "elevate_degrees"], [455, 2, 1, "", "evaluate"], [456, 2, 1, "", "export"], [457, 3, 1, "", "extract"], [458, 2, 1, "", "greville_abscissae"], [459, 3, 1, "", "has_knot_vectors"], [460, 3, 1, "", "integrate"], [461, 3, 1, "", "is_rational"], [462, 2, 1, "", "jacobian"], [463, 3, 1, "", "knot_multiplicities"], [464, 3, 1, "", "knot_vectors"], [465, 3, 1, "", "kvs"], [466, 2, 1, "", "mapper"], [467, 3, 1, "", "multi_index"], [468, 3, 1, "", "name"], [469, 3, 1, "", "para_dim"], [470, 3, 1, "", "parametric_bounds"], [471, 2, 1, "", "proximities"], [472, 2, 1, "", "reduce_degrees"], [473, 3, 1, "", "required_properties"], [474, 2, 1, "", "sample"], [475, 2, 1, "", "show"], [476, 3, 1, "", "show_options"], [477, 2, 1, "", "showable"], [478, 3, 1, "", "spline_data"], [479, 2, 1, "", "support"], [480, 2, 1, "", "todict"], [481, 3, 1, "", "unique_knots"], [482, 3, 1, "", "weights"], [483, 3, 1, "", "whatami"], [484, 3, 1, "", "ws"]], "splinepy.splinepy_core": [[486, 1, 1, "", "ControlPointPointers"], [493, 1, 1, "", "KnotVector"], [499, 1, 1, "", "PyMultipatch"], [520, 1, 1, "", "PySpline"], [542, 1, 1, "", "WeightPointers"], [549, 4, 1, "", "add"], [550, 4, 1, "", "annul_core"], [551, 4, 1, "", "approximate_curve"], [552, 4, 1, "", "approximate_surface"], [553, 4, 1, "", "bezier_extraction_matrix"], [554, 4, 1, "", "boundaries_from_continuity"], [555, 4, 1, "", "boundary_centers"], [556, 4, 1, "", "build_type"], [557, 4, 1, "", "compose"], [558, 4, 1, "", "compose_sensitivities"], [559, 4, 1, "", "composition_derivative"], [560, 4, 1, "", "core_id"], [561, 4, 1, "", "core_ref_count"], [562, 4, 1, "", "derivative_spline"], [563, 4, 1, "", "export_iges"], [564, 4, 1, "", "extract_all_boundary_splines"], [565, 4, 1, "", "extract_bezier_patches"], [566, 4, 1, "", "extract_boundaries"], [567, 4, 1, "", "extract_dim"], [568, 4, 1, "", "global_knot_insertion_matrix"], [569, 4, 1, "", "has_core"], [570, 4, 1, "", "insert_knots"], [571, 4, 1, "", "interfaces_from_boundary_centers"], [572, 4, 1, "", "interpolate_curve"], [573, 4, 1, "", "interpolate_surface"], [574, 4, 1, "", "is_minimal"], [575, 4, 1, "", "knot_insertion_matrix"], [576, 4, 1, "", "multiply"], [577, 4, 1, "", "null_spline"], [578, 4, 1, "", "orientations"], [579, 4, 1, "", "read_iges"], [580, 4, 1, "", "remove_knots"], [581, 4, 1, "", "same_spline_with_knot_vectors"], [582, 4, 1, "", "split"]], "splinepy.splinepy_core.ControlPointPointers": [[487, 2, 1, "", "dim"], [488, 2, 1, "", "len"], [489, 2, 1, "", "set_row"], [490, 2, 1, "", "set_rows"], [491, 2, 1, "", "sync"], [492, 2, 1, "", "sync_rows"]], "splinepy.splinepy_core.KnotVector": [[494, 2, 1, "", "find_span"], [495, 2, 1, "", "multiplicities"], [496, 2, 1, "", "numpy"], [497, 2, 1, "", "scale"], [498, 2, 1, "", "unique"]], "splinepy.splinepy_core.PyMultipatch": [[500, 2, 1, "", "add_fields"], [501, 2, 1, "", "boundary_multipatch"], [502, 2, 1, "", "boundary_patch_ids"], [503, 2, 1, "", "clear"], [504, 2, 1, "", "control_point_offsets"], [505, 3, 1, "", "control_points"], [506, 3, 1, "", "dim"], [507, 2, 1, "", "evaluate"], [508, 2, 1, "", "fields"], [509, 2, 1, "", "interfaces"], [510, 3, 1, "", "n_default_threads"], [511, 3, 1, "", "name"], [512, 3, 1, "", "para_dim"], [513, 3, 1, "", "patches"], [514, 3, 1, "", "same_parametric_bounds"], [515, 2, 1, "", "sample"], [516, 2, 1, "", "sub_multipatch"], [517, 2, 1, "", "sub_patch_centers"], [518, 3, 1, "", "tolerance"], [519, 3, 1, "", "whatami"]], "splinepy.splinepy_core.PySpline": [[521, 2, 1, "", "basis"], [522, 2, 1, "", "basis_and_support"], [523, 2, 1, "", "basis_derivative"], [524, 2, 1, "", "basis_derivative_and_support"], [525, 3, 1, "", "control_mesh_resolutions"], [526, 2, 1, "", "current_core_properties"], [527, 2, 1, "", "derivative"], [528, 3, 1, "", "dim"], [529, 2, 1, "", "elevate_degrees"], [530, 2, 1, "", "evaluate"], [531, 3, 1, "", "has_knot_vectors"], [532, 3, 1, "", "is_rational"], [533, 2, 1, "", "jacobian"], [534, 3, 1, "", "name"], [535, 3, 1, "", "para_dim"], [536, 3, 1, "", "parametric_bounds"], [537, 2, 1, "", "proximities"], [538, 2, 1, "", "reduce_degrees"], [539, 2, 1, "", "sample"], [540, 2, 1, "", "support"], [541, 3, 1, "", "whatami"]], "splinepy.splinepy_core.WeightPointers": [[543, 2, 1, "", "dim"], [544, 2, 1, "", "len"], [545, 2, 1, "", "set_row"], [546, 2, 1, "", "set_rows"], [547, 2, 1, "", "sync"], [548, 2, 1, "", "sync_rows"]], "splinepy.utils": [[585, 0, 0, "-", "data"], [679, 0, 0, "-", "log"]], "splinepy.utils.data": [[586, 1, 1, "", "MultipatchData"], [595, 1, 1, "", "PhysicalSpaceArray"], [654, 1, 1, "", "SplineData"], [663, 1, 1, "", "SplineDataAdaptor"], [674, 4, 1, "", "cartesian_product"], [675, 4, 1, "", "enforce_contiguous"], [676, 4, 1, "", "enforce_contiguous_values"], [677, 4, 1, "", "make_matrix"], [678, 4, 1, "", "uniform_query"]], "splinepy.utils.data.MultipatchData": [[587, 2, 1, "", "as_arrow"], [588, 2, 1, "", "as_scalar"], [589, 2, 1, "", "clear"], [590, 2, 1, "", "get"], [591, 2, 1, "", "items"], [592, 2, 1, "", "keys"], [593, 2, 1, "", "pop"], [594, 2, 1, "", "values"]], "splinepy.utils.data.PhysicalSpaceArray": [[596, 2, 1, "", "all"], [597, 2, 1, "", "any"], [598, 2, 1, "", "argmax"], [599, 2, 1, "", "argmin"], [600, 2, 1, "", "argpartition"], [601, 2, 1, "", "argsort"], [602, 2, 1, "", "astype"], [603, 2, 1, "", "byteswap"], [604, 2, 1, "", "choose"], [605, 2, 1, "", "clip"], [606, 2, 1, "", "compress"], [607, 2, 1, "", "conj"], [608, 2, 1, "", "conjugate"], [609, 2, 1, "", "copy"], [610, 2, 1, "", "cumprod"], [611, 2, 1, "", "cumsum"], [612, 2, 1, "", "diagonal"], [613, 2, 1, "", "dot"], [614, 2, 1, "", "dump"], [615, 2, 1, "", "dumps"], [616, 2, 1, "", "fill"], [617, 2, 1, "", "flatten"], [618, 2, 1, "", "full_row_indices"], [619, 2, 1, "", "getfield"], [620, 2, 1, "", "item"], [621, 2, 1, "", "itemset"], [622, 2, 1, "", "max"], [623, 2, 1, "", "mean"], [624, 2, 1, "", "min"], [625, 2, 1, "", "newbyteorder"], [626, 2, 1, "", "nonzero"], [627, 2, 1, "", "partition"], [628, 2, 1, "", "prod"], [629, 2, 1, "", "ptp"], [630, 2, 1, "", "put"], [631, 2, 1, "", "ravel"], [632, 2, 1, "", "repeat"], [633, 2, 1, "", "reshape"], [634, 2, 1, "", "resize"], [635, 2, 1, "", "round"], [636, 2, 1, "", "row_indices"], [637, 2, 1, "", "searchsorted"], [638, 2, 1, "", "setfield"], [639, 2, 1, "", "setflags"], [640, 2, 1, "", "sort"], [641, 2, 1, "", "squeeze"], [642, 2, 1, "", "std"], [643, 2, 1, "", "sum"], [644, 2, 1, "", "swapaxes"], [645, 2, 1, "", "take"], [646, 2, 1, "", "tobytes"], [647, 2, 1, "", "tofile"], [648, 2, 1, "", "tolist"], [649, 2, 1, "", "tostring"], [650, 2, 1, "", "trace"], [651, 2, 1, "", "transpose"], [652, 2, 1, "", "var"], [653, 2, 1, "", "view"]], "splinepy.utils.data.SplineData": [[655, 2, 1, "", "as_arrow"], [656, 2, 1, "", "as_scalar"], [657, 2, 1, "", "clear"], [658, 2, 1, "", "get"], [659, 2, 1, "", "items"], [660, 2, 1, "", "keys"], [661, 2, 1, "", "pop"], [662, 2, 1, "", "values"]], "splinepy.utils.data.SplineDataAdaptor": [[664, 6, 1, "", "arrow_data_only"], [665, 2, 1, "", "as_vertex_data"], [666, 6, 1, "", "data"], [667, 6, 1, "", "function"], [668, 6, 1, "", "has_evaluate"], [669, 6, 1, "", "has_function"], [670, 6, 1, "", "has_locations"], [671, 6, 1, "", "is_spline"], [672, 6, 1, "", "locations"], [673, 6, 1, "", "parametric_bounds"]], "splinepy.utils.log": [[680, 4, 1, "", "configure"], [681, 4, 1, "", "debug"], [682, 4, 1, "", "info"], [683, 4, 1, "", "prepend_log"], [684, 4, 1, "", "warning"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"contribut": 0, "quick": [0, 686], "start": [0, 686], "python": [0, 685], "style": 0, "implement": 0, "prefer": 0, "c": 0, "automat": 0, "format": 0, "check": [0, 123, 124, 125, 126, 441], "local": 0, "document": 0, "build": 0, "splinepi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686], "bezier": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 151], "basi": [4, 35, 65, 96, 369, 398, 437, 521, 688], "basis_and_support": [5, 36, 66, 97, 370, 399, 438, 522], "basis_deriv": [6, 37, 67, 98, 371, 400, 439, 523], "basis_derivative_and_support": [7, 38, 68, 99, 372, 401, 440, 524], "bspline": [9, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121], "clear": [10, 39, 70, 100, 202, 212, 348, 373, 402, 442, 503, 589, 657], "compos": [11, 40, 403, 557], "composition_deriv": [12, 41, 404, 559], "copi": [13, 42, 71, 101, 374, 405, 446, 609], "current_core_properti": [14, 43, 72, 102, 375, 406, 449, 526], "deriv": [15, 44, 73, 103, 376, 407, 451, 527], "derivative_splin": [16, 45, 408, 562], "elevate_degre": [17, 46, 74, 104, 377, 409, 454, 529], "evalu": [18, 47, 75, 105, 353, 378, 410, 455, 507, 530], "export": [19, 48, 76, 106, 225, 228, 231, 241, 244, 248, 253, 256, 379, 411, 456], "extract_dim": [20, 49, 412, 567], "greville_abscissa": [21, 50, 78, 108, 381, 413, 458], "jacobian": [22, 51, 82, 110, 383, 414, 462, 533], "mapper": [23, 52, 84, 112, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 385, 415, 466], "nurb": [24, 86, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 416, 688], "proxim": [25, 53, 87, 114, 388, 417, 471, 537], "rationalbezi": [26, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "reduce_degre": [27, 54, 88, 115, 389, 419, 472, 538], "sampl": [28, 55, 90, 117, 359, 391, 420, 474, 515, 539], "show": [29, 56, 91, 118, 176, 222, 268, 361, 392, 421, 475], "showabl": [30, 57, 92, 119, 177, 363, 393, 422, 477], "split": [31, 58, 423, 582], "support": [32, 59, 93, 120, 394, 424, 479, 540], "todict": [33, 60, 94, 121, 395, 425, 480], "bezierbas": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "approximate_curv": [63, 551], "approximate_surfac": [64, 552], "extract_bezier_patch": [77, 107, 380, 565], "insert_knot": [79, 109, 382, 570], "interpolate_curv": [80, 572], "interpolate_surfac": [81, 573], "knot_insertion_matrix": [83, 111, 384, 575], "normalize_knot_vector": [85, 113, 386], "remove_knot": [89, 116, 390, 580], "bsplinebas": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121], "helpm": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "checker": [124, 125], "valid_queri": [125, 126], "creat": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 263, 448, 688], "creator": [128, 129, 130, 131, 132], "determinant_splin": [129, 137], "extrud": [130, 139], "parametric_view": [131, 142], "revolv": [132, 145], "arc": 133, "box": 134, "circl": 135, "cone": 136, "disk": 138, "from_bound": 140, "line": 141, "plate": 143, "pyramid": 144, "sphere": 146, "surface_circl": 147, "toru": 148, "extract": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 354, 457], "extractor": [150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "boundari": [152, 162, 343], "control_edg": [153, 163], "control_fac": [154, 164], "control_mesh": [155, 165], "control_point": [156, 166, 445, 505], "control_volum": [157, 167], "edg": [158, 168], "face": [159, 169], "spline": [160, 170, 178, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 686, 688], "volum": [161, 171, 181, 184], "ffd": [172, 173, 174, 175, 176, 177, 178], "mesh": 174, "pad": 175, "integr": [179, 180, 181, 182, 183, 184, 460], "parametric_funct": 182, "physical_funct": 183, "basis_function_deriv": 187, "basis_gradient_and_support": 188, "basis_hessian_and_support": 189, "basis_laplacian_and_support": 190, "diverg": 191, "field_deriv": 192, "gradient": 193, "hessian": 194, "laplacian": 195, "multi_index": [196, 197, 467], "multiindex": 197, "permut": [198, 199], "parametric_ax": 199, "visual": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 688], "multipatchshowopt": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210], "copy_valid_opt": [203, 213], "get": [204, 214, 590, 658], "item": [205, 215, 591, 620, 659], "kei": [206, 216, 592, 660], "pop": [207, 217, 593, 661], "updat": [208, 218], "valid_kei": [209, 219], "valu": [210, 220, 594, 662], "splineshowopt": [211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "make_show": 221, "io": [223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 686], "cat": [224, 225, 226], "load": [226, 229, 232, 242, 245, 250, 254, 257, 258, 259], "gismo": [227, 228, 229], "ig": [230, 231, 232], "ioutil": [233, 234, 235, 236, 237, 238, 239], "abs_fnam": 234, "dict_to_splin": 235, "expand_tab": 236, "form_lin": 237, "make_meaning": 238, "next_lin": 239, "irit": [240, 241, 242], "json": [243, 244, 245], "mfem": [246, 247, 248, 249, 250, 251], "dof_map": 247, "export_cartesian": 249, "read_solut": 251, "npz": [252, 253, 254], "vtk": [255, 256], "load_solut": 258, "load_splin": 259, "microstructur": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "deformation_funct": 264, "microtil": 265, "parameter_sensitivity_funct": 266, "parametrization_funct": 267, "tile": [269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "armadillo": [271, 272, 273, 274, 275, 276], "check_param_deriv": [273, 279, 284, 289, 294, 299, 304, 309, 314, 319, 325, 330, 335], "check_param": [274, 280, 285, 290, 295, 300, 305, 310, 315, 320, 326, 331, 336], "closing_til": [275, 321], "create_til": [276, 281, 286, 291, 296, 301, 306, 311, 316, 322, 327, 332], "chi": [277, 278, 279, 280, 281], "cross_2d": [282, 283, 284, 285, 286], "cross2d": [283, 284, 285, 286], "cross_3d": [287, 288, 289, 290, 291], "cross3d": [288, 289, 290, 291], "cube_void": [292, 293, 294, 295, 296], "cubevoid": [293, 294, 295, 296], "double_lattic": [297, 298, 299, 300, 301], "doublelattic": [298, 299, 300, 301], "ellips_v_oid": [302, 303, 304, 305, 306], "ellipsvoid": [303, 304, 305, 306], "hollow_cub": [307, 308, 309, 310, 311], "hollowcub": [308, 309, 310, 311], "hollow_octagon": [312, 313, 314, 315, 316], "hollowoctagon": [313, 314, 315, 316], "hollow_octagon_extrud": [317, 318, 319, 320, 321, 322], "hollowoctagonextrud": [318, 319, 320, 321, 322], "inverse_cross_3d": [323, 324, 325, 326, 327], "inversecross3d": [324, 325, 326, 327], "snappi": [328, 329, 330, 331, 332], "tile_bas": [333, 334, 335, 336, 337, 338, 339], "tilebas": [334, 335, 336, 337, 338, 339], "dim": [337, 352, 452, 487, 506, 528, 543], "evaluation_point": 338, "para_dim": [339, 357, 469, 512, 535], "multipatch": [340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 686], "add_field": [342, 500], "boundaries_from_continu": [344, 554], "boundary_from_funct": 345, "boundary_multipatch": [346, 501], "boundary_patch_id": [347, 502], "combine_boundari": 349, "control_point_offset": [350, 504], "determine_interfac": 351, "field": [355, 508], "interfac": [356, 509], "patch": [358, 513], "set_boundari": 360, "show_opt": [362, 476], "spline_data": [364, 478], "sub_multipatch": [365, 516], "sub_patch_cent": [366, 517], "rational_bezi": [396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "set": [426, 427, 428, 429, 430], "check_bound": 427, "name_to_typ": 428, "nthread": 429, "toler": [430, 518], "requiredproperti": [432, 433, 434, 435], "intersect": 433, "union": 435, "control_mesh_resolut": [443, 525], "control_point_bound": 444, "cp": 447, "degre": 450, "d": 453, "has_knot_vector": [459, 531], "is_rat": [461, 532], "knot_multipl": 463, "knot_vector": 464, "kv": 465, "name": [468, 511, 534], "parametric_bound": [470, 536, 673], "required_properti": 473, "unique_knot": 481, "weight": 482, "whatami": [483, 519, 541], "w": 484, "splinepy_cor": [485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582], "controlpointpoint": [486, 487, 488, 489, 490, 491, 492], "len": [488, 544], "set_row": [489, 490, 545, 546], "sync": [491, 547], "sync_row": [492, 548], "knotvector": [493, 494, 495, 496, 497, 498], "find_span": 494, "multipl": 495, "numpi": 496, "scale": 497, "uniqu": 498, "pymultipatch": [499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519], "n_default_thread": 510, "same_parametric_bound": 514, "pysplin": [520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541], "weightpoint": [542, 543, 544, 545, 546, 547, 548], "add": 549, "annul_cor": 550, "bezier_extraction_matrix": 553, "boundary_cent": 555, "build_typ": 556, "compose_sensit": 558, "core_id": 560, "core_ref_count": 561, "export_ig": 563, "extract_all_boundary_splin": 564, "extract_boundari": 566, "global_knot_insertion_matrix": 568, "has_cor": 569, "interfaces_from_boundary_cent": 571, "is_minim": 574, "multipli": 576, "null_splin": 577, "orient": 578, "read_ig": 579, "same_spline_with_knot_vector": 581, "to_deriv": 583, "util": [584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684], "data": [585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678], "multipatchdata": [586, 587, 588, 589, 590, 591, 592, 593, 594], "as_arrow": [587, 655], "as_scalar": [588, 656], "physicalspacearrai": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653], "all": 596, "ani": 597, "argmax": 598, "argmin": 599, "argpartit": 600, "argsort": 601, "astyp": 602, "byteswap": 603, "choos": 604, "clip": 605, "compress": 606, "conj": 607, "conjug": 608, "cumprod": 610, "cumsum": 611, "diagon": 612, "dot": 613, "dump": [614, 615], "fill": 616, "flatten": 617, "full_row_indic": 618, "getfield": 619, "itemset": 621, "max": 622, "mean": 623, "min": 624, "newbyteord": 625, "nonzero": 626, "partit": 627, "prod": 628, "ptp": 629, "put": 630, "ravel": 631, "repeat": 632, "reshap": 633, "resiz": 634, "round": 635, "row_indic": 636, "searchsort": 637, "setfield": 638, "setflag": 639, "sort": 640, "squeez": 641, "std": 642, "sum": 643, "swapax": 644, "take": 645, "tobyt": 646, "tofil": 647, "tolist": 648, "tostr": 649, "trace": 650, "transpos": 651, "var": 652, "view": 653, "splinedata": [654, 655, 656, 657, 658, 659, 660, 661, 662], "splinedataadaptor": [663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673], "arrow_data_onli": 664, "as_vertex_data": 665, "function": [667, 688], "has_evalu": 668, "has_funct": 669, "has_loc": 670, "is_splin": 671, "locat": 672, "cartesian_product": 674, "enforce_contigu": 675, "enforce_contiguous_valu": 676, "make_matrix": 677, "uniform_queri": 678, "log": [679, 680, 681, 682, 683, 684], "configur": 680, "debug": 681, "info": 682, "prepend_log": 683, "warn": 684, "api": 685, "refer": 685, "overview": 685, "instal": 686, "guid": 686, "featur": 686, "summari": 686, "depend": 686, "tabl": 686, "content": 686, "librari": 686, "introduct": 688, "A": 688, "gener": 688, "In": 688, "which": 688, "situat": 688, "ar": 688, "help": 688, "an": 688, "differ": 688, "type": 688, "b\u00e9zier": 688, "exampl": 688, "properti": 688, "curv": 688, "drawback": 688, "ration": 688, "b": 688, "non": 688, "uniform": 688, "further": 688, "read": 688, "plot": 688, "basic": 688, "creation": 688, "common": 688, "geometri": 688, "expand": 688, "3d": 688}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Contributing": [[0, "contributing"], [0, "id1"]], "Quick start": [[0, "quick-start"], [686, "quick-start"]], "Python style / implementation preferences": [[0, "python-style-implementation-preferences"]], "C++ style / implementation preferences": [[0, "c-style-implementation-preferences"]], "Automatic formatting / style check": [[0, "automatic-formatting-style-check"]], "Local documentation build": [[0, "local-documentation-build"]], "splinepy": [[1, "splinepy"], [686, "splinepy"]], "splinepy.bezier": [[2, "splinepy-bezier"]], "splinepy.bezier.Bezier": [[3, "splinepy-bezier-bezier"]], "splinepy.bezier.Bezier.basis": [[4, "splinepy-bezier-bezier-basis"]], "splinepy.bezier.Bezier.basis_and_support": [[5, "splinepy-bezier-bezier-basis-and-support"]], "splinepy.bezier.Bezier.basis_derivative": [[6, "splinepy-bezier-bezier-basis-derivative"]], "splinepy.bezier.Bezier.basis_derivative_and_support": [[7, "splinepy-bezier-bezier-basis-derivative-and-support"]], "splinepy.bezier.Bezier.bezier": [[8, "splinepy-bezier-bezier-bezier"]], "splinepy.bezier.Bezier.bspline": [[9, "splinepy-bezier-bezier-bspline"]], "splinepy.bezier.Bezier.clear": [[10, "splinepy-bezier-bezier-clear"]], "splinepy.bezier.Bezier.compose": [[11, "splinepy-bezier-bezier-compose"]], "splinepy.bezier.Bezier.composition_derivative": [[12, "splinepy-bezier-bezier-composition-derivative"]], "splinepy.bezier.Bezier.copy": [[13, "splinepy-bezier-bezier-copy"]], "splinepy.bezier.Bezier.current_core_properties": [[14, "splinepy-bezier-bezier-current-core-properties"]], "splinepy.bezier.Bezier.derivative": [[15, "splinepy-bezier-bezier-derivative"]], "splinepy.bezier.Bezier.derivative_spline": [[16, "splinepy-bezier-bezier-derivative-spline"]], "splinepy.bezier.Bezier.elevate_degrees": [[17, "splinepy-bezier-bezier-elevate-degrees"]], "splinepy.bezier.Bezier.evaluate": [[18, "splinepy-bezier-bezier-evaluate"]], "splinepy.bezier.Bezier.export": [[19, "splinepy-bezier-bezier-export"]], "splinepy.bezier.Bezier.extract_dim": [[20, "splinepy-bezier-bezier-extract-dim"]], "splinepy.bezier.Bezier.greville_abscissae": [[21, "splinepy-bezier-bezier-greville-abscissae"]], "splinepy.bezier.Bezier.jacobian": [[22, "splinepy-bezier-bezier-jacobian"]], "splinepy.bezier.Bezier.mapper": [[23, "splinepy-bezier-bezier-mapper"]], "splinepy.bezier.Bezier.nurbs": [[24, "splinepy-bezier-bezier-nurbs"]], "splinepy.bezier.Bezier.proximities": [[25, "splinepy-bezier-bezier-proximities"]], "splinepy.bezier.Bezier.rationalbezier": [[26, "splinepy-bezier-bezier-rationalbezier"]], "splinepy.bezier.Bezier.reduce_degrees": [[27, "splinepy-bezier-bezier-reduce-degrees"]], "splinepy.bezier.Bezier.sample": [[28, "splinepy-bezier-bezier-sample"]], "splinepy.bezier.Bezier.show": [[29, "splinepy-bezier-bezier-show"]], "splinepy.bezier.Bezier.showable": [[30, "splinepy-bezier-bezier-showable"]], "splinepy.bezier.Bezier.split": [[31, "splinepy-bezier-bezier-split"]], "splinepy.bezier.Bezier.support": [[32, "splinepy-bezier-bezier-support"]], "splinepy.bezier.Bezier.todict": [[33, "splinepy-bezier-bezier-todict"]], "splinepy.bezier.BezierBase": [[34, "splinepy-bezier-bezierbase"]], "splinepy.bezier.BezierBase.basis": [[35, "splinepy-bezier-bezierbase-basis"]], "splinepy.bezier.BezierBase.basis_and_support": [[36, "splinepy-bezier-bezierbase-basis-and-support"]], "splinepy.bezier.BezierBase.basis_derivative": [[37, "splinepy-bezier-bezierbase-basis-derivative"]], "splinepy.bezier.BezierBase.basis_derivative_and_support": [[38, "splinepy-bezier-bezierbase-basis-derivative-and-support"]], "splinepy.bezier.BezierBase.clear": [[39, "splinepy-bezier-bezierbase-clear"]], "splinepy.bezier.BezierBase.compose": [[40, "splinepy-bezier-bezierbase-compose"]], "splinepy.bezier.BezierBase.composition_derivative": [[41, "splinepy-bezier-bezierbase-composition-derivative"]], "splinepy.bezier.BezierBase.copy": [[42, "splinepy-bezier-bezierbase-copy"]], "splinepy.bezier.BezierBase.current_core_properties": [[43, "splinepy-bezier-bezierbase-current-core-properties"]], "splinepy.bezier.BezierBase.derivative": [[44, "splinepy-bezier-bezierbase-derivative"]], "splinepy.bezier.BezierBase.derivative_spline": [[45, "splinepy-bezier-bezierbase-derivative-spline"]], "splinepy.bezier.BezierBase.elevate_degrees": [[46, "splinepy-bezier-bezierbase-elevate-degrees"]], "splinepy.bezier.BezierBase.evaluate": [[47, "splinepy-bezier-bezierbase-evaluate"]], "splinepy.bezier.BezierBase.export": [[48, "splinepy-bezier-bezierbase-export"]], "splinepy.bezier.BezierBase.extract_dim": [[49, "splinepy-bezier-bezierbase-extract-dim"]], "splinepy.bezier.BezierBase.greville_abscissae": [[50, "splinepy-bezier-bezierbase-greville-abscissae"]], "splinepy.bezier.BezierBase.jacobian": [[51, "splinepy-bezier-bezierbase-jacobian"]], "splinepy.bezier.BezierBase.mapper": [[52, "splinepy-bezier-bezierbase-mapper"]], "splinepy.bezier.BezierBase.proximities": [[53, "splinepy-bezier-bezierbase-proximities"]], "splinepy.bezier.BezierBase.reduce_degrees": [[54, "splinepy-bezier-bezierbase-reduce-degrees"]], "splinepy.bezier.BezierBase.sample": [[55, "splinepy-bezier-bezierbase-sample"]], "splinepy.bezier.BezierBase.show": [[56, "splinepy-bezier-bezierbase-show"]], "splinepy.bezier.BezierBase.showable": [[57, "splinepy-bezier-bezierbase-showable"]], "splinepy.bezier.BezierBase.split": [[58, "splinepy-bezier-bezierbase-split"]], "splinepy.bezier.BezierBase.support": [[59, "splinepy-bezier-bezierbase-support"]], "splinepy.bezier.BezierBase.todict": [[60, "splinepy-bezier-bezierbase-todict"]], "splinepy.bspline": [[61, "splinepy-bspline"]], "splinepy.bspline.BSpline": [[62, "splinepy-bspline-bspline"]], "splinepy.bspline.BSpline.approximate_curve": [[63, "splinepy-bspline-bspline-approximate-curve"]], "splinepy.bspline.BSpline.approximate_surface": [[64, "splinepy-bspline-bspline-approximate-surface"]], "splinepy.bspline.BSpline.basis": [[65, "splinepy-bspline-bspline-basis"]], "splinepy.bspline.BSpline.basis_and_support": [[66, "splinepy-bspline-bspline-basis-and-support"]], "splinepy.bspline.BSpline.basis_derivative": [[67, "splinepy-bspline-bspline-basis-derivative"]], "splinepy.bspline.BSpline.basis_derivative_and_support": [[68, "splinepy-bspline-bspline-basis-derivative-and-support"]], "splinepy.bspline.BSpline.bspline": [[69, "splinepy-bspline-bspline-bspline"]], "splinepy.bspline.BSpline.clear": [[70, "splinepy-bspline-bspline-clear"]], "splinepy.bspline.BSpline.copy": [[71, "splinepy-bspline-bspline-copy"]], "splinepy.bspline.BSpline.current_core_properties": [[72, "splinepy-bspline-bspline-current-core-properties"]], "splinepy.bspline.BSpline.derivative": [[73, "splinepy-bspline-bspline-derivative"]], "splinepy.bspline.BSpline.elevate_degrees": [[74, "splinepy-bspline-bspline-elevate-degrees"]], "splinepy.bspline.BSpline.evaluate": [[75, "splinepy-bspline-bspline-evaluate"]], "splinepy.bspline.BSpline.export": [[76, "splinepy-bspline-bspline-export"]], "splinepy.bspline.BSpline.extract_bezier_patches": [[77, "splinepy-bspline-bspline-extract-bezier-patches"]], "splinepy.bspline.BSpline.greville_abscissae": [[78, "splinepy-bspline-bspline-greville-abscissae"]], "splinepy.bspline.BSpline.insert_knots": [[79, "splinepy-bspline-bspline-insert-knots"]], "splinepy.bspline.BSpline.interpolate_curve": [[80, "splinepy-bspline-bspline-interpolate-curve"]], "splinepy.bspline.BSpline.interpolate_surface": [[81, "splinepy-bspline-bspline-interpolate-surface"]], "splinepy.bspline.BSpline.jacobian": [[82, "splinepy-bspline-bspline-jacobian"]], "splinepy.bspline.BSpline.knot_insertion_matrix": [[83, "splinepy-bspline-bspline-knot-insertion-matrix"]], "splinepy.bspline.BSpline.mapper": [[84, "splinepy-bspline-bspline-mapper"]], "splinepy.bspline.BSpline.normalize_knot_vectors": [[85, "splinepy-bspline-bspline-normalize-knot-vectors"]], "splinepy.bspline.BSpline.nurbs": [[86, "splinepy-bspline-bspline-nurbs"]], "splinepy.bspline.BSpline.proximities": [[87, "splinepy-bspline-bspline-proximities"]], "splinepy.bspline.BSpline.reduce_degrees": [[88, "splinepy-bspline-bspline-reduce-degrees"]], "splinepy.bspline.BSpline.remove_knots": [[89, "splinepy-bspline-bspline-remove-knots"]], "splinepy.bspline.BSpline.sample": [[90, "splinepy-bspline-bspline-sample"]], "splinepy.bspline.BSpline.show": [[91, "splinepy-bspline-bspline-show"]], "splinepy.bspline.BSpline.showable": [[92, "splinepy-bspline-bspline-showable"]], "splinepy.bspline.BSpline.support": [[93, "splinepy-bspline-bspline-support"]], "splinepy.bspline.BSpline.todict": [[94, "splinepy-bspline-bspline-todict"]], "splinepy.bspline.BSplineBase": [[95, "splinepy-bspline-bsplinebase"]], "splinepy.bspline.BSplineBase.basis": [[96, "splinepy-bspline-bsplinebase-basis"]], "splinepy.bspline.BSplineBase.basis_and_support": [[97, "splinepy-bspline-bsplinebase-basis-and-support"]], "splinepy.bspline.BSplineBase.basis_derivative": [[98, "splinepy-bspline-bsplinebase-basis-derivative"]], "splinepy.bspline.BSplineBase.basis_derivative_and_support": [[99, "splinepy-bspline-bsplinebase-basis-derivative-and-support"]], "splinepy.bspline.BSplineBase.clear": [[100, "splinepy-bspline-bsplinebase-clear"]], "splinepy.bspline.BSplineBase.copy": [[101, "splinepy-bspline-bsplinebase-copy"]], "splinepy.bspline.BSplineBase.current_core_properties": [[102, "splinepy-bspline-bsplinebase-current-core-properties"]], "splinepy.bspline.BSplineBase.derivative": [[103, "splinepy-bspline-bsplinebase-derivative"]], "splinepy.bspline.BSplineBase.elevate_degrees": [[104, "splinepy-bspline-bsplinebase-elevate-degrees"]], "splinepy.bspline.BSplineBase.evaluate": [[105, "splinepy-bspline-bsplinebase-evaluate"]], "splinepy.bspline.BSplineBase.export": [[106, "splinepy-bspline-bsplinebase-export"]], "splinepy.bspline.BSplineBase.extract_bezier_patches": [[107, "splinepy-bspline-bsplinebase-extract-bezier-patches"]], "splinepy.bspline.BSplineBase.greville_abscissae": [[108, "splinepy-bspline-bsplinebase-greville-abscissae"]], "splinepy.bspline.BSplineBase.insert_knots": [[109, "splinepy-bspline-bsplinebase-insert-knots"]], "splinepy.bspline.BSplineBase.jacobian": [[110, "splinepy-bspline-bsplinebase-jacobian"]], "splinepy.bspline.BSplineBase.knot_insertion_matrix": [[111, "splinepy-bspline-bsplinebase-knot-insertion-matrix"]], "splinepy.bspline.BSplineBase.mapper": [[112, "splinepy-bspline-bsplinebase-mapper"]], "splinepy.bspline.BSplineBase.normalize_knot_vectors": [[113, "splinepy-bspline-bsplinebase-normalize-knot-vectors"]], "splinepy.bspline.BSplineBase.proximities": [[114, "splinepy-bspline-bsplinebase-proximities"]], "splinepy.bspline.BSplineBase.reduce_degrees": [[115, "splinepy-bspline-bsplinebase-reduce-degrees"]], "splinepy.bspline.BSplineBase.remove_knots": [[116, "splinepy-bspline-bsplinebase-remove-knots"]], "splinepy.bspline.BSplineBase.sample": [[117, "splinepy-bspline-bsplinebase-sample"]], "splinepy.bspline.BSplineBase.show": [[118, "splinepy-bspline-bsplinebase-show"]], "splinepy.bspline.BSplineBase.showable": [[119, "splinepy-bspline-bsplinebase-showable"]], "splinepy.bspline.BSplineBase.support": [[120, "splinepy-bspline-bsplinebase-support"]], "splinepy.bspline.BSplineBase.todict": [[121, "splinepy-bspline-bsplinebase-todict"]], "splinepy.helpme": [[122, "splinepy-helpme"]], "splinepy.helpme.check": [[123, "splinepy-helpme-check"]], "splinepy.helpme.check.Checker": [[124, "splinepy-helpme-check-checker"]], "splinepy.helpme.check.Checker.valid_queries": [[125, "splinepy-helpme-check-checker-valid-queries"]], "splinepy.helpme.check.valid_queries": [[126, "splinepy-helpme-check-valid-queries"]], "splinepy.helpme.create": [[127, "splinepy-helpme-create"]], "splinepy.helpme.create.Creator": [[128, "splinepy-helpme-create-creator"]], "splinepy.helpme.create.Creator.determinant_spline": [[129, "splinepy-helpme-create-creator-determinant-spline"]], "splinepy.helpme.create.Creator.extruded": [[130, "splinepy-helpme-create-creator-extruded"]], "splinepy.helpme.create.Creator.parametric_view": [[131, "splinepy-helpme-create-creator-parametric-view"]], "splinepy.helpme.create.Creator.revolved": [[132, "splinepy-helpme-create-creator-revolved"]], "splinepy.helpme.create.arc": [[133, "splinepy-helpme-create-arc"]], "splinepy.helpme.create.box": [[134, "splinepy-helpme-create-box"]], "splinepy.helpme.create.circle": [[135, "splinepy-helpme-create-circle"]], "splinepy.helpme.create.cone": [[136, "splinepy-helpme-create-cone"]], "splinepy.helpme.create.determinant_spline": [[137, "splinepy-helpme-create-determinant-spline"]], "splinepy.helpme.create.disk": [[138, "splinepy-helpme-create-disk"]], "splinepy.helpme.create.extruded": [[139, "splinepy-helpme-create-extruded"]], "splinepy.helpme.create.from_bounds": [[140, "splinepy-helpme-create-from-bounds"]], "splinepy.helpme.create.line": [[141, "splinepy-helpme-create-line"]], "splinepy.helpme.create.parametric_view": [[142, "splinepy-helpme-create-parametric-view"]], "splinepy.helpme.create.plate": [[143, "splinepy-helpme-create-plate"]], "splinepy.helpme.create.pyramid": [[144, "splinepy-helpme-create-pyramid"]], "splinepy.helpme.create.revolved": [[145, "splinepy-helpme-create-revolved"]], "splinepy.helpme.create.sphere": [[146, "splinepy-helpme-create-sphere"]], "splinepy.helpme.create.surface_circle": [[147, "splinepy-helpme-create-surface-circle"]], "splinepy.helpme.create.torus": [[148, "splinepy-helpme-create-torus"]], "splinepy.helpme.extract": [[149, "splinepy-helpme-extract"]], "splinepy.helpme.extract.Extractor": [[150, "splinepy-helpme-extract-extractor"]], "splinepy.helpme.extract.Extractor.beziers": [[151, "splinepy-helpme-extract-extractor-beziers"]], "splinepy.helpme.extract.Extractor.boundaries": [[152, "splinepy-helpme-extract-extractor-boundaries"]], "splinepy.helpme.extract.Extractor.control_edges": [[153, "splinepy-helpme-extract-extractor-control-edges"]], "splinepy.helpme.extract.Extractor.control_faces": [[154, "splinepy-helpme-extract-extractor-control-faces"]], "splinepy.helpme.extract.Extractor.control_mesh": [[155, "splinepy-helpme-extract-extractor-control-mesh"]], "splinepy.helpme.extract.Extractor.control_points": [[156, "splinepy-helpme-extract-extractor-control-points"]], "splinepy.helpme.extract.Extractor.control_volumes": [[157, "splinepy-helpme-extract-extractor-control-volumes"]], "splinepy.helpme.extract.Extractor.edges": [[158, "splinepy-helpme-extract-extractor-edges"]], "splinepy.helpme.extract.Extractor.faces": [[159, "splinepy-helpme-extract-extractor-faces"]], "splinepy.helpme.extract.Extractor.spline": [[160, "splinepy-helpme-extract-extractor-spline"]], "splinepy.helpme.extract.Extractor.volumes": [[161, "splinepy-helpme-extract-extractor-volumes"]], "splinepy.helpme.extract.boundaries": [[162, "splinepy-helpme-extract-boundaries"]], "splinepy.helpme.extract.control_edges": [[163, "splinepy-helpme-extract-control-edges"]], "splinepy.helpme.extract.control_faces": [[164, "splinepy-helpme-extract-control-faces"]], "splinepy.helpme.extract.control_mesh": [[165, "splinepy-helpme-extract-control-mesh"]], "splinepy.helpme.extract.control_points": [[166, "splinepy-helpme-extract-control-points"]], "splinepy.helpme.extract.control_volumes": [[167, "splinepy-helpme-extract-control-volumes"]], "splinepy.helpme.extract.edges": [[168, "splinepy-helpme-extract-edges"]], "splinepy.helpme.extract.faces": [[169, "splinepy-helpme-extract-faces"]], "splinepy.helpme.extract.spline": [[170, "splinepy-helpme-extract-spline"]], "splinepy.helpme.extract.volumes": [[171, "splinepy-helpme-extract-volumes"]], "splinepy.helpme.ffd": [[172, "splinepy-helpme-ffd"]], "splinepy.helpme.ffd.FFD": [[173, "splinepy-helpme-ffd-ffd"]], "splinepy.helpme.ffd.FFD.mesh": [[174, "splinepy-helpme-ffd-ffd-mesh"]], "splinepy.helpme.ffd.FFD.padding": [[175, "splinepy-helpme-ffd-ffd-padding"]], "splinepy.helpme.ffd.FFD.show": [[176, "splinepy-helpme-ffd-ffd-show"]], "splinepy.helpme.ffd.FFD.showable": [[177, "splinepy-helpme-ffd-ffd-showable"]], "splinepy.helpme.ffd.FFD.spline": [[178, "splinepy-helpme-ffd-ffd-spline"]], "splinepy.helpme.integrate": [[179, "splinepy-helpme-integrate"]], "splinepy.helpme.integrate.Integrator": [[180, "splinepy-helpme-integrate-integrator"]], "splinepy.helpme.integrate.Integrator.volume": [[181, "splinepy-helpme-integrate-integrator-volume"]], "splinepy.helpme.integrate.parametric_function": [[182, "splinepy-helpme-integrate-parametric-function"]], "splinepy.helpme.integrate.physical_function": [[183, "splinepy-helpme-integrate-physical-function"]], "splinepy.helpme.integrate.volume": [[184, "splinepy-helpme-integrate-volume"]], "splinepy.helpme.mapper": [[185, "splinepy-helpme-mapper"]], "splinepy.helpme.mapper.Mapper": [[186, "splinepy-helpme-mapper-mapper"]], "splinepy.helpme.mapper.Mapper.basis_function_derivatives": [[187, "splinepy-helpme-mapper-mapper-basis-function-derivatives"]], "splinepy.helpme.mapper.Mapper.basis_gradient_and_support": [[188, "splinepy-helpme-mapper-mapper-basis-gradient-and-support"]], "splinepy.helpme.mapper.Mapper.basis_hessian_and_support": [[189, "splinepy-helpme-mapper-mapper-basis-hessian-and-support"]], "splinepy.helpme.mapper.Mapper.basis_laplacian_and_support": [[190, "splinepy-helpme-mapper-mapper-basis-laplacian-and-support"]], "splinepy.helpme.mapper.Mapper.divergence": [[191, "splinepy-helpme-mapper-mapper-divergence"]], "splinepy.helpme.mapper.Mapper.field_derivatives": [[192, "splinepy-helpme-mapper-mapper-field-derivatives"]], "splinepy.helpme.mapper.Mapper.gradient": [[193, "splinepy-helpme-mapper-mapper-gradient"]], "splinepy.helpme.mapper.Mapper.hessian": [[194, "splinepy-helpme-mapper-mapper-hessian"]], "splinepy.helpme.mapper.Mapper.laplacian": [[195, "splinepy-helpme-mapper-mapper-laplacian"]], "splinepy.helpme.multi_index": [[196, "splinepy-helpme-multi-index"]], "splinepy.helpme.multi_index.MultiIndex": [[197, "splinepy-helpme-multi-index-multiindex"]], "splinepy.helpme.permute": [[198, "splinepy-helpme-permute"]], "splinepy.helpme.permute.parametric_axes": [[199, "splinepy-helpme-permute-parametric-axes"]], "splinepy.helpme.visualize": [[200, "splinepy-helpme-visualize"]], "splinepy.helpme.visualize.MultipatchShowOption": [[201, "splinepy-helpme-visualize-multipatchshowoption"]], "splinepy.helpme.visualize.MultipatchShowOption.clear": [[202, "splinepy-helpme-visualize-multipatchshowoption-clear"]], "splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options": [[203, "splinepy-helpme-visualize-multipatchshowoption-copy-valid-options"]], "splinepy.helpme.visualize.MultipatchShowOption.get": [[204, "splinepy-helpme-visualize-multipatchshowoption-get"]], "splinepy.helpme.visualize.MultipatchShowOption.items": [[205, "splinepy-helpme-visualize-multipatchshowoption-items"]], "splinepy.helpme.visualize.MultipatchShowOption.keys": [[206, "splinepy-helpme-visualize-multipatchshowoption-keys"]], "splinepy.helpme.visualize.MultipatchShowOption.pop": [[207, "splinepy-helpme-visualize-multipatchshowoption-pop"]], "splinepy.helpme.visualize.MultipatchShowOption.update": [[208, "splinepy-helpme-visualize-multipatchshowoption-update"]], "splinepy.helpme.visualize.MultipatchShowOption.valid_keys": [[209, "splinepy-helpme-visualize-multipatchshowoption-valid-keys"]], "splinepy.helpme.visualize.MultipatchShowOption.values": [[210, "splinepy-helpme-visualize-multipatchshowoption-values"]], "splinepy.helpme.visualize.SplineShowOption": [[211, "splinepy-helpme-visualize-splineshowoption"]], "splinepy.helpme.visualize.SplineShowOption.clear": [[212, "splinepy-helpme-visualize-splineshowoption-clear"]], "splinepy.helpme.visualize.SplineShowOption.copy_valid_options": [[213, "splinepy-helpme-visualize-splineshowoption-copy-valid-options"]], "splinepy.helpme.visualize.SplineShowOption.get": [[214, "splinepy-helpme-visualize-splineshowoption-get"]], "splinepy.helpme.visualize.SplineShowOption.items": [[215, "splinepy-helpme-visualize-splineshowoption-items"]], "splinepy.helpme.visualize.SplineShowOption.keys": [[216, "splinepy-helpme-visualize-splineshowoption-keys"]], "splinepy.helpme.visualize.SplineShowOption.pop": [[217, "splinepy-helpme-visualize-splineshowoption-pop"]], "splinepy.helpme.visualize.SplineShowOption.update": [[218, "splinepy-helpme-visualize-splineshowoption-update"]], "splinepy.helpme.visualize.SplineShowOption.valid_keys": [[219, "splinepy-helpme-visualize-splineshowoption-valid-keys"]], "splinepy.helpme.visualize.SplineShowOption.values": [[220, "splinepy-helpme-visualize-splineshowoption-values"]], "splinepy.helpme.visualize.make_showable": [[221, "splinepy-helpme-visualize-make-showable"]], "splinepy.helpme.visualize.show": [[222, "splinepy-helpme-visualize-show"]], "splinepy.io": [[223, "splinepy-io"]], "splinepy.io.cats": [[224, "splinepy-io-cats"]], "splinepy.io.cats.export": [[225, "splinepy-io-cats-export"]], "splinepy.io.cats.load": [[226, "splinepy-io-cats-load"]], "splinepy.io.gismo": [[227, "splinepy-io-gismo"]], "splinepy.io.gismo.export": [[228, "splinepy-io-gismo-export"]], "splinepy.io.gismo.load": [[229, "splinepy-io-gismo-load"]], "splinepy.io.iges": [[230, "splinepy-io-iges"]], "splinepy.io.iges.export": [[231, "splinepy-io-iges-export"]], "splinepy.io.iges.load": [[232, "splinepy-io-iges-load"]], "splinepy.io.ioutils": [[233, "splinepy-io-ioutils"]], "splinepy.io.ioutils.abs_fname": [[234, "splinepy-io-ioutils-abs-fname"]], "splinepy.io.ioutils.dict_to_spline": [[235, "splinepy-io-ioutils-dict-to-spline"]], "splinepy.io.ioutils.expand_tabs": [[236, "splinepy-io-ioutils-expand-tabs"]], "splinepy.io.ioutils.form_lines": [[237, "splinepy-io-ioutils-form-lines"]], "splinepy.io.ioutils.make_meaningful": [[238, "splinepy-io-ioutils-make-meaningful"]], "splinepy.io.ioutils.next_line": [[239, "splinepy-io-ioutils-next-line"]], "splinepy.io.irit": [[240, "splinepy-io-irit"]], "splinepy.io.irit.export": [[241, "splinepy-io-irit-export"]], "splinepy.io.irit.load": [[242, "splinepy-io-irit-load"]], "splinepy.io.json": [[243, "splinepy-io-json"]], "splinepy.io.json.export": [[244, "splinepy-io-json-export"]], "splinepy.io.json.load": [[245, "splinepy-io-json-load"]], "splinepy.io.mfem": [[246, "splinepy-io-mfem"]], "splinepy.io.mfem.dof_mapping": [[247, "splinepy-io-mfem-dof-mapping"]], "splinepy.io.mfem.export": [[248, "splinepy-io-mfem-export"]], "splinepy.io.mfem.export_cartesian": [[249, "splinepy-io-mfem-export-cartesian"]], "splinepy.io.mfem.load": [[250, "splinepy-io-mfem-load"]], "splinepy.io.mfem.read_solution": [[251, "splinepy-io-mfem-read-solution"]], "splinepy.io.npz": [[252, "splinepy-io-npz"]], "splinepy.io.npz.export": [[253, "splinepy-io-npz-export"]], "splinepy.io.npz.load": [[254, "splinepy-io-npz-load"]], "splinepy.io.vtk": [[255, "splinepy-io-vtk"]], "splinepy.io.vtk.export": [[256, "splinepy-io-vtk-export"]], "splinepy.load": [[257, "splinepy-load"]], "splinepy.load.load_solution": [[258, "splinepy-load-load-solution"]], "splinepy.load.load_splines": [[259, "splinepy-load-load-splines"]], "splinepy.microstructure": [[260, "splinepy-microstructure"]], "splinepy.microstructure.microstructure": [[261, "splinepy-microstructure-microstructure"]], "splinepy.microstructure.microstructure.Microstructure": [[262, "splinepy-microstructure-microstructure-microstructure"]], "splinepy.microstructure.microstructure.Microstructure.create": [[263, "splinepy-microstructure-microstructure-microstructure-create"]], "splinepy.microstructure.microstructure.Microstructure.deformation_function": [[264, "splinepy-microstructure-microstructure-microstructure-deformation-function"]], "splinepy.microstructure.microstructure.Microstructure.microtile": [[265, "splinepy-microstructure-microstructure-microstructure-microtile"]], "splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function": [[266, "splinepy-microstructure-microstructure-microstructure-parameter-sensitivity-function"]], "splinepy.microstructure.microstructure.Microstructure.parametrization_function": [[267, "splinepy-microstructure-microstructure-microstructure-parametrization-function"]], "splinepy.microstructure.microstructure.Microstructure.show": [[268, "splinepy-microstructure-microstructure-microstructure-show"]], "splinepy.microstructure.microstructure.Microstructure.tiling": [[269, "splinepy-microstructure-microstructure-microstructure-tiling"]], "splinepy.microstructure.tiles": [[270, "splinepy-microstructure-tiles"]], "splinepy.microstructure.tiles.armadillo": [[271, "splinepy-microstructure-tiles-armadillo"]], "splinepy.microstructure.tiles.armadillo.Armadillo": [[272, "splinepy-microstructure-tiles-armadillo-armadillo"]], "splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives": [[273, "splinepy-microstructure-tiles-armadillo-armadillo-check-param-derivatives"]], "splinepy.microstructure.tiles.armadillo.Armadillo.check_params": [[274, "splinepy-microstructure-tiles-armadillo-armadillo-check-params"]], "splinepy.microstructure.tiles.armadillo.Armadillo.closing_tile": [[275, "splinepy-microstructure-tiles-armadillo-armadillo-closing-tile"]], "splinepy.microstructure.tiles.armadillo.Armadillo.create_tile": [[276, "splinepy-microstructure-tiles-armadillo-armadillo-create-tile"]], "splinepy.microstructure.tiles.chi": [[277, "splinepy-microstructure-tiles-chi"]], "splinepy.microstructure.tiles.chi.Chi": [[278, "splinepy-microstructure-tiles-chi-chi"]], "splinepy.microstructure.tiles.chi.Chi.check_param_derivatives": [[279, "splinepy-microstructure-tiles-chi-chi-check-param-derivatives"]], "splinepy.microstructure.tiles.chi.Chi.check_params": [[280, "splinepy-microstructure-tiles-chi-chi-check-params"]], "splinepy.microstructure.tiles.chi.Chi.create_tile": [[281, "splinepy-microstructure-tiles-chi-chi-create-tile"]], "splinepy.microstructure.tiles.cross_2d": [[282, "splinepy-microstructure-tiles-cross-2d"]], "splinepy.microstructure.tiles.cross_2d.Cross2D": [[283, "splinepy-microstructure-tiles-cross-2d-cross2d"]], "splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives": [[284, "splinepy-microstructure-tiles-cross-2d-cross2d-check-param-derivatives"]], "splinepy.microstructure.tiles.cross_2d.Cross2D.check_params": [[285, "splinepy-microstructure-tiles-cross-2d-cross2d-check-params"]], "splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile": [[286, "splinepy-microstructure-tiles-cross-2d-cross2d-create-tile"]], "splinepy.microstructure.tiles.cross_3d": [[287, "splinepy-microstructure-tiles-cross-3d"]], "splinepy.microstructure.tiles.cross_3d.Cross3D": [[288, "splinepy-microstructure-tiles-cross-3d-cross3d"]], "splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives": [[289, "splinepy-microstructure-tiles-cross-3d-cross3d-check-param-derivatives"]], "splinepy.microstructure.tiles.cross_3d.Cross3D.check_params": [[290, "splinepy-microstructure-tiles-cross-3d-cross3d-check-params"]], "splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile": [[291, "splinepy-microstructure-tiles-cross-3d-cross3d-create-tile"]], "splinepy.microstructure.tiles.cube_void": [[292, "splinepy-microstructure-tiles-cube-void"]], "splinepy.microstructure.tiles.cube_void.CubeVoid": [[293, "splinepy-microstructure-tiles-cube-void-cubevoid"]], "splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives": [[294, "splinepy-microstructure-tiles-cube-void-cubevoid-check-param-derivatives"]], "splinepy.microstructure.tiles.cube_void.CubeVoid.check_params": [[295, "splinepy-microstructure-tiles-cube-void-cubevoid-check-params"]], "splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile": [[296, "splinepy-microstructure-tiles-cube-void-cubevoid-create-tile"]], "splinepy.microstructure.tiles.double_lattice": [[297, "splinepy-microstructure-tiles-double-lattice"]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice": [[298, "splinepy-microstructure-tiles-double-lattice-doublelattice"]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives": [[299, "splinepy-microstructure-tiles-double-lattice-doublelattice-check-param-derivatives"]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params": [[300, "splinepy-microstructure-tiles-double-lattice-doublelattice-check-params"]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile": [[301, "splinepy-microstructure-tiles-double-lattice-doublelattice-create-tile"]], "splinepy.microstructure.tiles.ellips_v_oid": [[302, "splinepy-microstructure-tiles-ellips-v-oid"]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid": [[303, "splinepy-microstructure-tiles-ellips-v-oid-ellipsvoid"]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives": [[304, "splinepy-microstructure-tiles-ellips-v-oid-ellipsvoid-check-param-derivatives"]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params": [[305, "splinepy-microstructure-tiles-ellips-v-oid-ellipsvoid-check-params"]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile": [[306, "splinepy-microstructure-tiles-ellips-v-oid-ellipsvoid-create-tile"]], "splinepy.microstructure.tiles.hollow_cube": [[307, "splinepy-microstructure-tiles-hollow-cube"]], "splinepy.microstructure.tiles.hollow_cube.HollowCube": [[308, "splinepy-microstructure-tiles-hollow-cube-hollowcube"]], "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives": [[309, "splinepy-microstructure-tiles-hollow-cube-hollowcube-check-param-derivatives"]], "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params": [[310, "splinepy-microstructure-tiles-hollow-cube-hollowcube-check-params"]], "splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile": [[311, "splinepy-microstructure-tiles-hollow-cube-hollowcube-create-tile"]], "splinepy.microstructure.tiles.hollow_octagon": [[312, "splinepy-microstructure-tiles-hollow-octagon"]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon": [[313, "splinepy-microstructure-tiles-hollow-octagon-hollowoctagon"]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives": [[314, "splinepy-microstructure-tiles-hollow-octagon-hollowoctagon-check-param-derivatives"]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params": [[315, "splinepy-microstructure-tiles-hollow-octagon-hollowoctagon-check-params"]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile": [[316, "splinepy-microstructure-tiles-hollow-octagon-hollowoctagon-create-tile"]], "splinepy.microstructure.tiles.hollow_octagon_extrude": [[317, "splinepy-microstructure-tiles-hollow-octagon-extrude"]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude": [[318, "splinepy-microstructure-tiles-hollow-octagon-extrude-hollowoctagonextrude"]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives": [[319, "splinepy-microstructure-tiles-hollow-octagon-extrude-hollowoctagonextrude-check-param-derivatives"]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params": [[320, "splinepy-microstructure-tiles-hollow-octagon-extrude-hollowoctagonextrude-check-params"]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile": [[321, "splinepy-microstructure-tiles-hollow-octagon-extrude-hollowoctagonextrude-closing-tile"]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile": [[322, "splinepy-microstructure-tiles-hollow-octagon-extrude-hollowoctagonextrude-create-tile"]], "splinepy.microstructure.tiles.inverse_cross_3d": [[323, "splinepy-microstructure-tiles-inverse-cross-3d"]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D": [[324, "splinepy-microstructure-tiles-inverse-cross-3d-inversecross3d"]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives": [[325, "splinepy-microstructure-tiles-inverse-cross-3d-inversecross3d-check-param-derivatives"]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params": [[326, "splinepy-microstructure-tiles-inverse-cross-3d-inversecross3d-check-params"]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile": [[327, "splinepy-microstructure-tiles-inverse-cross-3d-inversecross3d-create-tile"]], "splinepy.microstructure.tiles.snappy": [[328, "splinepy-microstructure-tiles-snappy"]], "splinepy.microstructure.tiles.snappy.Snappy": [[329, "splinepy-microstructure-tiles-snappy-snappy"]], "splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives": [[330, "splinepy-microstructure-tiles-snappy-snappy-check-param-derivatives"]], "splinepy.microstructure.tiles.snappy.Snappy.check_params": [[331, "splinepy-microstructure-tiles-snappy-snappy-check-params"]], "splinepy.microstructure.tiles.snappy.Snappy.create_tile": [[332, "splinepy-microstructure-tiles-snappy-snappy-create-tile"]], "splinepy.microstructure.tiles.tile_base": [[333, "splinepy-microstructure-tiles-tile-base"]], "splinepy.microstructure.tiles.tile_base.TileBase": [[334, "splinepy-microstructure-tiles-tile-base-tilebase"]], "splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives": [[335, "splinepy-microstructure-tiles-tile-base-tilebase-check-param-derivatives"]], "splinepy.microstructure.tiles.tile_base.TileBase.check_params": [[336, "splinepy-microstructure-tiles-tile-base-tilebase-check-params"]], "splinepy.microstructure.tiles.tile_base.TileBase.dim": [[337, "splinepy-microstructure-tiles-tile-base-tilebase-dim"]], "splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points": [[338, "splinepy-microstructure-tiles-tile-base-tilebase-evaluation-points"]], "splinepy.microstructure.tiles.tile_base.TileBase.para_dim": [[339, "splinepy-microstructure-tiles-tile-base-tilebase-para-dim"]], "splinepy.multipatch": [[340, "splinepy-multipatch"]], "splinepy.multipatch.Multipatch": [[341, "splinepy-multipatch-multipatch"]], "splinepy.multipatch.Multipatch.add_fields": [[342, "splinepy-multipatch-multipatch-add-fields"]], "splinepy.multipatch.Multipatch.boundaries": [[343, "splinepy-multipatch-multipatch-boundaries"]], "splinepy.multipatch.Multipatch.boundaries_from_continuity": [[344, "splinepy-multipatch-multipatch-boundaries-from-continuity"]], "splinepy.multipatch.Multipatch.boundary_from_function": [[345, "splinepy-multipatch-multipatch-boundary-from-function"]], "splinepy.multipatch.Multipatch.boundary_multipatch": [[346, "splinepy-multipatch-multipatch-boundary-multipatch"]], "splinepy.multipatch.Multipatch.boundary_patch_ids": [[347, "splinepy-multipatch-multipatch-boundary-patch-ids"]], "splinepy.multipatch.Multipatch.clear": [[348, "splinepy-multipatch-multipatch-clear"]], "splinepy.multipatch.Multipatch.combine_boundaries": [[349, "splinepy-multipatch-multipatch-combine-boundaries"]], "splinepy.multipatch.Multipatch.control_point_offsets": [[350, "splinepy-multipatch-multipatch-control-point-offsets"]], "splinepy.multipatch.Multipatch.determine_interfaces": [[351, "splinepy-multipatch-multipatch-determine-interfaces"]], "splinepy.multipatch.Multipatch.dim": [[352, "splinepy-multipatch-multipatch-dim"]], "splinepy.multipatch.Multipatch.evaluate": [[353, "splinepy-multipatch-multipatch-evaluate"]], "splinepy.multipatch.Multipatch.extract": [[354, "splinepy-multipatch-multipatch-extract"]], "splinepy.multipatch.Multipatch.fields": [[355, "splinepy-multipatch-multipatch-fields"]], "splinepy.multipatch.Multipatch.interfaces": [[356, "splinepy-multipatch-multipatch-interfaces"]], "splinepy.multipatch.Multipatch.para_dim": [[357, "splinepy-multipatch-multipatch-para-dim"]], "splinepy.multipatch.Multipatch.patches": [[358, "splinepy-multipatch-multipatch-patches"]], "splinepy.multipatch.Multipatch.sample": [[359, "splinepy-multipatch-multipatch-sample"]], "splinepy.multipatch.Multipatch.set_boundary": [[360, "splinepy-multipatch-multipatch-set-boundary"]], "splinepy.multipatch.Multipatch.show": [[361, "splinepy-multipatch-multipatch-show"]], "splinepy.multipatch.Multipatch.show_options": [[362, "splinepy-multipatch-multipatch-show-options"]], "splinepy.multipatch.Multipatch.showable": [[363, "splinepy-multipatch-multipatch-showable"]], "splinepy.multipatch.Multipatch.spline_data": [[364, "splinepy-multipatch-multipatch-spline-data"]], "splinepy.multipatch.Multipatch.sub_multipatch": [[365, "splinepy-multipatch-multipatch-sub-multipatch"]], "splinepy.multipatch.Multipatch.sub_patch_centers": [[366, "splinepy-multipatch-multipatch-sub-patch-centers"]], "splinepy.nurbs": [[367, "splinepy-nurbs"]], "splinepy.nurbs.NURBS": [[368, "splinepy-nurbs-nurbs"]], "splinepy.nurbs.NURBS.basis": [[369, "splinepy-nurbs-nurbs-basis"]], "splinepy.nurbs.NURBS.basis_and_support": [[370, "splinepy-nurbs-nurbs-basis-and-support"]], "splinepy.nurbs.NURBS.basis_derivative": [[371, "splinepy-nurbs-nurbs-basis-derivative"]], "splinepy.nurbs.NURBS.basis_derivative_and_support": [[372, "splinepy-nurbs-nurbs-basis-derivative-and-support"]], "splinepy.nurbs.NURBS.clear": [[373, "splinepy-nurbs-nurbs-clear"]], "splinepy.nurbs.NURBS.copy": [[374, "splinepy-nurbs-nurbs-copy"]], "splinepy.nurbs.NURBS.current_core_properties": [[375, "splinepy-nurbs-nurbs-current-core-properties"]], "splinepy.nurbs.NURBS.derivative": [[376, "splinepy-nurbs-nurbs-derivative"]], "splinepy.nurbs.NURBS.elevate_degrees": [[377, "splinepy-nurbs-nurbs-elevate-degrees"]], "splinepy.nurbs.NURBS.evaluate": [[378, "splinepy-nurbs-nurbs-evaluate"]], "splinepy.nurbs.NURBS.export": [[379, "splinepy-nurbs-nurbs-export"]], "splinepy.nurbs.NURBS.extract_bezier_patches": [[380, "splinepy-nurbs-nurbs-extract-bezier-patches"]], "splinepy.nurbs.NURBS.greville_abscissae": [[381, "splinepy-nurbs-nurbs-greville-abscissae"]], "splinepy.nurbs.NURBS.insert_knots": [[382, "splinepy-nurbs-nurbs-insert-knots"]], "splinepy.nurbs.NURBS.jacobian": [[383, "splinepy-nurbs-nurbs-jacobian"]], "splinepy.nurbs.NURBS.knot_insertion_matrix": [[384, "splinepy-nurbs-nurbs-knot-insertion-matrix"]], "splinepy.nurbs.NURBS.mapper": [[385, "splinepy-nurbs-nurbs-mapper"]], "splinepy.nurbs.NURBS.normalize_knot_vectors": [[386, "splinepy-nurbs-nurbs-normalize-knot-vectors"]], "splinepy.nurbs.NURBS.nurbs": [[387, "splinepy-nurbs-nurbs-nurbs"]], "splinepy.nurbs.NURBS.proximities": [[388, "splinepy-nurbs-nurbs-proximities"]], "splinepy.nurbs.NURBS.reduce_degrees": [[389, "splinepy-nurbs-nurbs-reduce-degrees"]], "splinepy.nurbs.NURBS.remove_knots": [[390, "splinepy-nurbs-nurbs-remove-knots"]], "splinepy.nurbs.NURBS.sample": [[391, "splinepy-nurbs-nurbs-sample"]], "splinepy.nurbs.NURBS.show": [[392, "splinepy-nurbs-nurbs-show"]], "splinepy.nurbs.NURBS.showable": [[393, "splinepy-nurbs-nurbs-showable"]], "splinepy.nurbs.NURBS.support": [[394, "splinepy-nurbs-nurbs-support"]], "splinepy.nurbs.NURBS.todict": [[395, "splinepy-nurbs-nurbs-todict"]], "splinepy.rational_bezier": [[396, "splinepy-rational-bezier"]], "splinepy.rational_bezier.RationalBezier": [[397, "splinepy-rational-bezier-rationalbezier"]], "splinepy.rational_bezier.RationalBezier.basis": [[398, "splinepy-rational-bezier-rationalbezier-basis"]], "splinepy.rational_bezier.RationalBezier.basis_and_support": [[399, "splinepy-rational-bezier-rationalbezier-basis-and-support"]], "splinepy.rational_bezier.RationalBezier.basis_derivative": [[400, "splinepy-rational-bezier-rationalbezier-basis-derivative"]], "splinepy.rational_bezier.RationalBezier.basis_derivative_and_support": [[401, "splinepy-rational-bezier-rationalbezier-basis-derivative-and-support"]], "splinepy.rational_bezier.RationalBezier.clear": [[402, "splinepy-rational-bezier-rationalbezier-clear"]], "splinepy.rational_bezier.RationalBezier.compose": [[403, "splinepy-rational-bezier-rationalbezier-compose"]], "splinepy.rational_bezier.RationalBezier.composition_derivative": [[404, "splinepy-rational-bezier-rationalbezier-composition-derivative"]], "splinepy.rational_bezier.RationalBezier.copy": [[405, "splinepy-rational-bezier-rationalbezier-copy"]], "splinepy.rational_bezier.RationalBezier.current_core_properties": [[406, "splinepy-rational-bezier-rationalbezier-current-core-properties"]], "splinepy.rational_bezier.RationalBezier.derivative": [[407, "splinepy-rational-bezier-rationalbezier-derivative"]], "splinepy.rational_bezier.RationalBezier.derivative_spline": [[408, "splinepy-rational-bezier-rationalbezier-derivative-spline"]], "splinepy.rational_bezier.RationalBezier.elevate_degrees": [[409, "splinepy-rational-bezier-rationalbezier-elevate-degrees"]], "splinepy.rational_bezier.RationalBezier.evaluate": [[410, "splinepy-rational-bezier-rationalbezier-evaluate"]], "splinepy.rational_bezier.RationalBezier.export": [[411, "splinepy-rational-bezier-rationalbezier-export"]], "splinepy.rational_bezier.RationalBezier.extract_dim": [[412, "splinepy-rational-bezier-rationalbezier-extract-dim"]], "splinepy.rational_bezier.RationalBezier.greville_abscissae": [[413, "splinepy-rational-bezier-rationalbezier-greville-abscissae"]], "splinepy.rational_bezier.RationalBezier.jacobian": [[414, "splinepy-rational-bezier-rationalbezier-jacobian"]], "splinepy.rational_bezier.RationalBezier.mapper": [[415, "splinepy-rational-bezier-rationalbezier-mapper"]], "splinepy.rational_bezier.RationalBezier.nurbs": [[416, "splinepy-rational-bezier-rationalbezier-nurbs"]], "splinepy.rational_bezier.RationalBezier.proximities": [[417, "splinepy-rational-bezier-rationalbezier-proximities"]], "splinepy.rational_bezier.RationalBezier.rationalbezier": [[418, "splinepy-rational-bezier-rationalbezier-rationalbezier"]], "splinepy.rational_bezier.RationalBezier.reduce_degrees": [[419, "splinepy-rational-bezier-rationalbezier-reduce-degrees"]], "splinepy.rational_bezier.RationalBezier.sample": [[420, "splinepy-rational-bezier-rationalbezier-sample"]], "splinepy.rational_bezier.RationalBezier.show": [[421, "splinepy-rational-bezier-rationalbezier-show"]], "splinepy.rational_bezier.RationalBezier.showable": [[422, "splinepy-rational-bezier-rationalbezier-showable"]], "splinepy.rational_bezier.RationalBezier.split": [[423, "splinepy-rational-bezier-rationalbezier-split"]], "splinepy.rational_bezier.RationalBezier.support": [[424, "splinepy-rational-bezier-rationalbezier-support"]], "splinepy.rational_bezier.RationalBezier.todict": [[425, "splinepy-rational-bezier-rationalbezier-todict"]], "splinepy.settings": [[426, "splinepy-settings"]], "splinepy.settings.CHECK_BOUNDS": [[427, "splinepy-settings-check-bounds"]], "splinepy.settings.NAME_TO_TYPE": [[428, "splinepy-settings-name-to-type"]], "splinepy.settings.NTHREADS": [[429, "splinepy-settings-nthreads"]], "splinepy.settings.TOLERANCE": [[430, "splinepy-settings-tolerance"]], "splinepy.spline": [[431, "splinepy-spline"]], "splinepy.spline.RequiredProperties": [[432, "splinepy-spline-requiredproperties"]], "splinepy.spline.RequiredProperties.intersection": [[433, "splinepy-spline-requiredproperties-intersection"]], "splinepy.spline.RequiredProperties.of": [[434, "splinepy-spline-requiredproperties-of"]], "splinepy.spline.RequiredProperties.union": [[435, "splinepy-spline-requiredproperties-union"]], "splinepy.spline.Spline": [[436, "splinepy-spline-spline"]], "splinepy.spline.Spline.basis": [[437, "splinepy-spline-spline-basis"]], "splinepy.spline.Spline.basis_and_support": [[438, "splinepy-spline-spline-basis-and-support"]], "splinepy.spline.Spline.basis_derivative": [[439, "splinepy-spline-spline-basis-derivative"]], "splinepy.spline.Spline.basis_derivative_and_support": [[440, "splinepy-spline-spline-basis-derivative-and-support"]], "splinepy.spline.Spline.check": [[441, "splinepy-spline-spline-check"]], "splinepy.spline.Spline.clear": [[442, "splinepy-spline-spline-clear"]], "splinepy.spline.Spline.control_mesh_resolutions": [[443, "splinepy-spline-spline-control-mesh-resolutions"]], "splinepy.spline.Spline.control_point_bounds": [[444, "splinepy-spline-spline-control-point-bounds"]], "splinepy.spline.Spline.control_points": [[445, "splinepy-spline-spline-control-points"]], "splinepy.spline.Spline.copy": [[446, "splinepy-spline-spline-copy"]], "splinepy.spline.Spline.cps": [[447, "splinepy-spline-spline-cps"]], "splinepy.spline.Spline.create": [[448, "splinepy-spline-spline-create"]], "splinepy.spline.Spline.current_core_properties": [[449, "splinepy-spline-spline-current-core-properties"]], "splinepy.spline.Spline.degrees": [[450, "splinepy-spline-spline-degrees"]], "splinepy.spline.Spline.derivative": [[451, "splinepy-spline-spline-derivative"]], "splinepy.spline.Spline.dim": [[452, "splinepy-spline-spline-dim"]], "splinepy.spline.Spline.ds": [[453, "splinepy-spline-spline-ds"]], "splinepy.spline.Spline.elevate_degrees": [[454, "splinepy-spline-spline-elevate-degrees"]], "splinepy.spline.Spline.evaluate": [[455, "splinepy-spline-spline-evaluate"]], "splinepy.spline.Spline.export": [[456, "splinepy-spline-spline-export"]], "splinepy.spline.Spline.extract": [[457, "splinepy-spline-spline-extract"]], "splinepy.spline.Spline.greville_abscissae": [[458, "splinepy-spline-spline-greville-abscissae"]], "splinepy.spline.Spline.has_knot_vectors": [[459, "splinepy-spline-spline-has-knot-vectors"]], "splinepy.spline.Spline.integrate": [[460, "splinepy-spline-spline-integrate"]], "splinepy.spline.Spline.is_rational": [[461, "splinepy-spline-spline-is-rational"]], "splinepy.spline.Spline.jacobian": [[462, "splinepy-spline-spline-jacobian"]], "splinepy.spline.Spline.knot_multiplicities": [[463, "splinepy-spline-spline-knot-multiplicities"]], "splinepy.spline.Spline.knot_vectors": [[464, "splinepy-spline-spline-knot-vectors"]], "splinepy.spline.Spline.kvs": [[465, "splinepy-spline-spline-kvs"]], "splinepy.spline.Spline.mapper": [[466, "splinepy-spline-spline-mapper"]], "splinepy.spline.Spline.multi_index": [[467, "splinepy-spline-spline-multi-index"]], "splinepy.spline.Spline.name": [[468, "splinepy-spline-spline-name"]], "splinepy.spline.Spline.para_dim": [[469, "splinepy-spline-spline-para-dim"]], "splinepy.spline.Spline.parametric_bounds": [[470, "splinepy-spline-spline-parametric-bounds"]], "splinepy.spline.Spline.proximities": [[471, "splinepy-spline-spline-proximities"]], "splinepy.spline.Spline.reduce_degrees": [[472, "splinepy-spline-spline-reduce-degrees"]], "splinepy.spline.Spline.required_properties": [[473, "splinepy-spline-spline-required-properties"]], "splinepy.spline.Spline.sample": [[474, "splinepy-spline-spline-sample"]], "splinepy.spline.Spline.show": [[475, "splinepy-spline-spline-show"]], "splinepy.spline.Spline.show_options": [[476, "splinepy-spline-spline-show-options"]], "splinepy.spline.Spline.showable": [[477, "splinepy-spline-spline-showable"]], "splinepy.spline.Spline.spline_data": [[478, "splinepy-spline-spline-spline-data"]], "splinepy.spline.Spline.support": [[479, "splinepy-spline-spline-support"]], "splinepy.spline.Spline.todict": [[480, "splinepy-spline-spline-todict"]], "splinepy.spline.Spline.unique_knots": [[481, "splinepy-spline-spline-unique-knots"]], "splinepy.spline.Spline.weights": [[482, "splinepy-spline-spline-weights"]], "splinepy.spline.Spline.whatami": [[483, "splinepy-spline-spline-whatami"]], "splinepy.spline.Spline.ws": [[484, "splinepy-spline-spline-ws"]], "splinepy.splinepy_core": [[485, "splinepy-splinepy-core"]], "splinepy.splinepy_core.ControlPointPointers": [[486, "splinepy-splinepy-core-controlpointpointers"]], "splinepy.splinepy_core.ControlPointPointers.dim": [[487, "splinepy-splinepy-core-controlpointpointers-dim"]], "splinepy.splinepy_core.ControlPointPointers.len": [[488, "splinepy-splinepy-core-controlpointpointers-len"]], "splinepy.splinepy_core.ControlPointPointers.set_row": [[489, "splinepy-splinepy-core-controlpointpointers-set-row"]], "splinepy.splinepy_core.ControlPointPointers.set_rows": [[490, "splinepy-splinepy-core-controlpointpointers-set-rows"]], "splinepy.splinepy_core.ControlPointPointers.sync": [[491, "splinepy-splinepy-core-controlpointpointers-sync"]], "splinepy.splinepy_core.ControlPointPointers.sync_rows": [[492, "splinepy-splinepy-core-controlpointpointers-sync-rows"]], "splinepy.splinepy_core.KnotVector": [[493, "splinepy-splinepy-core-knotvector"]], "splinepy.splinepy_core.KnotVector.find_span": [[494, "splinepy-splinepy-core-knotvector-find-span"]], "splinepy.splinepy_core.KnotVector.multiplicities": [[495, "splinepy-splinepy-core-knotvector-multiplicities"]], "splinepy.splinepy_core.KnotVector.numpy": [[496, "splinepy-splinepy-core-knotvector-numpy"]], "splinepy.splinepy_core.KnotVector.scale": [[497, "splinepy-splinepy-core-knotvector-scale"]], "splinepy.splinepy_core.KnotVector.unique": [[498, "splinepy-splinepy-core-knotvector-unique"]], "splinepy.splinepy_core.PyMultipatch": [[499, "splinepy-splinepy-core-pymultipatch"]], "splinepy.splinepy_core.PyMultipatch.add_fields": [[500, "splinepy-splinepy-core-pymultipatch-add-fields"]], "splinepy.splinepy_core.PyMultipatch.boundary_multipatch": [[501, "splinepy-splinepy-core-pymultipatch-boundary-multipatch"]], "splinepy.splinepy_core.PyMultipatch.boundary_patch_ids": [[502, "splinepy-splinepy-core-pymultipatch-boundary-patch-ids"]], "splinepy.splinepy_core.PyMultipatch.clear": [[503, "splinepy-splinepy-core-pymultipatch-clear"]], "splinepy.splinepy_core.PyMultipatch.control_point_offsets": [[504, "splinepy-splinepy-core-pymultipatch-control-point-offsets"]], "splinepy.splinepy_core.PyMultipatch.control_points": [[505, "splinepy-splinepy-core-pymultipatch-control-points"]], "splinepy.splinepy_core.PyMultipatch.dim": [[506, "splinepy-splinepy-core-pymultipatch-dim"]], "splinepy.splinepy_core.PyMultipatch.evaluate": [[507, "splinepy-splinepy-core-pymultipatch-evaluate"]], "splinepy.splinepy_core.PyMultipatch.fields": [[508, "splinepy-splinepy-core-pymultipatch-fields"]], "splinepy.splinepy_core.PyMultipatch.interfaces": [[509, "splinepy-splinepy-core-pymultipatch-interfaces"]], "splinepy.splinepy_core.PyMultipatch.n_default_threads": [[510, "splinepy-splinepy-core-pymultipatch-n-default-threads"]], "splinepy.splinepy_core.PyMultipatch.name": [[511, "splinepy-splinepy-core-pymultipatch-name"]], "splinepy.splinepy_core.PyMultipatch.para_dim": [[512, "splinepy-splinepy-core-pymultipatch-para-dim"]], "splinepy.splinepy_core.PyMultipatch.patches": [[513, "splinepy-splinepy-core-pymultipatch-patches"]], "splinepy.splinepy_core.PyMultipatch.same_parametric_bounds": [[514, "splinepy-splinepy-core-pymultipatch-same-parametric-bounds"]], "splinepy.splinepy_core.PyMultipatch.sample": [[515, "splinepy-splinepy-core-pymultipatch-sample"]], "splinepy.splinepy_core.PyMultipatch.sub_multipatch": [[516, "splinepy-splinepy-core-pymultipatch-sub-multipatch"]], "splinepy.splinepy_core.PyMultipatch.sub_patch_centers": [[517, "splinepy-splinepy-core-pymultipatch-sub-patch-centers"]], "splinepy.splinepy_core.PyMultipatch.tolerance": [[518, "splinepy-splinepy-core-pymultipatch-tolerance"]], "splinepy.splinepy_core.PyMultipatch.whatami": [[519, "splinepy-splinepy-core-pymultipatch-whatami"]], "splinepy.splinepy_core.PySpline": [[520, "splinepy-splinepy-core-pyspline"]], "splinepy.splinepy_core.PySpline.basis": [[521, "splinepy-splinepy-core-pyspline-basis"]], "splinepy.splinepy_core.PySpline.basis_and_support": [[522, "splinepy-splinepy-core-pyspline-basis-and-support"]], "splinepy.splinepy_core.PySpline.basis_derivative": [[523, "splinepy-splinepy-core-pyspline-basis-derivative"]], "splinepy.splinepy_core.PySpline.basis_derivative_and_support": [[524, "splinepy-splinepy-core-pyspline-basis-derivative-and-support"]], "splinepy.splinepy_core.PySpline.control_mesh_resolutions": [[525, "splinepy-splinepy-core-pyspline-control-mesh-resolutions"]], "splinepy.splinepy_core.PySpline.current_core_properties": [[526, "splinepy-splinepy-core-pyspline-current-core-properties"]], "splinepy.splinepy_core.PySpline.derivative": [[527, "splinepy-splinepy-core-pyspline-derivative"]], "splinepy.splinepy_core.PySpline.dim": [[528, "splinepy-splinepy-core-pyspline-dim"]], "splinepy.splinepy_core.PySpline.elevate_degrees": [[529, "splinepy-splinepy-core-pyspline-elevate-degrees"]], "splinepy.splinepy_core.PySpline.evaluate": [[530, "splinepy-splinepy-core-pyspline-evaluate"]], "splinepy.splinepy_core.PySpline.has_knot_vectors": [[531, "splinepy-splinepy-core-pyspline-has-knot-vectors"]], "splinepy.splinepy_core.PySpline.is_rational": [[532, "splinepy-splinepy-core-pyspline-is-rational"]], "splinepy.splinepy_core.PySpline.jacobian": [[533, "splinepy-splinepy-core-pyspline-jacobian"]], "splinepy.splinepy_core.PySpline.name": [[534, "splinepy-splinepy-core-pyspline-name"]], "splinepy.splinepy_core.PySpline.para_dim": [[535, "splinepy-splinepy-core-pyspline-para-dim"]], "splinepy.splinepy_core.PySpline.parametric_bounds": [[536, "splinepy-splinepy-core-pyspline-parametric-bounds"]], "splinepy.splinepy_core.PySpline.proximities": [[537, "splinepy-splinepy-core-pyspline-proximities"]], "splinepy.splinepy_core.PySpline.reduce_degrees": [[538, "splinepy-splinepy-core-pyspline-reduce-degrees"]], "splinepy.splinepy_core.PySpline.sample": [[539, "splinepy-splinepy-core-pyspline-sample"]], "splinepy.splinepy_core.PySpline.support": [[540, "splinepy-splinepy-core-pyspline-support"]], "splinepy.splinepy_core.PySpline.whatami": [[541, "splinepy-splinepy-core-pyspline-whatami"]], "splinepy.splinepy_core.WeightPointers": [[542, "splinepy-splinepy-core-weightpointers"]], "splinepy.splinepy_core.WeightPointers.dim": [[543, "splinepy-splinepy-core-weightpointers-dim"]], "splinepy.splinepy_core.WeightPointers.len": [[544, "splinepy-splinepy-core-weightpointers-len"]], "splinepy.splinepy_core.WeightPointers.set_row": [[545, "splinepy-splinepy-core-weightpointers-set-row"]], "splinepy.splinepy_core.WeightPointers.set_rows": [[546, "splinepy-splinepy-core-weightpointers-set-rows"]], "splinepy.splinepy_core.WeightPointers.sync": [[547, "splinepy-splinepy-core-weightpointers-sync"]], "splinepy.splinepy_core.WeightPointers.sync_rows": [[548, "splinepy-splinepy-core-weightpointers-sync-rows"]], "splinepy.splinepy_core.add": [[549, "splinepy-splinepy-core-add"]], "splinepy.splinepy_core.annul_core": [[550, "splinepy-splinepy-core-annul-core"]], "splinepy.splinepy_core.approximate_curve": [[551, "splinepy-splinepy-core-approximate-curve"]], "splinepy.splinepy_core.approximate_surface": [[552, "splinepy-splinepy-core-approximate-surface"]], "splinepy.splinepy_core.bezier_extraction_matrix": [[553, "splinepy-splinepy-core-bezier-extraction-matrix"]], "splinepy.splinepy_core.boundaries_from_continuity": [[554, "splinepy-splinepy-core-boundaries-from-continuity"]], "splinepy.splinepy_core.boundary_centers": [[555, "splinepy-splinepy-core-boundary-centers"]], "splinepy.splinepy_core.build_type": [[556, "splinepy-splinepy-core-build-type"]], "splinepy.splinepy_core.compose": [[557, "splinepy-splinepy-core-compose"]], "splinepy.splinepy_core.compose_sensitivities": [[558, "splinepy-splinepy-core-compose-sensitivities"]], "splinepy.splinepy_core.composition_derivative": [[559, "splinepy-splinepy-core-composition-derivative"]], "splinepy.splinepy_core.core_id": [[560, "splinepy-splinepy-core-core-id"]], "splinepy.splinepy_core.core_ref_count": [[561, "splinepy-splinepy-core-core-ref-count"]], "splinepy.splinepy_core.derivative_spline": [[562, "splinepy-splinepy-core-derivative-spline"]], "splinepy.splinepy_core.export_iges": [[563, "splinepy-splinepy-core-export-iges"]], "splinepy.splinepy_core.extract_all_boundary_splines": [[564, "splinepy-splinepy-core-extract-all-boundary-splines"]], "splinepy.splinepy_core.extract_bezier_patches": [[565, "splinepy-splinepy-core-extract-bezier-patches"]], "splinepy.splinepy_core.extract_boundaries": [[566, "splinepy-splinepy-core-extract-boundaries"]], "splinepy.splinepy_core.extract_dim": [[567, "splinepy-splinepy-core-extract-dim"]], "splinepy.splinepy_core.global_knot_insertion_matrix": [[568, "splinepy-splinepy-core-global-knot-insertion-matrix"]], "splinepy.splinepy_core.has_core": [[569, "splinepy-splinepy-core-has-core"]], "splinepy.splinepy_core.insert_knots": [[570, "splinepy-splinepy-core-insert-knots"]], "splinepy.splinepy_core.interfaces_from_boundary_centers": [[571, "splinepy-splinepy-core-interfaces-from-boundary-centers"]], "splinepy.splinepy_core.interpolate_curve": [[572, "splinepy-splinepy-core-interpolate-curve"]], "splinepy.splinepy_core.interpolate_surface": [[573, "splinepy-splinepy-core-interpolate-surface"]], "splinepy.splinepy_core.is_minimal": [[574, "splinepy-splinepy-core-is-minimal"]], "splinepy.splinepy_core.knot_insertion_matrix": [[575, "splinepy-splinepy-core-knot-insertion-matrix"]], "splinepy.splinepy_core.multiply": [[576, "splinepy-splinepy-core-multiply"]], "splinepy.splinepy_core.null_spline": [[577, "splinepy-splinepy-core-null-spline"]], "splinepy.splinepy_core.orientations": [[578, "splinepy-splinepy-core-orientations"]], "splinepy.splinepy_core.read_iges": [[579, "splinepy-splinepy-core-read-iges"]], "splinepy.splinepy_core.remove_knots": [[580, "splinepy-splinepy-core-remove-knots"]], "splinepy.splinepy_core.same_spline_with_knot_vectors": [[581, "splinepy-splinepy-core-same-spline-with-knot-vectors"]], "splinepy.splinepy_core.split": [[582, "splinepy-splinepy-core-split"]], "splinepy.to_derived": [[583, "splinepy-to-derived"]], "splinepy.utils": [[584, "splinepy-utils"]], "splinepy.utils.data": [[585, "splinepy-utils-data"]], "splinepy.utils.data.MultipatchData": [[586, "splinepy-utils-data-multipatchdata"]], "splinepy.utils.data.MultipatchData.as_arrow": [[587, "splinepy-utils-data-multipatchdata-as-arrow"]], "splinepy.utils.data.MultipatchData.as_scalar": [[588, "splinepy-utils-data-multipatchdata-as-scalar"]], "splinepy.utils.data.MultipatchData.clear": [[589, "splinepy-utils-data-multipatchdata-clear"]], "splinepy.utils.data.MultipatchData.get": [[590, "splinepy-utils-data-multipatchdata-get"]], "splinepy.utils.data.MultipatchData.items": [[591, "splinepy-utils-data-multipatchdata-items"]], "splinepy.utils.data.MultipatchData.keys": [[592, "splinepy-utils-data-multipatchdata-keys"]], "splinepy.utils.data.MultipatchData.pop": [[593, "splinepy-utils-data-multipatchdata-pop"]], "splinepy.utils.data.MultipatchData.values": [[594, "splinepy-utils-data-multipatchdata-values"]], "splinepy.utils.data.PhysicalSpaceArray": [[595, "splinepy-utils-data-physicalspacearray"]], "splinepy.utils.data.PhysicalSpaceArray.all": [[596, "splinepy-utils-data-physicalspacearray-all"]], "splinepy.utils.data.PhysicalSpaceArray.any": [[597, "splinepy-utils-data-physicalspacearray-any"]], "splinepy.utils.data.PhysicalSpaceArray.argmax": [[598, "splinepy-utils-data-physicalspacearray-argmax"]], "splinepy.utils.data.PhysicalSpaceArray.argmin": [[599, "splinepy-utils-data-physicalspacearray-argmin"]], "splinepy.utils.data.PhysicalSpaceArray.argpartition": [[600, "splinepy-utils-data-physicalspacearray-argpartition"]], "splinepy.utils.data.PhysicalSpaceArray.argsort": [[601, "splinepy-utils-data-physicalspacearray-argsort"]], "splinepy.utils.data.PhysicalSpaceArray.astype": [[602, "splinepy-utils-data-physicalspacearray-astype"]], "splinepy.utils.data.PhysicalSpaceArray.byteswap": [[603, "splinepy-utils-data-physicalspacearray-byteswap"]], "splinepy.utils.data.PhysicalSpaceArray.choose": [[604, "splinepy-utils-data-physicalspacearray-choose"]], "splinepy.utils.data.PhysicalSpaceArray.clip": [[605, "splinepy-utils-data-physicalspacearray-clip"]], "splinepy.utils.data.PhysicalSpaceArray.compress": [[606, "splinepy-utils-data-physicalspacearray-compress"]], "splinepy.utils.data.PhysicalSpaceArray.conj": [[607, "splinepy-utils-data-physicalspacearray-conj"]], "splinepy.utils.data.PhysicalSpaceArray.conjugate": [[608, "splinepy-utils-data-physicalspacearray-conjugate"]], "splinepy.utils.data.PhysicalSpaceArray.copy": [[609, "splinepy-utils-data-physicalspacearray-copy"]], "splinepy.utils.data.PhysicalSpaceArray.cumprod": [[610, "splinepy-utils-data-physicalspacearray-cumprod"]], "splinepy.utils.data.PhysicalSpaceArray.cumsum": [[611, "splinepy-utils-data-physicalspacearray-cumsum"]], "splinepy.utils.data.PhysicalSpaceArray.diagonal": [[612, "splinepy-utils-data-physicalspacearray-diagonal"]], "splinepy.utils.data.PhysicalSpaceArray.dot": [[613, "splinepy-utils-data-physicalspacearray-dot"]], "splinepy.utils.data.PhysicalSpaceArray.dump": [[614, "splinepy-utils-data-physicalspacearray-dump"]], "splinepy.utils.data.PhysicalSpaceArray.dumps": [[615, "splinepy-utils-data-physicalspacearray-dumps"]], "splinepy.utils.data.PhysicalSpaceArray.fill": [[616, "splinepy-utils-data-physicalspacearray-fill"]], "splinepy.utils.data.PhysicalSpaceArray.flatten": [[617, "splinepy-utils-data-physicalspacearray-flatten"]], "splinepy.utils.data.PhysicalSpaceArray.full_row_indices": [[618, "splinepy-utils-data-physicalspacearray-full-row-indices"]], "splinepy.utils.data.PhysicalSpaceArray.getfield": [[619, "splinepy-utils-data-physicalspacearray-getfield"]], "splinepy.utils.data.PhysicalSpaceArray.item": [[620, "splinepy-utils-data-physicalspacearray-item"]], "splinepy.utils.data.PhysicalSpaceArray.itemset": [[621, "splinepy-utils-data-physicalspacearray-itemset"]], "splinepy.utils.data.PhysicalSpaceArray.max": [[622, "splinepy-utils-data-physicalspacearray-max"]], "splinepy.utils.data.PhysicalSpaceArray.mean": [[623, "splinepy-utils-data-physicalspacearray-mean"]], "splinepy.utils.data.PhysicalSpaceArray.min": [[624, "splinepy-utils-data-physicalspacearray-min"]], "splinepy.utils.data.PhysicalSpaceArray.newbyteorder": [[625, "splinepy-utils-data-physicalspacearray-newbyteorder"]], "splinepy.utils.data.PhysicalSpaceArray.nonzero": [[626, "splinepy-utils-data-physicalspacearray-nonzero"]], "splinepy.utils.data.PhysicalSpaceArray.partition": [[627, "splinepy-utils-data-physicalspacearray-partition"]], "splinepy.utils.data.PhysicalSpaceArray.prod": [[628, "splinepy-utils-data-physicalspacearray-prod"]], "splinepy.utils.data.PhysicalSpaceArray.ptp": [[629, "splinepy-utils-data-physicalspacearray-ptp"]], "splinepy.utils.data.PhysicalSpaceArray.put": [[630, "splinepy-utils-data-physicalspacearray-put"]], "splinepy.utils.data.PhysicalSpaceArray.ravel": [[631, "splinepy-utils-data-physicalspacearray-ravel"]], "splinepy.utils.data.PhysicalSpaceArray.repeat": [[632, "splinepy-utils-data-physicalspacearray-repeat"]], "splinepy.utils.data.PhysicalSpaceArray.reshape": [[633, "splinepy-utils-data-physicalspacearray-reshape"]], "splinepy.utils.data.PhysicalSpaceArray.resize": [[634, "splinepy-utils-data-physicalspacearray-resize"]], "splinepy.utils.data.PhysicalSpaceArray.round": [[635, "splinepy-utils-data-physicalspacearray-round"]], "splinepy.utils.data.PhysicalSpaceArray.row_indices": [[636, "splinepy-utils-data-physicalspacearray-row-indices"]], "splinepy.utils.data.PhysicalSpaceArray.searchsorted": [[637, "splinepy-utils-data-physicalspacearray-searchsorted"]], "splinepy.utils.data.PhysicalSpaceArray.setfield": [[638, "splinepy-utils-data-physicalspacearray-setfield"]], "splinepy.utils.data.PhysicalSpaceArray.setflags": [[639, "splinepy-utils-data-physicalspacearray-setflags"]], "splinepy.utils.data.PhysicalSpaceArray.sort": [[640, "splinepy-utils-data-physicalspacearray-sort"]], "splinepy.utils.data.PhysicalSpaceArray.squeeze": [[641, "splinepy-utils-data-physicalspacearray-squeeze"]], "splinepy.utils.data.PhysicalSpaceArray.std": [[642, "splinepy-utils-data-physicalspacearray-std"]], "splinepy.utils.data.PhysicalSpaceArray.sum": [[643, "splinepy-utils-data-physicalspacearray-sum"]], "splinepy.utils.data.PhysicalSpaceArray.swapaxes": [[644, "splinepy-utils-data-physicalspacearray-swapaxes"]], "splinepy.utils.data.PhysicalSpaceArray.take": [[645, "splinepy-utils-data-physicalspacearray-take"]], "splinepy.utils.data.PhysicalSpaceArray.tobytes": [[646, "splinepy-utils-data-physicalspacearray-tobytes"]], "splinepy.utils.data.PhysicalSpaceArray.tofile": [[647, "splinepy-utils-data-physicalspacearray-tofile"]], "splinepy.utils.data.PhysicalSpaceArray.tolist": [[648, "splinepy-utils-data-physicalspacearray-tolist"]], "splinepy.utils.data.PhysicalSpaceArray.tostring": [[649, "splinepy-utils-data-physicalspacearray-tostring"]], "splinepy.utils.data.PhysicalSpaceArray.trace": [[650, "splinepy-utils-data-physicalspacearray-trace"]], "splinepy.utils.data.PhysicalSpaceArray.transpose": [[651, "splinepy-utils-data-physicalspacearray-transpose"]], "splinepy.utils.data.PhysicalSpaceArray.var": [[652, "splinepy-utils-data-physicalspacearray-var"]], "splinepy.utils.data.PhysicalSpaceArray.view": [[653, "splinepy-utils-data-physicalspacearray-view"]], "splinepy.utils.data.SplineData": [[654, "splinepy-utils-data-splinedata"]], "splinepy.utils.data.SplineData.as_arrow": [[655, "splinepy-utils-data-splinedata-as-arrow"]], "splinepy.utils.data.SplineData.as_scalar": [[656, "splinepy-utils-data-splinedata-as-scalar"]], "splinepy.utils.data.SplineData.clear": [[657, "splinepy-utils-data-splinedata-clear"]], "splinepy.utils.data.SplineData.get": [[658, "splinepy-utils-data-splinedata-get"]], "splinepy.utils.data.SplineData.items": [[659, "splinepy-utils-data-splinedata-items"]], "splinepy.utils.data.SplineData.keys": [[660, "splinepy-utils-data-splinedata-keys"]], "splinepy.utils.data.SplineData.pop": [[661, "splinepy-utils-data-splinedata-pop"]], "splinepy.utils.data.SplineData.values": [[662, "splinepy-utils-data-splinedata-values"]], "splinepy.utils.data.SplineDataAdaptor": [[663, "splinepy-utils-data-splinedataadaptor"]], "splinepy.utils.data.SplineDataAdaptor.arrow_data_only": [[664, "splinepy-utils-data-splinedataadaptor-arrow-data-only"]], "splinepy.utils.data.SplineDataAdaptor.as_vertex_data": [[665, "splinepy-utils-data-splinedataadaptor-as-vertex-data"]], "splinepy.utils.data.SplineDataAdaptor.data": [[666, "splinepy-utils-data-splinedataadaptor-data"]], "splinepy.utils.data.SplineDataAdaptor.function": [[667, "splinepy-utils-data-splinedataadaptor-function"]], "splinepy.utils.data.SplineDataAdaptor.has_evaluate": [[668, "splinepy-utils-data-splinedataadaptor-has-evaluate"]], "splinepy.utils.data.SplineDataAdaptor.has_function": [[669, "splinepy-utils-data-splinedataadaptor-has-function"]], "splinepy.utils.data.SplineDataAdaptor.has_locations": [[670, "splinepy-utils-data-splinedataadaptor-has-locations"]], "splinepy.utils.data.SplineDataAdaptor.is_spline": [[671, "splinepy-utils-data-splinedataadaptor-is-spline"]], "splinepy.utils.data.SplineDataAdaptor.locations": [[672, "splinepy-utils-data-splinedataadaptor-locations"]], "splinepy.utils.data.SplineDataAdaptor.parametric_bounds": [[673, "splinepy-utils-data-splinedataadaptor-parametric-bounds"]], "splinepy.utils.data.cartesian_product": [[674, "splinepy-utils-data-cartesian-product"]], "splinepy.utils.data.enforce_contiguous": [[675, "splinepy-utils-data-enforce-contiguous"]], "splinepy.utils.data.enforce_contiguous_values": [[676, "splinepy-utils-data-enforce-contiguous-values"]], "splinepy.utils.data.make_matrix": [[677, "splinepy-utils-data-make-matrix"]], "splinepy.utils.data.uniform_query": [[678, "splinepy-utils-data-uniform-query"]], "splinepy.utils.log": [[679, "splinepy-utils-log"]], "splinepy.utils.log.configure": [[680, "splinepy-utils-log-configure"]], "splinepy.utils.log.debug": [[681, "splinepy-utils-log-debug"]], "splinepy.utils.log.info": [[682, "splinepy-utils-log-info"]], "splinepy.utils.log.prepend_log": [[683, "splinepy-utils-log-prepend-log"]], "splinepy.utils.log.warning": [[684, "splinepy-utils-log-warning"]], "API References": [[685, "api-references"]], "Overview": [[685, "overview"]], "Python API": [[685, "python-api"]], "Install guide": [[686, "install-guide"]], "Feature Summary": [[686, "feature-summary"]], "Splines": [[686, "splines"]], "Multipatch": [[686, "multipatch"]], "IO": [[686, "io"]], "Dependencies": [[686, "dependencies"]], "Table of Contents": [[686, "table-of-contents"]], "Splines?": [[686, null]], "Library": [[686, null]], "Introduction to Splines": [[688, "introduction-to-splines"]], "A general introduction to splines": [[688, "a-general-introduction-to-splines"]], "In which situations are splines helpful?": [[688, "in-which-situations-are-splines-helpful"]], "An introduction to different spline types": [[688, "an-introduction-to-different-spline-types"]], "B\u00e9zier splines": [[688, "bezier-splines"]], "Examples": [[688, "examples"]], "Properties of B\u00e9zier curves": [[688, "properties-of-bezier-curves"]], "Drawbacks of B\u00e9zier curves": [[688, "drawbacks-of-bezier-curves"]], "Rational B\u00e9zier splines": [[688, "rational-bezier-splines"]], "B-splines": [[688, "b-splines"]], "Properties of B-spline basis functions:": [[688, "properties-of-b-spline-basis-functions"]], "Non-uniform rational B-splines (NURBS)": [[688, "non-uniform-rational-b-splines-nurbs"]], "Further reading": [[688, "further-reading"]], "Creating and Plotting Splines": [[688, "creating-and-plotting-splines"]], "Visualizing Splines": [[688, "visualizing-splines"]], "Creating a basic NURBS": [[688, "creating-a-basic-nurbs"]], "Creation of common geometries": [[688, "creation-of-common-geometries"]], "Expanding into 3D": [[688, "expanding-into-3d"]]}, "indexentries": {"module": [[1, "module-splinepy"], [2, "module-splinepy.bezier"], [61, "module-splinepy.bspline"], [122, "module-splinepy.helpme"], [123, "module-splinepy.helpme.check"], [127, "module-splinepy.helpme.create"], [149, "module-splinepy.helpme.extract"], [172, "module-splinepy.helpme.ffd"], [179, "module-splinepy.helpme.integrate"], [185, "module-splinepy.helpme.mapper"], [196, "module-splinepy.helpme.multi_index"], [198, "module-splinepy.helpme.permute"], [200, "module-splinepy.helpme.visualize"], [223, "module-splinepy.io"], [224, "module-splinepy.io.cats"], [227, "module-splinepy.io.gismo"], [230, "module-splinepy.io.iges"], [233, "module-splinepy.io.ioutils"], [240, "module-splinepy.io.irit"], [243, "module-splinepy.io.json"], [246, "module-splinepy.io.mfem"], [252, "module-splinepy.io.npz"], [255, "module-splinepy.io.vtk"], [257, "module-splinepy.load"], [260, "module-splinepy.microstructure"], [261, "module-splinepy.microstructure.microstructure"], [270, "module-splinepy.microstructure.tiles"], [271, "module-splinepy.microstructure.tiles.armadillo"], [277, "module-splinepy.microstructure.tiles.chi"], [282, "module-splinepy.microstructure.tiles.cross_2d"], [287, "module-splinepy.microstructure.tiles.cross_3d"], [292, "module-splinepy.microstructure.tiles.cube_void"], [297, "module-splinepy.microstructure.tiles.double_lattice"], [302, "module-splinepy.microstructure.tiles.ellips_v_oid"], [307, "module-splinepy.microstructure.tiles.hollow_cube"], [312, "module-splinepy.microstructure.tiles.hollow_octagon"], [317, "module-splinepy.microstructure.tiles.hollow_octagon_extrude"], [323, "module-splinepy.microstructure.tiles.inverse_cross_3d"], [328, "module-splinepy.microstructure.tiles.snappy"], [333, "module-splinepy.microstructure.tiles.tile_base"], [340, "module-splinepy.multipatch"], [367, "module-splinepy.nurbs"], [396, "module-splinepy.rational_bezier"], [426, "module-splinepy.settings"], [431, "module-splinepy.spline"], [485, "module-splinepy.splinepy_core"], [584, "module-splinepy.utils"], [585, "module-splinepy.utils.data"], [679, "module-splinepy.utils.log"]], "splinepy": [[1, "module-splinepy"]], "splinepy.bezier": [[2, "module-splinepy.bezier"]], "bezier (class in splinepy.bezier)": [[3, "splinepy.bezier.Bezier"]], "basis() (splinepy.bezier.bezier method)": [[4, "splinepy.bezier.Bezier.basis"]], "basis_and_support() (splinepy.bezier.bezier method)": [[5, "splinepy.bezier.Bezier.basis_and_support"]], "basis_derivative() (splinepy.bezier.bezier method)": [[6, "splinepy.bezier.Bezier.basis_derivative"]], "basis_derivative_and_support() (splinepy.bezier.bezier method)": [[7, "splinepy.bezier.Bezier.basis_derivative_and_support"]], "bezier (splinepy.bezier.bezier property)": [[8, "splinepy.bezier.Bezier.bezier"]], "bspline (splinepy.bezier.bezier property)": [[9, "splinepy.bezier.Bezier.bspline"]], "clear() (splinepy.bezier.bezier method)": [[10, "splinepy.bezier.Bezier.clear"]], "compose() (splinepy.bezier.bezier method)": [[11, "splinepy.bezier.Bezier.compose"]], "composition_derivative() (splinepy.bezier.bezier method)": [[12, "splinepy.bezier.Bezier.composition_derivative"]], "copy() (splinepy.bezier.bezier method)": [[13, "splinepy.bezier.Bezier.copy"]], "current_core_properties() (splinepy.bezier.bezier method)": [[14, "splinepy.bezier.Bezier.current_core_properties"]], "derivative() (splinepy.bezier.bezier method)": [[15, "splinepy.bezier.Bezier.derivative"]], "derivative_spline() (splinepy.bezier.bezier method)": [[16, "splinepy.bezier.Bezier.derivative_spline"]], "elevate_degrees() (splinepy.bezier.bezier method)": [[17, "splinepy.bezier.Bezier.elevate_degrees"]], "evaluate() (splinepy.bezier.bezier method)": [[18, "splinepy.bezier.Bezier.evaluate"]], "export() (splinepy.bezier.bezier method)": [[19, "splinepy.bezier.Bezier.export"]], "extract_dim() (splinepy.bezier.bezier method)": [[20, "splinepy.bezier.Bezier.extract_dim"]], "greville_abscissae() (splinepy.bezier.bezier method)": [[21, "splinepy.bezier.Bezier.greville_abscissae"]], "jacobian() (splinepy.bezier.bezier method)": [[22, "splinepy.bezier.Bezier.jacobian"]], "mapper() (splinepy.bezier.bezier method)": [[23, "splinepy.bezier.Bezier.mapper"]], "nurbs (splinepy.bezier.bezier property)": [[24, "splinepy.bezier.Bezier.nurbs"]], "proximities() (splinepy.bezier.bezier method)": [[25, "splinepy.bezier.Bezier.proximities"]], "rationalbezier (splinepy.bezier.bezier property)": [[26, "splinepy.bezier.Bezier.rationalbezier"]], "reduce_degrees() (splinepy.bezier.bezier method)": [[27, "splinepy.bezier.Bezier.reduce_degrees"]], "sample() (splinepy.bezier.bezier method)": [[28, "splinepy.bezier.Bezier.sample"]], "show() (splinepy.bezier.bezier method)": [[29, "splinepy.bezier.Bezier.show"]], "showable() (splinepy.bezier.bezier method)": [[30, "splinepy.bezier.Bezier.showable"]], "split() (splinepy.bezier.bezier method)": [[31, "splinepy.bezier.Bezier.split"]], "support() (splinepy.bezier.bezier method)": [[32, "splinepy.bezier.Bezier.support"]], "todict() (splinepy.bezier.bezier method)": [[33, "splinepy.bezier.Bezier.todict"]], "bezierbase (class in splinepy.bezier)": [[34, "splinepy.bezier.BezierBase"]], "basis() (splinepy.bezier.bezierbase method)": [[35, "splinepy.bezier.BezierBase.basis"]], "basis_and_support() (splinepy.bezier.bezierbase method)": [[36, "splinepy.bezier.BezierBase.basis_and_support"]], "basis_derivative() (splinepy.bezier.bezierbase method)": [[37, "splinepy.bezier.BezierBase.basis_derivative"]], "basis_derivative_and_support() (splinepy.bezier.bezierbase method)": [[38, "splinepy.bezier.BezierBase.basis_derivative_and_support"]], "clear() (splinepy.bezier.bezierbase method)": [[39, "splinepy.bezier.BezierBase.clear"]], "compose() (splinepy.bezier.bezierbase method)": [[40, "splinepy.bezier.BezierBase.compose"]], "composition_derivative() (splinepy.bezier.bezierbase method)": [[41, "splinepy.bezier.BezierBase.composition_derivative"]], "copy() (splinepy.bezier.bezierbase method)": [[42, "splinepy.bezier.BezierBase.copy"]], "current_core_properties() (splinepy.bezier.bezierbase method)": [[43, "splinepy.bezier.BezierBase.current_core_properties"]], "derivative() (splinepy.bezier.bezierbase method)": [[44, "splinepy.bezier.BezierBase.derivative"]], "derivative_spline() (splinepy.bezier.bezierbase method)": [[45, "splinepy.bezier.BezierBase.derivative_spline"]], "elevate_degrees() (splinepy.bezier.bezierbase method)": [[46, "splinepy.bezier.BezierBase.elevate_degrees"]], "evaluate() (splinepy.bezier.bezierbase method)": [[47, "splinepy.bezier.BezierBase.evaluate"]], "export() (splinepy.bezier.bezierbase method)": [[48, "splinepy.bezier.BezierBase.export"]], "extract_dim() (splinepy.bezier.bezierbase method)": [[49, "splinepy.bezier.BezierBase.extract_dim"]], "greville_abscissae() (splinepy.bezier.bezierbase method)": [[50, "splinepy.bezier.BezierBase.greville_abscissae"]], "jacobian() (splinepy.bezier.bezierbase method)": [[51, "splinepy.bezier.BezierBase.jacobian"]], "mapper() (splinepy.bezier.bezierbase method)": [[52, "splinepy.bezier.BezierBase.mapper"]], "proximities() (splinepy.bezier.bezierbase method)": [[53, "splinepy.bezier.BezierBase.proximities"]], "reduce_degrees() (splinepy.bezier.bezierbase method)": [[54, "splinepy.bezier.BezierBase.reduce_degrees"]], "sample() (splinepy.bezier.bezierbase method)": [[55, "splinepy.bezier.BezierBase.sample"]], "show() (splinepy.bezier.bezierbase method)": [[56, "splinepy.bezier.BezierBase.show"]], "showable() (splinepy.bezier.bezierbase method)": [[57, "splinepy.bezier.BezierBase.showable"]], "split() (splinepy.bezier.bezierbase method)": [[58, "splinepy.bezier.BezierBase.split"]], "support() (splinepy.bezier.bezierbase method)": [[59, "splinepy.bezier.BezierBase.support"]], "todict() (splinepy.bezier.bezierbase method)": [[60, "splinepy.bezier.BezierBase.todict"]], "splinepy.bspline": [[61, "module-splinepy.bspline"]], "bspline (class in splinepy.bspline)": [[62, "splinepy.bspline.BSpline"]], "approximate_curve() (splinepy.bspline.bspline class method)": [[63, "splinepy.bspline.BSpline.approximate_curve"]], "approximate_surface() (splinepy.bspline.bspline class method)": [[64, "splinepy.bspline.BSpline.approximate_surface"]], "basis() (splinepy.bspline.bspline method)": [[65, "splinepy.bspline.BSpline.basis"]], "basis_and_support() (splinepy.bspline.bspline method)": [[66, "splinepy.bspline.BSpline.basis_and_support"]], "basis_derivative() (splinepy.bspline.bspline method)": [[67, "splinepy.bspline.BSpline.basis_derivative"]], "basis_derivative_and_support() (splinepy.bspline.bspline method)": [[68, "splinepy.bspline.BSpline.basis_derivative_and_support"]], "bspline (splinepy.bspline.bspline property)": [[69, "splinepy.bspline.BSpline.bspline"]], "clear() (splinepy.bspline.bspline method)": [[70, "splinepy.bspline.BSpline.clear"]], "copy() (splinepy.bspline.bspline method)": [[71, "splinepy.bspline.BSpline.copy"]], "current_core_properties() (splinepy.bspline.bspline method)": [[72, "splinepy.bspline.BSpline.current_core_properties"]], "derivative() (splinepy.bspline.bspline method)": [[73, "splinepy.bspline.BSpline.derivative"]], "elevate_degrees() (splinepy.bspline.bspline method)": [[74, "splinepy.bspline.BSpline.elevate_degrees"]], "evaluate() (splinepy.bspline.bspline method)": [[75, "splinepy.bspline.BSpline.evaluate"]], "export() (splinepy.bspline.bspline method)": [[76, "splinepy.bspline.BSpline.export"]], "extract_bezier_patches() (splinepy.bspline.bspline method)": [[77, "splinepy.bspline.BSpline.extract_bezier_patches"]], "greville_abscissae() (splinepy.bspline.bspline method)": [[78, "splinepy.bspline.BSpline.greville_abscissae"]], "insert_knots() (splinepy.bspline.bspline method)": [[79, "splinepy.bspline.BSpline.insert_knots"]], "interpolate_curve() (splinepy.bspline.bspline class method)": [[80, "splinepy.bspline.BSpline.interpolate_curve"]], "interpolate_surface() (splinepy.bspline.bspline class method)": [[81, "splinepy.bspline.BSpline.interpolate_surface"]], "jacobian() (splinepy.bspline.bspline method)": [[82, "splinepy.bspline.BSpline.jacobian"]], "knot_insertion_matrix() (splinepy.bspline.bspline method)": [[83, "splinepy.bspline.BSpline.knot_insertion_matrix"]], "mapper() (splinepy.bspline.bspline method)": [[84, "splinepy.bspline.BSpline.mapper"]], "normalize_knot_vectors() (splinepy.bspline.bspline method)": [[85, "splinepy.bspline.BSpline.normalize_knot_vectors"]], "nurbs (splinepy.bspline.bspline property)": [[86, "splinepy.bspline.BSpline.nurbs"]], "proximities() (splinepy.bspline.bspline method)": [[87, "splinepy.bspline.BSpline.proximities"]], "reduce_degrees() (splinepy.bspline.bspline method)": [[88, "splinepy.bspline.BSpline.reduce_degrees"]], "remove_knots() (splinepy.bspline.bspline method)": [[89, "splinepy.bspline.BSpline.remove_knots"]], "sample() (splinepy.bspline.bspline method)": [[90, "splinepy.bspline.BSpline.sample"]], "show() (splinepy.bspline.bspline method)": [[91, "splinepy.bspline.BSpline.show"]], "showable() (splinepy.bspline.bspline method)": [[92, "splinepy.bspline.BSpline.showable"]], "support() (splinepy.bspline.bspline method)": [[93, "splinepy.bspline.BSpline.support"]], "todict() (splinepy.bspline.bspline method)": [[94, "splinepy.bspline.BSpline.todict"]], "bsplinebase (class in splinepy.bspline)": [[95, "splinepy.bspline.BSplineBase"]], "basis() (splinepy.bspline.bsplinebase method)": [[96, "splinepy.bspline.BSplineBase.basis"]], "basis_and_support() (splinepy.bspline.bsplinebase method)": [[97, "splinepy.bspline.BSplineBase.basis_and_support"]], "basis_derivative() (splinepy.bspline.bsplinebase method)": [[98, "splinepy.bspline.BSplineBase.basis_derivative"]], "basis_derivative_and_support() (splinepy.bspline.bsplinebase method)": [[99, "splinepy.bspline.BSplineBase.basis_derivative_and_support"]], "clear() (splinepy.bspline.bsplinebase method)": [[100, "splinepy.bspline.BSplineBase.clear"]], "copy() (splinepy.bspline.bsplinebase method)": [[101, "splinepy.bspline.BSplineBase.copy"]], "current_core_properties() (splinepy.bspline.bsplinebase method)": [[102, "splinepy.bspline.BSplineBase.current_core_properties"]], "derivative() (splinepy.bspline.bsplinebase method)": [[103, "splinepy.bspline.BSplineBase.derivative"]], "elevate_degrees() (splinepy.bspline.bsplinebase method)": [[104, "splinepy.bspline.BSplineBase.elevate_degrees"]], "evaluate() (splinepy.bspline.bsplinebase method)": [[105, "splinepy.bspline.BSplineBase.evaluate"]], "export() (splinepy.bspline.bsplinebase method)": [[106, "splinepy.bspline.BSplineBase.export"]], "extract_bezier_patches() (splinepy.bspline.bsplinebase method)": [[107, "splinepy.bspline.BSplineBase.extract_bezier_patches"]], "greville_abscissae() (splinepy.bspline.bsplinebase method)": [[108, "splinepy.bspline.BSplineBase.greville_abscissae"]], "insert_knots() (splinepy.bspline.bsplinebase method)": [[109, "splinepy.bspline.BSplineBase.insert_knots"]], "jacobian() (splinepy.bspline.bsplinebase method)": [[110, "splinepy.bspline.BSplineBase.jacobian"]], "knot_insertion_matrix() (splinepy.bspline.bsplinebase method)": [[111, "splinepy.bspline.BSplineBase.knot_insertion_matrix"]], "mapper() (splinepy.bspline.bsplinebase method)": [[112, "splinepy.bspline.BSplineBase.mapper"]], "normalize_knot_vectors() (splinepy.bspline.bsplinebase method)": [[113, "splinepy.bspline.BSplineBase.normalize_knot_vectors"]], "proximities() (splinepy.bspline.bsplinebase method)": [[114, "splinepy.bspline.BSplineBase.proximities"]], "reduce_degrees() (splinepy.bspline.bsplinebase method)": [[115, "splinepy.bspline.BSplineBase.reduce_degrees"]], "remove_knots() (splinepy.bspline.bsplinebase method)": [[116, "splinepy.bspline.BSplineBase.remove_knots"]], "sample() (splinepy.bspline.bsplinebase method)": [[117, "splinepy.bspline.BSplineBase.sample"]], "show() (splinepy.bspline.bsplinebase method)": [[118, "splinepy.bspline.BSplineBase.show"]], "showable() (splinepy.bspline.bsplinebase method)": [[119, "splinepy.bspline.BSplineBase.showable"]], "support() (splinepy.bspline.bsplinebase method)": [[120, "splinepy.bspline.BSplineBase.support"]], "todict() (splinepy.bspline.bsplinebase method)": [[121, "splinepy.bspline.BSplineBase.todict"]], "splinepy.helpme": [[122, "module-splinepy.helpme"]], "splinepy.helpme.check": [[123, "module-splinepy.helpme.check"]], "checker (class in splinepy.helpme.check)": [[124, "splinepy.helpme.check.Checker"]], "valid_queries() (splinepy.helpme.check.checker method)": [[125, "splinepy.helpme.check.Checker.valid_queries"]], "valid_queries() (in module splinepy.helpme.check)": [[126, "splinepy.helpme.check.valid_queries"]], "splinepy.helpme.create": [[127, "module-splinepy.helpme.create"]], "creator (class in splinepy.helpme.create)": [[128, "splinepy.helpme.create.Creator"]], "determinant_spline() (splinepy.helpme.create.creator method)": [[129, "splinepy.helpme.create.Creator.determinant_spline"]], "extruded() (splinepy.helpme.create.creator method)": [[130, "splinepy.helpme.create.Creator.extruded"]], "parametric_view() (splinepy.helpme.create.creator method)": [[131, "splinepy.helpme.create.Creator.parametric_view"]], "revolved() (splinepy.helpme.create.creator method)": [[132, "splinepy.helpme.create.Creator.revolved"]], "arc() (in module splinepy.helpme.create)": [[133, "splinepy.helpme.create.arc"]], "box() (in module splinepy.helpme.create)": [[134, "splinepy.helpme.create.box"]], "circle() (in module splinepy.helpme.create)": [[135, "splinepy.helpme.create.circle"]], "cone() (in module splinepy.helpme.create)": [[136, "splinepy.helpme.create.cone"]], "determinant_spline() (in module splinepy.helpme.create)": [[137, "splinepy.helpme.create.determinant_spline"]], "disk() (in module splinepy.helpme.create)": [[138, "splinepy.helpme.create.disk"]], "extruded() (in module splinepy.helpme.create)": [[139, "splinepy.helpme.create.extruded"]], "from_bounds() (in module splinepy.helpme.create)": [[140, "splinepy.helpme.create.from_bounds"]], "line() (in module splinepy.helpme.create)": [[141, "splinepy.helpme.create.line"]], "parametric_view() (in module splinepy.helpme.create)": [[142, "splinepy.helpme.create.parametric_view"]], "plate() (in module splinepy.helpme.create)": [[143, "splinepy.helpme.create.plate"]], "pyramid() (in module splinepy.helpme.create)": [[144, "splinepy.helpme.create.pyramid"]], "revolved() (in module splinepy.helpme.create)": [[145, "splinepy.helpme.create.revolved"]], "sphere() (in module splinepy.helpme.create)": [[146, "splinepy.helpme.create.sphere"]], "surface_circle() (in module splinepy.helpme.create)": [[147, "splinepy.helpme.create.surface_circle"]], "torus() (in module splinepy.helpme.create)": [[148, "splinepy.helpme.create.torus"]], "splinepy.helpme.extract": [[149, "module-splinepy.helpme.extract"]], "extractor (class in splinepy.helpme.extract)": [[150, "splinepy.helpme.extract.Extractor"]], "beziers() (splinepy.helpme.extract.extractor method)": [[151, "splinepy.helpme.extract.Extractor.beziers"]], "boundaries() (splinepy.helpme.extract.extractor method)": [[152, "splinepy.helpme.extract.Extractor.boundaries"]], "control_edges() (splinepy.helpme.extract.extractor method)": [[153, "splinepy.helpme.extract.Extractor.control_edges"]], "control_faces() (splinepy.helpme.extract.extractor method)": [[154, "splinepy.helpme.extract.Extractor.control_faces"]], "control_mesh() (splinepy.helpme.extract.extractor method)": [[155, "splinepy.helpme.extract.Extractor.control_mesh"]], "control_points() (splinepy.helpme.extract.extractor method)": [[156, "splinepy.helpme.extract.Extractor.control_points"]], "control_volumes() (splinepy.helpme.extract.extractor method)": [[157, "splinepy.helpme.extract.Extractor.control_volumes"]], "edges() (splinepy.helpme.extract.extractor method)": [[158, "splinepy.helpme.extract.Extractor.edges"]], "faces() (splinepy.helpme.extract.extractor method)": [[159, "splinepy.helpme.extract.Extractor.faces"]], "spline() (splinepy.helpme.extract.extractor method)": [[160, "splinepy.helpme.extract.Extractor.spline"]], "volumes() (splinepy.helpme.extract.extractor method)": [[161, "splinepy.helpme.extract.Extractor.volumes"]], "boundaries() (in module splinepy.helpme.extract)": [[162, "splinepy.helpme.extract.boundaries"]], "control_edges() (in module splinepy.helpme.extract)": [[163, "splinepy.helpme.extract.control_edges"]], "control_faces() (in module splinepy.helpme.extract)": [[164, "splinepy.helpme.extract.control_faces"]], "control_mesh() (in module splinepy.helpme.extract)": [[165, "splinepy.helpme.extract.control_mesh"]], "control_points() (in module splinepy.helpme.extract)": [[166, "splinepy.helpme.extract.control_points"]], "control_volumes() (in module splinepy.helpme.extract)": [[167, "splinepy.helpme.extract.control_volumes"]], "edges() (in module splinepy.helpme.extract)": [[168, "splinepy.helpme.extract.edges"]], "faces() (in module splinepy.helpme.extract)": [[169, "splinepy.helpme.extract.faces"]], "spline() (in module splinepy.helpme.extract)": [[170, "splinepy.helpme.extract.spline"]], "volumes() (in module splinepy.helpme.extract)": [[171, "splinepy.helpme.extract.volumes"]], "splinepy.helpme.ffd": [[172, "module-splinepy.helpme.ffd"]], "ffd (class in splinepy.helpme.ffd)": [[173, "splinepy.helpme.ffd.FFD"]], "mesh (splinepy.helpme.ffd.ffd property)": [[174, "splinepy.helpme.ffd.FFD.mesh"]], "padding (splinepy.helpme.ffd.ffd property)": [[175, "splinepy.helpme.ffd.FFD.padding"]], "show() (splinepy.helpme.ffd.ffd method)": [[176, "splinepy.helpme.ffd.FFD.show"]], "showable() (splinepy.helpme.ffd.ffd method)": [[177, "splinepy.helpme.ffd.FFD.showable"]], "spline (splinepy.helpme.ffd.ffd property)": [[178, "splinepy.helpme.ffd.FFD.spline"]], "splinepy.helpme.integrate": [[179, "module-splinepy.helpme.integrate"]], "integrator (class in splinepy.helpme.integrate)": [[180, "splinepy.helpme.integrate.Integrator"]], "volume() (splinepy.helpme.integrate.integrator method)": [[181, "splinepy.helpme.integrate.Integrator.volume"]], "parametric_function() (in module splinepy.helpme.integrate)": [[182, "splinepy.helpme.integrate.parametric_function"]], "physical_function() (in module splinepy.helpme.integrate)": [[183, "splinepy.helpme.integrate.physical_function"]], "volume() (in module splinepy.helpme.integrate)": [[184, "splinepy.helpme.integrate.volume"]], "splinepy.helpme.mapper": [[185, "module-splinepy.helpme.mapper"]], "mapper (class in splinepy.helpme.mapper)": [[186, "splinepy.helpme.mapper.Mapper"]], "basis_function_derivatives() (splinepy.helpme.mapper.mapper method)": [[187, "splinepy.helpme.mapper.Mapper.basis_function_derivatives"]], "basis_gradient_and_support() (splinepy.helpme.mapper.mapper method)": [[188, "splinepy.helpme.mapper.Mapper.basis_gradient_and_support"]], "basis_hessian_and_support() (splinepy.helpme.mapper.mapper method)": [[189, "splinepy.helpme.mapper.Mapper.basis_hessian_and_support"]], "basis_laplacian_and_support() (splinepy.helpme.mapper.mapper method)": [[190, "splinepy.helpme.mapper.Mapper.basis_laplacian_and_support"]], "divergence() (splinepy.helpme.mapper.mapper method)": [[191, "splinepy.helpme.mapper.Mapper.divergence"]], "field_derivatives() (splinepy.helpme.mapper.mapper method)": [[192, "splinepy.helpme.mapper.Mapper.field_derivatives"]], "gradient() (splinepy.helpme.mapper.mapper method)": [[193, "splinepy.helpme.mapper.Mapper.gradient"]], "hessian() (splinepy.helpme.mapper.mapper method)": [[194, "splinepy.helpme.mapper.Mapper.hessian"]], "laplacian() (splinepy.helpme.mapper.mapper method)": [[195, "splinepy.helpme.mapper.Mapper.laplacian"]], "splinepy.helpme.multi_index": [[196, "module-splinepy.helpme.multi_index"]], "multiindex (class in splinepy.helpme.multi_index)": [[197, "splinepy.helpme.multi_index.MultiIndex"]], "splinepy.helpme.permute": [[198, "module-splinepy.helpme.permute"]], "parametric_axes() (in module splinepy.helpme.permute)": [[199, "splinepy.helpme.permute.parametric_axes"]], "splinepy.helpme.visualize": [[200, "module-splinepy.helpme.visualize"]], "multipatchshowoption (class in splinepy.helpme.visualize)": [[201, "splinepy.helpme.visualize.MultipatchShowOption"]], "clear() (splinepy.helpme.visualize.multipatchshowoption method)": [[202, "splinepy.helpme.visualize.MultipatchShowOption.clear"]], "copy_valid_options() (splinepy.helpme.visualize.multipatchshowoption method)": [[203, "splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options"]], "get() (splinepy.helpme.visualize.multipatchshowoption method)": [[204, "splinepy.helpme.visualize.MultipatchShowOption.get"]], "items() (splinepy.helpme.visualize.multipatchshowoption method)": [[205, "splinepy.helpme.visualize.MultipatchShowOption.items"]], "keys() (splinepy.helpme.visualize.multipatchshowoption method)": [[206, "splinepy.helpme.visualize.MultipatchShowOption.keys"]], "pop() (splinepy.helpme.visualize.multipatchshowoption method)": [[207, "splinepy.helpme.visualize.MultipatchShowOption.pop"]], "update() (splinepy.helpme.visualize.multipatchshowoption method)": [[208, "splinepy.helpme.visualize.MultipatchShowOption.update"]], "valid_keys() (splinepy.helpme.visualize.multipatchshowoption method)": [[209, "splinepy.helpme.visualize.MultipatchShowOption.valid_keys"]], "values() (splinepy.helpme.visualize.multipatchshowoption method)": [[210, "splinepy.helpme.visualize.MultipatchShowOption.values"]], "splineshowoption (class in splinepy.helpme.visualize)": [[211, "splinepy.helpme.visualize.SplineShowOption"]], "clear() (splinepy.helpme.visualize.splineshowoption method)": [[212, "splinepy.helpme.visualize.SplineShowOption.clear"]], "copy_valid_options() (splinepy.helpme.visualize.splineshowoption method)": [[213, "splinepy.helpme.visualize.SplineShowOption.copy_valid_options"]], "get() (splinepy.helpme.visualize.splineshowoption method)": [[214, "splinepy.helpme.visualize.SplineShowOption.get"]], "items() (splinepy.helpme.visualize.splineshowoption method)": [[215, "splinepy.helpme.visualize.SplineShowOption.items"]], "keys() (splinepy.helpme.visualize.splineshowoption method)": [[216, "splinepy.helpme.visualize.SplineShowOption.keys"]], "pop() (splinepy.helpme.visualize.splineshowoption method)": [[217, "splinepy.helpme.visualize.SplineShowOption.pop"]], "update() (splinepy.helpme.visualize.splineshowoption method)": [[218, "splinepy.helpme.visualize.SplineShowOption.update"]], "valid_keys() (splinepy.helpme.visualize.splineshowoption method)": [[219, "splinepy.helpme.visualize.SplineShowOption.valid_keys"]], "values() (splinepy.helpme.visualize.splineshowoption method)": [[220, "splinepy.helpme.visualize.SplineShowOption.values"]], "make_showable() (in module splinepy.helpme.visualize)": [[221, "splinepy.helpme.visualize.make_showable"]], "show() (in module splinepy.helpme.visualize)": [[222, "splinepy.helpme.visualize.show"]], "splinepy.io": [[223, "module-splinepy.io"]], "splinepy.io.cats": [[224, "module-splinepy.io.cats"]], "export() (in module splinepy.io.cats)": [[225, "splinepy.io.cats.export"]], "load() (in module splinepy.io.cats)": [[226, "splinepy.io.cats.load"]], "splinepy.io.gismo": [[227, "module-splinepy.io.gismo"]], "export() (in module splinepy.io.gismo)": [[228, "splinepy.io.gismo.export"]], "load() (in module splinepy.io.gismo)": [[229, "splinepy.io.gismo.load"]], "splinepy.io.iges": [[230, "module-splinepy.io.iges"]], "export() (in module splinepy.io.iges)": [[231, "splinepy.io.iges.export"]], "load() (in module splinepy.io.iges)": [[232, "splinepy.io.iges.load"]], "splinepy.io.ioutils": [[233, "module-splinepy.io.ioutils"]], "abs_fname() (in module splinepy.io.ioutils)": [[234, "splinepy.io.ioutils.abs_fname"]], "dict_to_spline() (in module splinepy.io.ioutils)": [[235, "splinepy.io.ioutils.dict_to_spline"]], "expand_tabs() (in module splinepy.io.ioutils)": [[236, "splinepy.io.ioutils.expand_tabs"]], "form_lines() (in module splinepy.io.ioutils)": [[237, "splinepy.io.ioutils.form_lines"]], "make_meaningful() (in module splinepy.io.ioutils)": [[238, "splinepy.io.ioutils.make_meaningful"]], "next_line() (in module splinepy.io.ioutils)": [[239, "splinepy.io.ioutils.next_line"]], "splinepy.io.irit": [[240, "module-splinepy.io.irit"]], "export() (in module splinepy.io.irit)": [[241, "splinepy.io.irit.export"]], "load() (in module splinepy.io.irit)": [[242, "splinepy.io.irit.load"]], "splinepy.io.json": [[243, "module-splinepy.io.json"]], "export() (in module splinepy.io.json)": [[244, "splinepy.io.json.export"]], "load() (in module splinepy.io.json)": [[245, "splinepy.io.json.load"]], "splinepy.io.mfem": [[246, "module-splinepy.io.mfem"]], "dof_mapping() (in module splinepy.io.mfem)": [[247, "splinepy.io.mfem.dof_mapping"]], "export() (in module splinepy.io.mfem)": [[248, "splinepy.io.mfem.export"]], "export_cartesian() (in module splinepy.io.mfem)": [[249, "splinepy.io.mfem.export_cartesian"]], "load() (in module splinepy.io.mfem)": [[250, "splinepy.io.mfem.load"]], "read_solution() (in module splinepy.io.mfem)": [[251, "splinepy.io.mfem.read_solution"]], "splinepy.io.npz": [[252, "module-splinepy.io.npz"]], "export() (in module splinepy.io.npz)": [[253, "splinepy.io.npz.export"]], "load() (in module splinepy.io.npz)": [[254, "splinepy.io.npz.load"]], "splinepy.io.vtk": [[255, "module-splinepy.io.vtk"]], "export() (in module splinepy.io.vtk)": [[256, "splinepy.io.vtk.export"]], "splinepy.load": [[257, "module-splinepy.load"]], "load_solution() (in module splinepy.load)": [[258, "splinepy.load.load_solution"]], "load_splines() (in module splinepy.load)": [[259, "splinepy.load.load_splines"]], "splinepy.microstructure": [[260, "module-splinepy.microstructure"]], "splinepy.microstructure.microstructure": [[261, "module-splinepy.microstructure.microstructure"]], "microstructure (class in splinepy.microstructure.microstructure)": [[262, "splinepy.microstructure.microstructure.Microstructure"]], "create() (splinepy.microstructure.microstructure.microstructure method)": [[263, "splinepy.microstructure.microstructure.Microstructure.create"]], "deformation_function (splinepy.microstructure.microstructure.microstructure property)": [[264, "splinepy.microstructure.microstructure.Microstructure.deformation_function"]], "microtile (splinepy.microstructure.microstructure.microstructure property)": [[265, "splinepy.microstructure.microstructure.Microstructure.microtile"]], "parameter_sensitivity_function (splinepy.microstructure.microstructure.microstructure property)": [[266, "splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function"]], "parametrization_function (splinepy.microstructure.microstructure.microstructure property)": [[267, "splinepy.microstructure.microstructure.Microstructure.parametrization_function"]], "show() (splinepy.microstructure.microstructure.microstructure method)": [[268, "splinepy.microstructure.microstructure.Microstructure.show"]], "tiling (splinepy.microstructure.microstructure.microstructure property)": [[269, "splinepy.microstructure.microstructure.Microstructure.tiling"]], "splinepy.microstructure.tiles": [[270, "module-splinepy.microstructure.tiles"]], "splinepy.microstructure.tiles.armadillo": [[271, "module-splinepy.microstructure.tiles.armadillo"]], "armadillo (class in splinepy.microstructure.tiles.armadillo)": [[272, "splinepy.microstructure.tiles.armadillo.Armadillo"]], "check_param_derivatives() (splinepy.microstructure.tiles.armadillo.armadillo method)": [[273, "splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.armadillo.armadillo method)": [[274, "splinepy.microstructure.tiles.armadillo.Armadillo.check_params"]], "closing_tile() (splinepy.microstructure.tiles.armadillo.armadillo method)": [[275, "splinepy.microstructure.tiles.armadillo.Armadillo.closing_tile"]], "create_tile() (splinepy.microstructure.tiles.armadillo.armadillo method)": [[276, "splinepy.microstructure.tiles.armadillo.Armadillo.create_tile"]], "splinepy.microstructure.tiles.chi": [[277, "module-splinepy.microstructure.tiles.chi"]], "chi (class in splinepy.microstructure.tiles.chi)": [[278, "splinepy.microstructure.tiles.chi.Chi"]], "check_param_derivatives() (splinepy.microstructure.tiles.chi.chi method)": [[279, "splinepy.microstructure.tiles.chi.Chi.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.chi.chi method)": [[280, "splinepy.microstructure.tiles.chi.Chi.check_params"]], "create_tile() (splinepy.microstructure.tiles.chi.chi method)": [[281, "splinepy.microstructure.tiles.chi.Chi.create_tile"]], "splinepy.microstructure.tiles.cross_2d": [[282, "module-splinepy.microstructure.tiles.cross_2d"]], "cross2d (class in splinepy.microstructure.tiles.cross_2d)": [[283, "splinepy.microstructure.tiles.cross_2d.Cross2D"]], "check_param_derivatives() (splinepy.microstructure.tiles.cross_2d.cross2d method)": [[284, "splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.cross_2d.cross2d method)": [[285, "splinepy.microstructure.tiles.cross_2d.Cross2D.check_params"]], "create_tile() (splinepy.microstructure.tiles.cross_2d.cross2d method)": [[286, "splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile"]], "splinepy.microstructure.tiles.cross_3d": [[287, "module-splinepy.microstructure.tiles.cross_3d"]], "cross3d (class in splinepy.microstructure.tiles.cross_3d)": [[288, "splinepy.microstructure.tiles.cross_3d.Cross3D"]], "check_param_derivatives() (splinepy.microstructure.tiles.cross_3d.cross3d method)": [[289, "splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.cross_3d.cross3d method)": [[290, "splinepy.microstructure.tiles.cross_3d.Cross3D.check_params"]], "create_tile() (splinepy.microstructure.tiles.cross_3d.cross3d method)": [[291, "splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile"]], "splinepy.microstructure.tiles.cube_void": [[292, "module-splinepy.microstructure.tiles.cube_void"]], "cubevoid (class in splinepy.microstructure.tiles.cube_void)": [[293, "splinepy.microstructure.tiles.cube_void.CubeVoid"]], "check_param_derivatives() (splinepy.microstructure.tiles.cube_void.cubevoid method)": [[294, "splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.cube_void.cubevoid method)": [[295, "splinepy.microstructure.tiles.cube_void.CubeVoid.check_params"]], "create_tile() (splinepy.microstructure.tiles.cube_void.cubevoid method)": [[296, "splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile"]], "splinepy.microstructure.tiles.double_lattice": [[297, "module-splinepy.microstructure.tiles.double_lattice"]], "doublelattice (class in splinepy.microstructure.tiles.double_lattice)": [[298, "splinepy.microstructure.tiles.double_lattice.DoubleLattice"]], "check_param_derivatives() (splinepy.microstructure.tiles.double_lattice.doublelattice method)": [[299, "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.double_lattice.doublelattice method)": [[300, "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params"]], "create_tile() (splinepy.microstructure.tiles.double_lattice.doublelattice method)": [[301, "splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile"]], "splinepy.microstructure.tiles.ellips_v_oid": [[302, "module-splinepy.microstructure.tiles.ellips_v_oid"]], "ellipsvoid (class in splinepy.microstructure.tiles.ellips_v_oid)": [[303, "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid"]], "check_param_derivatives() (splinepy.microstructure.tiles.ellips_v_oid.ellipsvoid method)": [[304, "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.ellips_v_oid.ellipsvoid method)": [[305, "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params"]], "create_tile() (splinepy.microstructure.tiles.ellips_v_oid.ellipsvoid method)": [[306, "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile"]], "splinepy.microstructure.tiles.hollow_cube": [[307, "module-splinepy.microstructure.tiles.hollow_cube"]], "hollowcube (class in splinepy.microstructure.tiles.hollow_cube)": [[308, "splinepy.microstructure.tiles.hollow_cube.HollowCube"]], "check_param_derivatives() (splinepy.microstructure.tiles.hollow_cube.hollowcube method)": [[309, "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.hollow_cube.hollowcube method)": [[310, "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params"]], "create_tile() (splinepy.microstructure.tiles.hollow_cube.hollowcube method)": [[311, "splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile"]], "splinepy.microstructure.tiles.hollow_octagon": [[312, "module-splinepy.microstructure.tiles.hollow_octagon"]], "hollowoctagon (class in splinepy.microstructure.tiles.hollow_octagon)": [[313, "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon"]], "check_param_derivatives() (splinepy.microstructure.tiles.hollow_octagon.hollowoctagon method)": [[314, "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.hollow_octagon.hollowoctagon method)": [[315, "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params"]], "create_tile() (splinepy.microstructure.tiles.hollow_octagon.hollowoctagon method)": [[316, "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile"]], "splinepy.microstructure.tiles.hollow_octagon_extrude": [[317, "module-splinepy.microstructure.tiles.hollow_octagon_extrude"]], "hollowoctagonextrude (class in splinepy.microstructure.tiles.hollow_octagon_extrude)": [[318, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude"]], "check_param_derivatives() (splinepy.microstructure.tiles.hollow_octagon_extrude.hollowoctagonextrude method)": [[319, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.hollow_octagon_extrude.hollowoctagonextrude method)": [[320, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params"]], "closing_tile() (splinepy.microstructure.tiles.hollow_octagon_extrude.hollowoctagonextrude method)": [[321, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile"]], "create_tile() (splinepy.microstructure.tiles.hollow_octagon_extrude.hollowoctagonextrude method)": [[322, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile"]], "splinepy.microstructure.tiles.inverse_cross_3d": [[323, "module-splinepy.microstructure.tiles.inverse_cross_3d"]], "inversecross3d (class in splinepy.microstructure.tiles.inverse_cross_3d)": [[324, "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D"]], "check_param_derivatives() (splinepy.microstructure.tiles.inverse_cross_3d.inversecross3d method)": [[325, "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.inverse_cross_3d.inversecross3d method)": [[326, "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params"]], "create_tile() (splinepy.microstructure.tiles.inverse_cross_3d.inversecross3d method)": [[327, "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile"]], "splinepy.microstructure.tiles.snappy": [[328, "module-splinepy.microstructure.tiles.snappy"]], "snappy (class in splinepy.microstructure.tiles.snappy)": [[329, "splinepy.microstructure.tiles.snappy.Snappy"]], "check_param_derivatives() (splinepy.microstructure.tiles.snappy.snappy method)": [[330, "splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.snappy.snappy method)": [[331, "splinepy.microstructure.tiles.snappy.Snappy.check_params"]], "create_tile() (splinepy.microstructure.tiles.snappy.snappy method)": [[332, "splinepy.microstructure.tiles.snappy.Snappy.create_tile"]], "splinepy.microstructure.tiles.tile_base": [[333, "module-splinepy.microstructure.tiles.tile_base"]], "tilebase (class in splinepy.microstructure.tiles.tile_base)": [[334, "splinepy.microstructure.tiles.tile_base.TileBase"]], "check_param_derivatives() (splinepy.microstructure.tiles.tile_base.tilebase method)": [[335, "splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.tile_base.tilebase method)": [[336, "splinepy.microstructure.tiles.tile_base.TileBase.check_params"]], "dim (splinepy.microstructure.tiles.tile_base.tilebase property)": [[337, "splinepy.microstructure.tiles.tile_base.TileBase.dim"]], "evaluation_points (splinepy.microstructure.tiles.tile_base.tilebase property)": [[338, "splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points"]], "para_dim (splinepy.microstructure.tiles.tile_base.tilebase property)": [[339, "splinepy.microstructure.tiles.tile_base.TileBase.para_dim"]], "splinepy.multipatch": [[340, "module-splinepy.multipatch"]], "multipatch (class in splinepy.multipatch)": [[341, "splinepy.multipatch.Multipatch"]], "add_fields() (splinepy.multipatch.multipatch method)": [[342, "splinepy.multipatch.Multipatch.add_fields"]], "boundaries (splinepy.multipatch.multipatch property)": [[343, "splinepy.multipatch.Multipatch.boundaries"]], "boundaries_from_continuity() (splinepy.multipatch.multipatch method)": [[344, "splinepy.multipatch.Multipatch.boundaries_from_continuity"]], "boundary_from_function() (splinepy.multipatch.multipatch method)": [[345, "splinepy.multipatch.Multipatch.boundary_from_function"]], "boundary_multipatch() (splinepy.multipatch.multipatch method)": [[346, "splinepy.multipatch.Multipatch.boundary_multipatch"]], "boundary_patch_ids() (splinepy.multipatch.multipatch method)": [[347, "splinepy.multipatch.Multipatch.boundary_patch_ids"]], "clear() (splinepy.multipatch.multipatch method)": [[348, "splinepy.multipatch.Multipatch.clear"]], "combine_boundaries() (splinepy.multipatch.multipatch method)": [[349, "splinepy.multipatch.Multipatch.combine_boundaries"]], "control_point_offsets() (splinepy.multipatch.multipatch method)": [[350, "splinepy.multipatch.Multipatch.control_point_offsets"]], "determine_interfaces() (splinepy.multipatch.multipatch method)": [[351, "splinepy.multipatch.Multipatch.determine_interfaces"]], "dim (splinepy.multipatch.multipatch property)": [[352, "splinepy.multipatch.Multipatch.dim"]], "evaluate() (splinepy.multipatch.multipatch method)": [[353, "splinepy.multipatch.Multipatch.evaluate"]], "extract (splinepy.multipatch.multipatch property)": [[354, "splinepy.multipatch.Multipatch.extract"]], "fields (splinepy.multipatch.multipatch property)": [[355, "splinepy.multipatch.Multipatch.fields"]], "interfaces (splinepy.multipatch.multipatch property)": [[356, "splinepy.multipatch.Multipatch.interfaces"]], "para_dim (splinepy.multipatch.multipatch property)": [[357, "splinepy.multipatch.Multipatch.para_dim"]], "patches (splinepy.multipatch.multipatch property)": [[358, "splinepy.multipatch.Multipatch.patches"]], "sample() (splinepy.multipatch.multipatch method)": [[359, "splinepy.multipatch.Multipatch.sample"]], "set_boundary() (splinepy.multipatch.multipatch method)": [[360, "splinepy.multipatch.Multipatch.set_boundary"]], "show() (splinepy.multipatch.multipatch method)": [[361, "splinepy.multipatch.Multipatch.show"]], "show_options (splinepy.multipatch.multipatch property)": [[362, "splinepy.multipatch.Multipatch.show_options"]], "showable() (splinepy.multipatch.multipatch method)": [[363, "splinepy.multipatch.Multipatch.showable"]], "spline_data (splinepy.multipatch.multipatch property)": [[364, "splinepy.multipatch.Multipatch.spline_data"]], "sub_multipatch() (splinepy.multipatch.multipatch method)": [[365, "splinepy.multipatch.Multipatch.sub_multipatch"]], "sub_patch_centers (splinepy.multipatch.multipatch property)": [[366, "splinepy.multipatch.Multipatch.sub_patch_centers"]], "splinepy.nurbs": [[367, "module-splinepy.nurbs"]], "nurbs (class in splinepy.nurbs)": [[368, "splinepy.nurbs.NURBS"]], "basis() (splinepy.nurbs.nurbs method)": [[369, "splinepy.nurbs.NURBS.basis"]], "basis_and_support() (splinepy.nurbs.nurbs method)": [[370, "splinepy.nurbs.NURBS.basis_and_support"]], "basis_derivative() (splinepy.nurbs.nurbs method)": [[371, "splinepy.nurbs.NURBS.basis_derivative"]], "basis_derivative_and_support() (splinepy.nurbs.nurbs method)": [[372, "splinepy.nurbs.NURBS.basis_derivative_and_support"]], "clear() (splinepy.nurbs.nurbs method)": [[373, "splinepy.nurbs.NURBS.clear"]], "copy() (splinepy.nurbs.nurbs method)": [[374, "splinepy.nurbs.NURBS.copy"]], "current_core_properties() (splinepy.nurbs.nurbs method)": [[375, "splinepy.nurbs.NURBS.current_core_properties"]], "derivative() (splinepy.nurbs.nurbs method)": [[376, "splinepy.nurbs.NURBS.derivative"]], "elevate_degrees() (splinepy.nurbs.nurbs method)": [[377, "splinepy.nurbs.NURBS.elevate_degrees"]], "evaluate() (splinepy.nurbs.nurbs method)": [[378, "splinepy.nurbs.NURBS.evaluate"]], "export() (splinepy.nurbs.nurbs method)": [[379, "splinepy.nurbs.NURBS.export"]], "extract_bezier_patches() (splinepy.nurbs.nurbs method)": [[380, "splinepy.nurbs.NURBS.extract_bezier_patches"]], "greville_abscissae() (splinepy.nurbs.nurbs method)": [[381, "splinepy.nurbs.NURBS.greville_abscissae"]], "insert_knots() (splinepy.nurbs.nurbs method)": [[382, "splinepy.nurbs.NURBS.insert_knots"]], "jacobian() (splinepy.nurbs.nurbs method)": [[383, "splinepy.nurbs.NURBS.jacobian"]], "knot_insertion_matrix() (splinepy.nurbs.nurbs method)": [[384, "splinepy.nurbs.NURBS.knot_insertion_matrix"]], "mapper() (splinepy.nurbs.nurbs method)": [[385, "splinepy.nurbs.NURBS.mapper"]], "normalize_knot_vectors() (splinepy.nurbs.nurbs method)": [[386, "splinepy.nurbs.NURBS.normalize_knot_vectors"]], "nurbs (splinepy.nurbs.nurbs property)": [[387, "splinepy.nurbs.NURBS.nurbs"]], "proximities() (splinepy.nurbs.nurbs method)": [[388, "splinepy.nurbs.NURBS.proximities"]], "reduce_degrees() (splinepy.nurbs.nurbs method)": [[389, "splinepy.nurbs.NURBS.reduce_degrees"]], "remove_knots() (splinepy.nurbs.nurbs method)": [[390, "splinepy.nurbs.NURBS.remove_knots"]], "sample() (splinepy.nurbs.nurbs method)": [[391, "splinepy.nurbs.NURBS.sample"]], "show() (splinepy.nurbs.nurbs method)": [[392, "splinepy.nurbs.NURBS.show"]], "showable() (splinepy.nurbs.nurbs method)": [[393, "splinepy.nurbs.NURBS.showable"]], "support() (splinepy.nurbs.nurbs method)": [[394, "splinepy.nurbs.NURBS.support"]], "todict() (splinepy.nurbs.nurbs method)": [[395, "splinepy.nurbs.NURBS.todict"]], "splinepy.rational_bezier": [[396, "module-splinepy.rational_bezier"]], "rationalbezier (class in splinepy.rational_bezier)": [[397, "splinepy.rational_bezier.RationalBezier"]], "basis() (splinepy.rational_bezier.rationalbezier method)": [[398, "splinepy.rational_bezier.RationalBezier.basis"]], "basis_and_support() (splinepy.rational_bezier.rationalbezier method)": [[399, "splinepy.rational_bezier.RationalBezier.basis_and_support"]], "basis_derivative() (splinepy.rational_bezier.rationalbezier method)": [[400, "splinepy.rational_bezier.RationalBezier.basis_derivative"]], "basis_derivative_and_support() (splinepy.rational_bezier.rationalbezier method)": [[401, "splinepy.rational_bezier.RationalBezier.basis_derivative_and_support"]], "clear() (splinepy.rational_bezier.rationalbezier method)": [[402, "splinepy.rational_bezier.RationalBezier.clear"]], "compose() (splinepy.rational_bezier.rationalbezier method)": [[403, "splinepy.rational_bezier.RationalBezier.compose"]], "composition_derivative() (splinepy.rational_bezier.rationalbezier method)": [[404, "splinepy.rational_bezier.RationalBezier.composition_derivative"]], "copy() (splinepy.rational_bezier.rationalbezier method)": [[405, "splinepy.rational_bezier.RationalBezier.copy"]], "current_core_properties() (splinepy.rational_bezier.rationalbezier method)": [[406, "splinepy.rational_bezier.RationalBezier.current_core_properties"]], "derivative() (splinepy.rational_bezier.rationalbezier method)": [[407, "splinepy.rational_bezier.RationalBezier.derivative"]], "derivative_spline() (splinepy.rational_bezier.rationalbezier method)": [[408, "splinepy.rational_bezier.RationalBezier.derivative_spline"]], "elevate_degrees() (splinepy.rational_bezier.rationalbezier method)": [[409, "splinepy.rational_bezier.RationalBezier.elevate_degrees"]], "evaluate() (splinepy.rational_bezier.rationalbezier method)": [[410, "splinepy.rational_bezier.RationalBezier.evaluate"]], "export() (splinepy.rational_bezier.rationalbezier method)": [[411, "splinepy.rational_bezier.RationalBezier.export"]], "extract_dim() (splinepy.rational_bezier.rationalbezier method)": [[412, "splinepy.rational_bezier.RationalBezier.extract_dim"]], "greville_abscissae() (splinepy.rational_bezier.rationalbezier method)": [[413, "splinepy.rational_bezier.RationalBezier.greville_abscissae"]], "jacobian() (splinepy.rational_bezier.rationalbezier method)": [[414, "splinepy.rational_bezier.RationalBezier.jacobian"]], "mapper() (splinepy.rational_bezier.rationalbezier method)": [[415, "splinepy.rational_bezier.RationalBezier.mapper"]], "nurbs (splinepy.rational_bezier.rationalbezier property)": [[416, "splinepy.rational_bezier.RationalBezier.nurbs"]], "proximities() (splinepy.rational_bezier.rationalbezier method)": [[417, "splinepy.rational_bezier.RationalBezier.proximities"]], "rationalbezier (splinepy.rational_bezier.rationalbezier property)": [[418, "splinepy.rational_bezier.RationalBezier.rationalbezier"]], "reduce_degrees() (splinepy.rational_bezier.rationalbezier method)": [[419, "splinepy.rational_bezier.RationalBezier.reduce_degrees"]], "sample() (splinepy.rational_bezier.rationalbezier method)": [[420, "splinepy.rational_bezier.RationalBezier.sample"]], "show() (splinepy.rational_bezier.rationalbezier method)": [[421, "splinepy.rational_bezier.RationalBezier.show"]], "showable() (splinepy.rational_bezier.rationalbezier method)": [[422, "splinepy.rational_bezier.RationalBezier.showable"]], "split() (splinepy.rational_bezier.rationalbezier method)": [[423, "splinepy.rational_bezier.RationalBezier.split"]], "support() (splinepy.rational_bezier.rationalbezier method)": [[424, "splinepy.rational_bezier.RationalBezier.support"]], "todict() (splinepy.rational_bezier.rationalbezier method)": [[425, "splinepy.rational_bezier.RationalBezier.todict"]], "splinepy.settings": [[426, "module-splinepy.settings"]], "check_bounds (in module splinepy.settings)": [[427, "splinepy.settings.CHECK_BOUNDS"]], "name_to_type (in module splinepy.settings)": [[428, "splinepy.settings.NAME_TO_TYPE"]], "nthreads (in module splinepy.settings)": [[429, "splinepy.settings.NTHREADS"]], "tolerance (in module splinepy.settings)": [[430, "splinepy.settings.TOLERANCE"]], "splinepy.spline": [[431, "module-splinepy.spline"]], "requiredproperties (class in splinepy.spline)": [[432, "splinepy.spline.RequiredProperties"]], "intersection() (splinepy.spline.requiredproperties class method)": [[433, "splinepy.spline.RequiredProperties.intersection"]], "of() (splinepy.spline.requiredproperties class method)": [[434, "splinepy.spline.RequiredProperties.of"]], "union() (splinepy.spline.requiredproperties class method)": [[435, "splinepy.spline.RequiredProperties.union"]], "spline (class in splinepy.spline)": [[436, "splinepy.spline.Spline"]], "basis() (splinepy.spline.spline method)": [[437, "splinepy.spline.Spline.basis"]], "basis_and_support() (splinepy.spline.spline method)": [[438, "splinepy.spline.Spline.basis_and_support"]], "basis_derivative() (splinepy.spline.spline method)": [[439, "splinepy.spline.Spline.basis_derivative"]], "basis_derivative_and_support() (splinepy.spline.spline method)": [[440, "splinepy.spline.Spline.basis_derivative_and_support"]], "check (splinepy.spline.spline property)": [[441, "splinepy.spline.Spline.check"]], "clear() (splinepy.spline.spline method)": [[442, "splinepy.spline.Spline.clear"]], "control_mesh_resolutions (splinepy.spline.spline property)": [[443, "splinepy.spline.Spline.control_mesh_resolutions"]], "control_point_bounds (splinepy.spline.spline property)": [[444, "splinepy.spline.Spline.control_point_bounds"]], "control_points (splinepy.spline.spline property)": [[445, "splinepy.spline.Spline.control_points"]], "copy() (splinepy.spline.spline method)": [[446, "splinepy.spline.Spline.copy"]], "cps (splinepy.spline.spline property)": [[447, "splinepy.spline.Spline.cps"]], "create (splinepy.spline.spline property)": [[448, "splinepy.spline.Spline.create"]], "current_core_properties() (splinepy.spline.spline method)": [[449, "splinepy.spline.Spline.current_core_properties"]], "degrees (splinepy.spline.spline property)": [[450, "splinepy.spline.Spline.degrees"]], "derivative() (splinepy.spline.spline method)": [[451, "splinepy.spline.Spline.derivative"]], "dim (splinepy.spline.spline property)": [[452, "splinepy.spline.Spline.dim"]], "ds (splinepy.spline.spline property)": [[453, "splinepy.spline.Spline.ds"]], "elevate_degrees() (splinepy.spline.spline method)": [[454, "splinepy.spline.Spline.elevate_degrees"]], "evaluate() (splinepy.spline.spline method)": [[455, "splinepy.spline.Spline.evaluate"]], "export() (splinepy.spline.spline method)": [[456, "splinepy.spline.Spline.export"]], "extract (splinepy.spline.spline property)": [[457, "splinepy.spline.Spline.extract"]], "greville_abscissae() (splinepy.spline.spline method)": [[458, "splinepy.spline.Spline.greville_abscissae"]], "has_knot_vectors (splinepy.spline.spline property)": [[459, "splinepy.spline.Spline.has_knot_vectors"]], "integrate (splinepy.spline.spline property)": [[460, "splinepy.spline.Spline.integrate"]], "is_rational (splinepy.spline.spline property)": [[461, "splinepy.spline.Spline.is_rational"]], "jacobian() (splinepy.spline.spline method)": [[462, "splinepy.spline.Spline.jacobian"]], "knot_multiplicities (splinepy.spline.spline property)": [[463, "splinepy.spline.Spline.knot_multiplicities"]], "knot_vectors (splinepy.spline.spline property)": [[464, "splinepy.spline.Spline.knot_vectors"]], "kvs (splinepy.spline.spline property)": [[465, "splinepy.spline.Spline.kvs"]], "mapper() (splinepy.spline.spline method)": [[466, "splinepy.spline.Spline.mapper"]], "multi_index (splinepy.spline.spline property)": [[467, "splinepy.spline.Spline.multi_index"]], "name (splinepy.spline.spline property)": [[468, "splinepy.spline.Spline.name"]], "para_dim (splinepy.spline.spline property)": [[469, "splinepy.spline.Spline.para_dim"]], "parametric_bounds (splinepy.spline.spline property)": [[470, "splinepy.spline.Spline.parametric_bounds"]], "proximities() (splinepy.spline.spline method)": [[471, "splinepy.spline.Spline.proximities"]], "reduce_degrees() (splinepy.spline.spline method)": [[472, "splinepy.spline.Spline.reduce_degrees"]], "required_properties (splinepy.spline.spline property)": [[473, "splinepy.spline.Spline.required_properties"]], "sample() (splinepy.spline.spline method)": [[474, "splinepy.spline.Spline.sample"]], "show() (splinepy.spline.spline method)": [[475, "splinepy.spline.Spline.show"]], "show_options (splinepy.spline.spline property)": [[476, "splinepy.spline.Spline.show_options"]], "showable() (splinepy.spline.spline method)": [[477, "splinepy.spline.Spline.showable"]], "spline_data (splinepy.spline.spline property)": [[478, "splinepy.spline.Spline.spline_data"]], "support() (splinepy.spline.spline method)": [[479, "splinepy.spline.Spline.support"]], "todict() (splinepy.spline.spline method)": [[480, "splinepy.spline.Spline.todict"]], "unique_knots (splinepy.spline.spline property)": [[481, "splinepy.spline.Spline.unique_knots"]], "weights (splinepy.spline.spline property)": [[482, "splinepy.spline.Spline.weights"]], "whatami (splinepy.spline.spline property)": [[483, "splinepy.spline.Spline.whatami"]], "ws (splinepy.spline.spline property)": [[484, "splinepy.spline.Spline.ws"]], "splinepy.splinepy_core": [[485, "module-splinepy.splinepy_core"]], "controlpointpointers (class in splinepy.splinepy_core)": [[486, "splinepy.splinepy_core.ControlPointPointers"]], "dim() (splinepy.splinepy_core.controlpointpointers method)": [[487, "splinepy.splinepy_core.ControlPointPointers.dim"]], "len() (splinepy.splinepy_core.controlpointpointers method)": [[488, "splinepy.splinepy_core.ControlPointPointers.len"]], "set_row() (splinepy.splinepy_core.controlpointpointers method)": [[489, "splinepy.splinepy_core.ControlPointPointers.set_row"]], "set_rows() (splinepy.splinepy_core.controlpointpointers method)": [[490, "splinepy.splinepy_core.ControlPointPointers.set_rows"]], "sync() (splinepy.splinepy_core.controlpointpointers method)": [[491, "splinepy.splinepy_core.ControlPointPointers.sync"]], "sync_rows() (splinepy.splinepy_core.controlpointpointers method)": [[492, "splinepy.splinepy_core.ControlPointPointers.sync_rows"]], "knotvector (class in splinepy.splinepy_core)": [[493, "splinepy.splinepy_core.KnotVector"]], "find_span() (splinepy.splinepy_core.knotvector method)": [[494, "splinepy.splinepy_core.KnotVector.find_span"]], "multiplicities() (splinepy.splinepy_core.knotvector method)": [[495, "splinepy.splinepy_core.KnotVector.multiplicities"]], "numpy() (splinepy.splinepy_core.knotvector method)": [[496, "splinepy.splinepy_core.KnotVector.numpy"]], "scale() (splinepy.splinepy_core.knotvector method)": [[497, "splinepy.splinepy_core.KnotVector.scale"]], "unique() (splinepy.splinepy_core.knotvector method)": [[498, "splinepy.splinepy_core.KnotVector.unique"]], "pymultipatch (class in splinepy.splinepy_core)": [[499, "splinepy.splinepy_core.PyMultipatch"]], "add_fields() (splinepy.splinepy_core.pymultipatch method)": [[500, "splinepy.splinepy_core.PyMultipatch.add_fields"]], "boundary_multipatch() (splinepy.splinepy_core.pymultipatch method)": [[501, "splinepy.splinepy_core.PyMultipatch.boundary_multipatch"]], "boundary_patch_ids() (splinepy.splinepy_core.pymultipatch method)": [[502, "splinepy.splinepy_core.PyMultipatch.boundary_patch_ids"]], "clear() (splinepy.splinepy_core.pymultipatch method)": [[503, "splinepy.splinepy_core.PyMultipatch.clear"]], "control_point_offsets() (splinepy.splinepy_core.pymultipatch method)": [[504, "splinepy.splinepy_core.PyMultipatch.control_point_offsets"]], "control_points (splinepy.splinepy_core.pymultipatch property)": [[505, "splinepy.splinepy_core.PyMultipatch.control_points"]], "dim (splinepy.splinepy_core.pymultipatch property)": [[506, "splinepy.splinepy_core.PyMultipatch.dim"]], "evaluate() (splinepy.splinepy_core.pymultipatch method)": [[507, "splinepy.splinepy_core.PyMultipatch.evaluate"]], "fields() (splinepy.splinepy_core.pymultipatch method)": [[508, "splinepy.splinepy_core.PyMultipatch.fields"]], "interfaces() (splinepy.splinepy_core.pymultipatch method)": [[509, "splinepy.splinepy_core.PyMultipatch.interfaces"]], "n_default_threads (splinepy.splinepy_core.pymultipatch property)": [[510, "splinepy.splinepy_core.PyMultipatch.n_default_threads"]], "name (splinepy.splinepy_core.pymultipatch property)": [[511, "splinepy.splinepy_core.PyMultipatch.name"]], "para_dim (splinepy.splinepy_core.pymultipatch property)": [[512, "splinepy.splinepy_core.PyMultipatch.para_dim"]], "patches (splinepy.splinepy_core.pymultipatch property)": [[513, "splinepy.splinepy_core.PyMultipatch.patches"]], "same_parametric_bounds (splinepy.splinepy_core.pymultipatch property)": [[514, "splinepy.splinepy_core.PyMultipatch.same_parametric_bounds"]], "sample() (splinepy.splinepy_core.pymultipatch method)": [[515, "splinepy.splinepy_core.PyMultipatch.sample"]], "sub_multipatch() (splinepy.splinepy_core.pymultipatch method)": [[516, "splinepy.splinepy_core.PyMultipatch.sub_multipatch"]], "sub_patch_centers() (splinepy.splinepy_core.pymultipatch method)": [[517, "splinepy.splinepy_core.PyMultipatch.sub_patch_centers"]], "tolerance (splinepy.splinepy_core.pymultipatch property)": [[518, "splinepy.splinepy_core.PyMultipatch.tolerance"]], "whatami (splinepy.splinepy_core.pymultipatch property)": [[519, "splinepy.splinepy_core.PyMultipatch.whatami"]], "pyspline (class in splinepy.splinepy_core)": [[520, "splinepy.splinepy_core.PySpline"]], "basis() (splinepy.splinepy_core.pyspline method)": [[521, "splinepy.splinepy_core.PySpline.basis"]], "basis_and_support() (splinepy.splinepy_core.pyspline method)": [[522, "splinepy.splinepy_core.PySpline.basis_and_support"]], "basis_derivative() (splinepy.splinepy_core.pyspline method)": [[523, "splinepy.splinepy_core.PySpline.basis_derivative"]], "basis_derivative_and_support() (splinepy.splinepy_core.pyspline method)": [[524, "splinepy.splinepy_core.PySpline.basis_derivative_and_support"]], "control_mesh_resolutions (splinepy.splinepy_core.pyspline property)": [[525, "splinepy.splinepy_core.PySpline.control_mesh_resolutions"]], "current_core_properties() (splinepy.splinepy_core.pyspline method)": [[526, "splinepy.splinepy_core.PySpline.current_core_properties"]], "derivative() (splinepy.splinepy_core.pyspline method)": [[527, "splinepy.splinepy_core.PySpline.derivative"]], "dim (splinepy.splinepy_core.pyspline property)": [[528, "splinepy.splinepy_core.PySpline.dim"]], "elevate_degrees() (splinepy.splinepy_core.pyspline method)": [[529, "splinepy.splinepy_core.PySpline.elevate_degrees"]], "evaluate() (splinepy.splinepy_core.pyspline method)": [[530, "splinepy.splinepy_core.PySpline.evaluate"]], "has_knot_vectors (splinepy.splinepy_core.pyspline property)": [[531, "splinepy.splinepy_core.PySpline.has_knot_vectors"]], "is_rational (splinepy.splinepy_core.pyspline property)": [[532, "splinepy.splinepy_core.PySpline.is_rational"]], "jacobian() (splinepy.splinepy_core.pyspline method)": [[533, "splinepy.splinepy_core.PySpline.jacobian"]], "name (splinepy.splinepy_core.pyspline property)": [[534, "splinepy.splinepy_core.PySpline.name"]], "para_dim (splinepy.splinepy_core.pyspline property)": [[535, "splinepy.splinepy_core.PySpline.para_dim"]], "parametric_bounds (splinepy.splinepy_core.pyspline property)": [[536, "splinepy.splinepy_core.PySpline.parametric_bounds"]], "proximities() (splinepy.splinepy_core.pyspline method)": [[537, "splinepy.splinepy_core.PySpline.proximities"]], "reduce_degrees() (splinepy.splinepy_core.pyspline method)": [[538, "splinepy.splinepy_core.PySpline.reduce_degrees"]], "sample() (splinepy.splinepy_core.pyspline method)": [[539, "splinepy.splinepy_core.PySpline.sample"]], "support() (splinepy.splinepy_core.pyspline method)": [[540, "splinepy.splinepy_core.PySpline.support"]], "whatami (splinepy.splinepy_core.pyspline property)": [[541, "splinepy.splinepy_core.PySpline.whatami"]], "weightpointers (class in splinepy.splinepy_core)": [[542, "splinepy.splinepy_core.WeightPointers"]], "dim() (splinepy.splinepy_core.weightpointers method)": [[543, "splinepy.splinepy_core.WeightPointers.dim"]], "len() (splinepy.splinepy_core.weightpointers method)": [[544, "splinepy.splinepy_core.WeightPointers.len"]], "set_row() (splinepy.splinepy_core.weightpointers method)": [[545, "splinepy.splinepy_core.WeightPointers.set_row"]], "set_rows() (splinepy.splinepy_core.weightpointers method)": [[546, "splinepy.splinepy_core.WeightPointers.set_rows"]], "sync() (splinepy.splinepy_core.weightpointers method)": [[547, "splinepy.splinepy_core.WeightPointers.sync"]], "sync_rows() (splinepy.splinepy_core.weightpointers method)": [[548, "splinepy.splinepy_core.WeightPointers.sync_rows"]], "add() (in module splinepy.splinepy_core)": [[549, "splinepy.splinepy_core.add"]], "annul_core() (in module splinepy.splinepy_core)": [[550, "splinepy.splinepy_core.annul_core"]], "approximate_curve() (in module splinepy.splinepy_core)": [[551, "splinepy.splinepy_core.approximate_curve"]], "approximate_surface() (in module splinepy.splinepy_core)": [[552, "splinepy.splinepy_core.approximate_surface"]], "bezier_extraction_matrix() (in module splinepy.splinepy_core)": [[553, "splinepy.splinepy_core.bezier_extraction_matrix"]], "boundaries_from_continuity() (in module splinepy.splinepy_core)": [[554, "splinepy.splinepy_core.boundaries_from_continuity"]], "boundary_centers() (in module splinepy.splinepy_core)": [[555, "splinepy.splinepy_core.boundary_centers"]], "build_type() (in module splinepy.splinepy_core)": [[556, "splinepy.splinepy_core.build_type"]], "compose() (in module splinepy.splinepy_core)": [[557, "splinepy.splinepy_core.compose"]], "compose_sensitivities() (in module splinepy.splinepy_core)": [[558, "splinepy.splinepy_core.compose_sensitivities"]], "composition_derivative() (in module splinepy.splinepy_core)": [[559, "splinepy.splinepy_core.composition_derivative"]], "core_id() (in module splinepy.splinepy_core)": [[560, "splinepy.splinepy_core.core_id"]], "core_ref_count() (in module splinepy.splinepy_core)": [[561, "splinepy.splinepy_core.core_ref_count"]], "derivative_spline() (in module splinepy.splinepy_core)": [[562, "splinepy.splinepy_core.derivative_spline"]], "export_iges() (in module splinepy.splinepy_core)": [[563, "splinepy.splinepy_core.export_iges"]], "extract_all_boundary_splines() (in module splinepy.splinepy_core)": [[564, "splinepy.splinepy_core.extract_all_boundary_splines"]], "extract_bezier_patches() (in module splinepy.splinepy_core)": [[565, "splinepy.splinepy_core.extract_bezier_patches"]], "extract_boundaries() (in module splinepy.splinepy_core)": [[566, "splinepy.splinepy_core.extract_boundaries"]], "extract_dim() (in module splinepy.splinepy_core)": [[567, "splinepy.splinepy_core.extract_dim"]], "global_knot_insertion_matrix() (in module splinepy.splinepy_core)": [[568, "splinepy.splinepy_core.global_knot_insertion_matrix"]], "has_core() (in module splinepy.splinepy_core)": [[569, "splinepy.splinepy_core.has_core"]], "insert_knots() (in module splinepy.splinepy_core)": [[570, "splinepy.splinepy_core.insert_knots"]], "interfaces_from_boundary_centers() (in module splinepy.splinepy_core)": [[571, "splinepy.splinepy_core.interfaces_from_boundary_centers"]], "interpolate_curve() (in module splinepy.splinepy_core)": [[572, "splinepy.splinepy_core.interpolate_curve"]], "interpolate_surface() (in module splinepy.splinepy_core)": [[573, "splinepy.splinepy_core.interpolate_surface"]], "is_minimal() (in module splinepy.splinepy_core)": [[574, "splinepy.splinepy_core.is_minimal"]], "knot_insertion_matrix() (in module splinepy.splinepy_core)": [[575, "splinepy.splinepy_core.knot_insertion_matrix"]], "multiply() (in module splinepy.splinepy_core)": [[576, "splinepy.splinepy_core.multiply"]], "null_spline() (in module splinepy.splinepy_core)": [[577, "splinepy.splinepy_core.null_spline"]], "orientations() (in module splinepy.splinepy_core)": [[578, "splinepy.splinepy_core.orientations"]], "read_iges() (in module splinepy.splinepy_core)": [[579, "splinepy.splinepy_core.read_iges"]], "remove_knots() (in module splinepy.splinepy_core)": [[580, "splinepy.splinepy_core.remove_knots"]], "same_spline_with_knot_vectors() (in module splinepy.splinepy_core)": [[581, "splinepy.splinepy_core.same_spline_with_knot_vectors"]], "split() (in module splinepy.splinepy_core)": [[582, "splinepy.splinepy_core.split"]], "to_derived() (in module splinepy)": [[583, "splinepy.to_derived"]], "splinepy.utils": [[584, "module-splinepy.utils"]], "splinepy.utils.data": [[585, "module-splinepy.utils.data"]], "multipatchdata (class in splinepy.utils.data)": [[586, "splinepy.utils.data.MultipatchData"]], "as_arrow() (splinepy.utils.data.multipatchdata method)": [[587, "splinepy.utils.data.MultipatchData.as_arrow"]], "as_scalar() (splinepy.utils.data.multipatchdata method)": [[588, "splinepy.utils.data.MultipatchData.as_scalar"]], "clear() (splinepy.utils.data.multipatchdata method)": [[589, "splinepy.utils.data.MultipatchData.clear"]], "get() (splinepy.utils.data.multipatchdata method)": [[590, "splinepy.utils.data.MultipatchData.get"]], "items() (splinepy.utils.data.multipatchdata method)": [[591, "splinepy.utils.data.MultipatchData.items"]], "keys() (splinepy.utils.data.multipatchdata method)": [[592, "splinepy.utils.data.MultipatchData.keys"]], "pop() (splinepy.utils.data.multipatchdata method)": [[593, "splinepy.utils.data.MultipatchData.pop"]], "values() (splinepy.utils.data.multipatchdata method)": [[594, "splinepy.utils.data.MultipatchData.values"]], "physicalspacearray (class in splinepy.utils.data)": [[595, "splinepy.utils.data.PhysicalSpaceArray"]], "all() (splinepy.utils.data.physicalspacearray method)": [[596, "splinepy.utils.data.PhysicalSpaceArray.all"]], "any() (splinepy.utils.data.physicalspacearray method)": [[597, "splinepy.utils.data.PhysicalSpaceArray.any"]], "argmax() (splinepy.utils.data.physicalspacearray method)": [[598, "splinepy.utils.data.PhysicalSpaceArray.argmax"]], "argmin() (splinepy.utils.data.physicalspacearray method)": [[599, "splinepy.utils.data.PhysicalSpaceArray.argmin"]], "argpartition() (splinepy.utils.data.physicalspacearray method)": [[600, "splinepy.utils.data.PhysicalSpaceArray.argpartition"]], "argsort() (splinepy.utils.data.physicalspacearray method)": [[601, "splinepy.utils.data.PhysicalSpaceArray.argsort"]], "astype() (splinepy.utils.data.physicalspacearray method)": [[602, "splinepy.utils.data.PhysicalSpaceArray.astype"]], "byteswap() (splinepy.utils.data.physicalspacearray method)": [[603, "splinepy.utils.data.PhysicalSpaceArray.byteswap"]], "choose() (splinepy.utils.data.physicalspacearray method)": [[604, "splinepy.utils.data.PhysicalSpaceArray.choose"]], "clip() (splinepy.utils.data.physicalspacearray method)": [[605, "splinepy.utils.data.PhysicalSpaceArray.clip"]], "compress() (splinepy.utils.data.physicalspacearray method)": [[606, "splinepy.utils.data.PhysicalSpaceArray.compress"]], "conj() (splinepy.utils.data.physicalspacearray method)": [[607, "splinepy.utils.data.PhysicalSpaceArray.conj"]], "conjugate() (splinepy.utils.data.physicalspacearray method)": [[608, "splinepy.utils.data.PhysicalSpaceArray.conjugate"]], "copy() (splinepy.utils.data.physicalspacearray method)": [[609, "splinepy.utils.data.PhysicalSpaceArray.copy"]], "cumprod() (splinepy.utils.data.physicalspacearray method)": [[610, "splinepy.utils.data.PhysicalSpaceArray.cumprod"]], "cumsum() (splinepy.utils.data.physicalspacearray method)": [[611, "splinepy.utils.data.PhysicalSpaceArray.cumsum"]], "diagonal() (splinepy.utils.data.physicalspacearray method)": [[612, "splinepy.utils.data.PhysicalSpaceArray.diagonal"]], "dot() (splinepy.utils.data.physicalspacearray method)": [[613, "splinepy.utils.data.PhysicalSpaceArray.dot"]], "dump() (splinepy.utils.data.physicalspacearray method)": [[614, "splinepy.utils.data.PhysicalSpaceArray.dump"]], "dumps() (splinepy.utils.data.physicalspacearray method)": [[615, "splinepy.utils.data.PhysicalSpaceArray.dumps"]], "fill() (splinepy.utils.data.physicalspacearray method)": [[616, "splinepy.utils.data.PhysicalSpaceArray.fill"]], "flatten() (splinepy.utils.data.physicalspacearray method)": [[617, "splinepy.utils.data.PhysicalSpaceArray.flatten"]], "full_row_indices() (splinepy.utils.data.physicalspacearray method)": [[618, "splinepy.utils.data.PhysicalSpaceArray.full_row_indices"]], "getfield() (splinepy.utils.data.physicalspacearray method)": [[619, "splinepy.utils.data.PhysicalSpaceArray.getfield"]], "item() (splinepy.utils.data.physicalspacearray method)": [[620, "splinepy.utils.data.PhysicalSpaceArray.item"]], "itemset() (splinepy.utils.data.physicalspacearray method)": [[621, "splinepy.utils.data.PhysicalSpaceArray.itemset"]], "max() (splinepy.utils.data.physicalspacearray method)": [[622, "splinepy.utils.data.PhysicalSpaceArray.max"]], "mean() (splinepy.utils.data.physicalspacearray method)": [[623, "splinepy.utils.data.PhysicalSpaceArray.mean"]], "min() (splinepy.utils.data.physicalspacearray method)": [[624, "splinepy.utils.data.PhysicalSpaceArray.min"]], "newbyteorder() (splinepy.utils.data.physicalspacearray method)": [[625, "splinepy.utils.data.PhysicalSpaceArray.newbyteorder"]], "nonzero() (splinepy.utils.data.physicalspacearray method)": [[626, "splinepy.utils.data.PhysicalSpaceArray.nonzero"]], "partition() (splinepy.utils.data.physicalspacearray method)": [[627, "splinepy.utils.data.PhysicalSpaceArray.partition"]], "prod() (splinepy.utils.data.physicalspacearray method)": [[628, "splinepy.utils.data.PhysicalSpaceArray.prod"]], "ptp() (splinepy.utils.data.physicalspacearray method)": [[629, "splinepy.utils.data.PhysicalSpaceArray.ptp"]], "put() (splinepy.utils.data.physicalspacearray method)": [[630, "splinepy.utils.data.PhysicalSpaceArray.put"]], "ravel() (splinepy.utils.data.physicalspacearray method)": [[631, "splinepy.utils.data.PhysicalSpaceArray.ravel"]], "repeat() (splinepy.utils.data.physicalspacearray method)": [[632, "splinepy.utils.data.PhysicalSpaceArray.repeat"]], "reshape() (splinepy.utils.data.physicalspacearray method)": [[633, "splinepy.utils.data.PhysicalSpaceArray.reshape"]], "resize() (splinepy.utils.data.physicalspacearray method)": [[634, "splinepy.utils.data.PhysicalSpaceArray.resize"]], "round() (splinepy.utils.data.physicalspacearray method)": [[635, "splinepy.utils.data.PhysicalSpaceArray.round"]], "row_indices() (splinepy.utils.data.physicalspacearray method)": [[636, "splinepy.utils.data.PhysicalSpaceArray.row_indices"]], "searchsorted() (splinepy.utils.data.physicalspacearray method)": [[637, "splinepy.utils.data.PhysicalSpaceArray.searchsorted"]], "setfield() (splinepy.utils.data.physicalspacearray method)": [[638, "splinepy.utils.data.PhysicalSpaceArray.setfield"]], "setflags() (splinepy.utils.data.physicalspacearray method)": [[639, "splinepy.utils.data.PhysicalSpaceArray.setflags"]], "sort() (splinepy.utils.data.physicalspacearray method)": [[640, "splinepy.utils.data.PhysicalSpaceArray.sort"]], "squeeze() (splinepy.utils.data.physicalspacearray method)": [[641, "splinepy.utils.data.PhysicalSpaceArray.squeeze"]], "std() (splinepy.utils.data.physicalspacearray method)": [[642, "splinepy.utils.data.PhysicalSpaceArray.std"]], "sum() (splinepy.utils.data.physicalspacearray method)": [[643, "splinepy.utils.data.PhysicalSpaceArray.sum"]], "swapaxes() (splinepy.utils.data.physicalspacearray method)": [[644, "splinepy.utils.data.PhysicalSpaceArray.swapaxes"]], "take() (splinepy.utils.data.physicalspacearray method)": [[645, "splinepy.utils.data.PhysicalSpaceArray.take"]], "tobytes() (splinepy.utils.data.physicalspacearray method)": [[646, "splinepy.utils.data.PhysicalSpaceArray.tobytes"]], "tofile() (splinepy.utils.data.physicalspacearray method)": [[647, "splinepy.utils.data.PhysicalSpaceArray.tofile"]], "tolist() (splinepy.utils.data.physicalspacearray method)": [[648, "splinepy.utils.data.PhysicalSpaceArray.tolist"]], "tostring() (splinepy.utils.data.physicalspacearray method)": [[649, "splinepy.utils.data.PhysicalSpaceArray.tostring"]], "trace() (splinepy.utils.data.physicalspacearray method)": [[650, "splinepy.utils.data.PhysicalSpaceArray.trace"]], "transpose() (splinepy.utils.data.physicalspacearray method)": [[651, "splinepy.utils.data.PhysicalSpaceArray.transpose"]], "var() (splinepy.utils.data.physicalspacearray method)": [[652, "splinepy.utils.data.PhysicalSpaceArray.var"]], "view() (splinepy.utils.data.physicalspacearray method)": [[653, "splinepy.utils.data.PhysicalSpaceArray.view"]], "splinedata (class in splinepy.utils.data)": [[654, "splinepy.utils.data.SplineData"]], "as_arrow() (splinepy.utils.data.splinedata method)": [[655, "splinepy.utils.data.SplineData.as_arrow"]], "as_scalar() (splinepy.utils.data.splinedata method)": [[656, "splinepy.utils.data.SplineData.as_scalar"]], "clear() (splinepy.utils.data.splinedata method)": [[657, "splinepy.utils.data.SplineData.clear"]], "get() (splinepy.utils.data.splinedata method)": [[658, "splinepy.utils.data.SplineData.get"]], "items() (splinepy.utils.data.splinedata method)": [[659, "splinepy.utils.data.SplineData.items"]], "keys() (splinepy.utils.data.splinedata method)": [[660, "splinepy.utils.data.SplineData.keys"]], "pop() (splinepy.utils.data.splinedata method)": [[661, "splinepy.utils.data.SplineData.pop"]], "values() (splinepy.utils.data.splinedata method)": [[662, "splinepy.utils.data.SplineData.values"]], "splinedataadaptor (class in splinepy.utils.data)": [[663, "splinepy.utils.data.SplineDataAdaptor"]], "arrow_data_only (splinepy.utils.data.splinedataadaptor attribute)": [[664, "splinepy.utils.data.SplineDataAdaptor.arrow_data_only"]], "as_vertex_data() (splinepy.utils.data.splinedataadaptor method)": [[665, "splinepy.utils.data.SplineDataAdaptor.as_vertex_data"]], "data (splinepy.utils.data.splinedataadaptor attribute)": [[666, "splinepy.utils.data.SplineDataAdaptor.data"]], "function (splinepy.utils.data.splinedataadaptor attribute)": [[667, "splinepy.utils.data.SplineDataAdaptor.function"]], "has_evaluate (splinepy.utils.data.splinedataadaptor attribute)": [[668, "splinepy.utils.data.SplineDataAdaptor.has_evaluate"]], "has_function (splinepy.utils.data.splinedataadaptor attribute)": [[669, "splinepy.utils.data.SplineDataAdaptor.has_function"]], "has_locations (splinepy.utils.data.splinedataadaptor attribute)": [[670, "splinepy.utils.data.SplineDataAdaptor.has_locations"]], "is_spline (splinepy.utils.data.splinedataadaptor attribute)": [[671, "splinepy.utils.data.SplineDataAdaptor.is_spline"]], "locations (splinepy.utils.data.splinedataadaptor attribute)": [[672, "splinepy.utils.data.SplineDataAdaptor.locations"]], "parametric_bounds (splinepy.utils.data.splinedataadaptor attribute)": [[673, "splinepy.utils.data.SplineDataAdaptor.parametric_bounds"]], "cartesian_product() (in module splinepy.utils.data)": [[674, "splinepy.utils.data.cartesian_product"]], "enforce_contiguous() (in module splinepy.utils.data)": [[675, "splinepy.utils.data.enforce_contiguous"]], "enforce_contiguous_values() (in module splinepy.utils.data)": [[676, "splinepy.utils.data.enforce_contiguous_values"]], "make_matrix() (in module splinepy.utils.data)": [[677, "splinepy.utils.data.make_matrix"]], "uniform_query() (in module splinepy.utils.data)": [[678, "splinepy.utils.data.uniform_query"]], "splinepy.utils.log": [[679, "module-splinepy.utils.log"]], "configure() (in module splinepy.utils.log)": [[680, "splinepy.utils.log.configure"]], "debug() (in module splinepy.utils.log)": [[681, "splinepy.utils.log.debug"]], "info() (in module splinepy.utils.log)": [[682, "splinepy.utils.log.info"]], "prepend_log() (in module splinepy.utils.log)": [[683, "splinepy.utils.log.prepend_log"]], "warning() (in module splinepy.utils.log)": [[684, "splinepy.utils.log.warning"]]}})